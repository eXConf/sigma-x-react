{"version":3,"sources":["reducers/settingsReducer.js","reducers/gameReducer.js","reducers/index.js","actions/types.js","history.js","actions/index.js","components/Menu.js","components/Subject.js","components/Price.js","components/Question.js","components/SubjectBlock.js","components/helpers.js","components/SummaryBlock.js","components/PlayerControl.js","components/ControlsBlock.js","components/NavigationBlock.js","components/PackageBlock.js","components/Game.js","components/NewGame.js","components/SubjectsList.js","components/Graph.js","components/About.js","components/Themes.js","components/App.js","index.js"],"names":["INITITAL_STATE","numberOfPlayers","numberOfQuestions","priceMultiplier","uiWidth","activeTheme","themes","name","colors","players","currentQuestionNum","packageText","subjects","subjectNames","combineReducers","settings","state","action","payload","type","game","createMemoryHistory","setCurrentQuestionNum","num","dispatch","saveStateToLocalStorage","setUIGameWidth","width","getState","gameWidth","playerScoreWidth","numOfPlayers","document","documentElement","style","setProperty","setTheme","id","undefined","keys","forEach","color","index","allowRecording","setTimeout","console","log","localStorage","setItem","JSON","stringify","Menu","className","onClick","props","switchMenuState","to","exact","activeClassName","React","Component","Subject","Fragment","colSpan","this","subjectName","connect","Price","price","Question","renderPlayerScoreCell","Array","map","el","key","getPlayerScore","player","questionID","answers","isActive","SubjectBlock","renderSubject","subjectID","renderQuestions","copyToClipboard","text","dummy","createElement","body","appendChild","setAttribute","getElementById","value","select","setSelectionRange","execCommand","removeChild","SummaryBlock","renderPlayerResults","results","calcPlayerResults","sum","correct","incorrect","renderPlayerSum","scores","length","reduce","acc","current","filter","score","getAllPlayersResults","allResults","push","title","join","PlayerControl","renderPlayerScoreButton","sign","currentPrice","setPlayerAnswer","playerID","renderNameInput","size","renderPlayerName","onChange","e","preventDefault","setState","target","setPlayerName","onKeyPress","blur","currentScore","ControlsBlock","renderPlayerControls","NavigationBlock","scrollToCurrentQuestion","querySelector","scrollIntoView","block","behavior","onNextClicked","numberOfSubjects","addSubject","onPrevClicked","getCurrentNav","subjectNum","Math","floor","questionNum","getCurrentText","currentSubjectNum","currentSubjectName","window","electron","bridge","sendToChat","newSubjectNumber","newSubjectName","PackageBlock","active","renderPackageText","split","Game","renderSubjectBlocks","subject","createPlayers","i","team","NewGame","questions","multiplier","resetSubjects","onSubmitForm","resetPackage","setPlayersNumber","setQuestionsNumber","setPriceMultiplier","resetGame","offsetWidth","onSubmit","htmlFor","parseInt","checked","history","SubjectsList","onSubjectsListChange","subjectsArray","setSubjectNames","onPackageTextChange","setPackageText","placeholder","names","newGame","Graph","graphColors","graphOptions","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","scaleLabel","display","labelString","fontSize","legend","labels","animation","layout","padding","graphPlugins","beforeDraw","chartInstance","easing","ctx","chart","fillStyle","fillRect","getDatasets","maxQuestions","arr","playerData","label","backgroundColor","borderColor","fill","y","data","getLabels","datasets","redraw","height","options","plugins","About","href","rel","Themes","activeColorPickerNum","renderThemes","theme","isCurrent","background","renderUserThemeControl","renderColorPicker","onChangeComplete","setUserColor","hex","justifyContent","App","menuEnabled","renderMenuSwitcher","onPageResize","addEventListener","loadStateFromLocalStorage","path","parse","getItem","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.00ba7069.chunk.js","sourcesContent":["import { \n  SET_PLAYERS_NUMBER,\n  SET_QUESTIONS_NUMBER,\n  SET_PRICE_MULTIPLIER,\n  SET_UI_GAME_WIDTH,\n  SET_THEME,\n  SET_USER_COLOR,\n  SAVE_STATE_TO_LOCAL_STORAGE,\n  LOAD_STATE_FROM_LOCAL_STORAGE\n } from '../actions/types'\n\nconst INITITAL_STATE = {\n  numberOfPlayers: 4,\n  numberOfQuestions: 5,\n  priceMultiplier: 10,\n  uiWidth: 600,\n  activeTheme: 1,\n  themes: [\n    // colors: main, dark, darker, light, lighter, bg, text-dark, text-light\n    {\n      name: 'Пользовательская',\n      colors: ['#424246', '#bbb6b6', '#747474', '#d4d9dd', '#f1f1f1', '#fffdfd', '#141414', '#f1f1f1']\n    },\n    {\n      name: 'Brown-gray',\n      colors: ['#424246', '#bbb6b6', '#747474', '#d4d9dd', '#f1f1f1', '#fffdfd', '#141414', '#f1f1f1']\n    },\n    {\n      name: 'Greenery',\n      colors: ['#5e7431', '#879d5e', '#9ab740', '#c8d86d', '#aabe86', '#fcfff5', '#161616', '#f1f1f1']\n    },\n    {\n      name: 'Amber-chocolate',\n      colors: ['#49290f', '#ffc45f', '#d17745', '#fff0bc', '#c78446', '#fff4e7', '#161616', '#f1f1f1']\n    },\n    {\n      name: 'Burgundy-pink',\n      colors: ['#8c323d', '#40151f', '#6e0700', '#803138', '#b0354a', '#f8f8f8', '#ff7171', '#f1f1f1']\n    },\n    {\n      name: 'Gray-blue',\n      colors: ['#294552', '#00070a', '#597884', '#4f6c78', '#9eb9b3', '#76939d', '#f0f0f0', '#f1f1f1']\n    },\n    {\n      name: 'Huckleberry',\n      colors: ['#2c3953', '#7891c7', '#8393ff', '#889edb', '#657db2', '#e7f1ff', '#0d0d0d', '#f1f1f1']\n    },\n    {\n      name: 'Dark-gray',\n      colors: ['#333333', '#4a4a4a', '#929292', '#292929', '#565656', '#212224', '#dddddd', '#f1f1f1']\n    }\n  ]\n}\n\nexport default (state = INITITAL_STATE, action) => {\n  const { payload } = action\n\n  switch(action.type) {\n    case SET_PLAYERS_NUMBER:\n      return ({...state, numberOfPlayers: payload})\n    case SET_QUESTIONS_NUMBER:\n      return ({...state, numberOfQuestions: payload})\n    case SET_PRICE_MULTIPLIER:\n      return ({...state, priceMultiplier: payload})\n\n    case SET_UI_GAME_WIDTH:\n      return ({...state, uiWidth: payload})\n\n    case SET_THEME:\n      return ({...state, activeTheme: payload })\n    \n    case SET_USER_COLOR:\n      return ({...state, themes: [...payload]})\n\n    case SAVE_STATE_TO_LOCAL_STORAGE:\n      return state\n\n    case LOAD_STATE_FROM_LOCAL_STORAGE:\n      return ({...state, ...payload.settings})\n    default: \n      return state\n  }\n}","import { \n  RESET_GAME,\n  ADD_SUBJECT,\n  RESET_SUBJECTS,\n  SET_SUBJECT_NAMES,\n  SET_PACKAGE_TEXT,\n  SET_CURRENT_QUESTION_NUM,\n  SET_PLAYER_ANSWER,\n  CREATE_PLAYER,\n  SET_PLAYER_NAME,\n  SET_UI_GAME_WIDTH,\n  SAVE_STATE_TO_LOCAL_STORAGE,\n  LOAD_STATE_FROM_LOCAL_STORAGE\n } from '../actions/types'\n\nconst INITITAL_STATE = {\n  players: [],\n  currentQuestionNum: 0,\n  packageText: '',\n  subjects: ['Тема #1', 'Тема #2', 'Тема #3'],\n  subjectNames: []\n}\n\nexport default (state = INITITAL_STATE, action) => {\n  const { payload } = action\n\n  switch(action.type) {\n    case RESET_GAME:\n      return { ...INITITAL_STATE, \n        subjects: [...payload.subjects],\n        subjectNames: [...payload.subjectNames],\n        packageText: payload.packageText }\n    \n    case CREATE_PLAYER:\n      return {...state, players: payload}\n    \n    case SET_PLAYER_NAME:\n      return {...state, players: payload}\n\n    case SET_CURRENT_QUESTION_NUM:\n      return {...state, currentQuestionNum: payload}\n\n    case SET_PLAYER_ANSWER: \n      return {...state, players: payload}\n\n    case ADD_SUBJECT:\n      return {...state, subjects: payload}\n\n    case SET_PACKAGE_TEXT:\n      return {...state, packageText: payload}\n\n    case RESET_SUBJECTS:\n      return {\n        ...state, \n        subjects: [...INITITAL_STATE.subjects], \n        subjectNames: []\n      }\n    case SET_SUBJECT_NAMES:\n      return {...payload}\n\n    case SET_UI_GAME_WIDTH:\n      return state\n\n    case SAVE_STATE_TO_LOCAL_STORAGE:\n      return state\n\n    case LOAD_STATE_FROM_LOCAL_STORAGE:\n      return {...payload.game}\n      \n    default: \n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport settingsReducer from './settingsReducer'\nimport gameReducer from './gameReducer'\n\nexport default combineReducers({\n  settings: settingsReducer,\n  game: gameReducer\n})","export const RESET_GAME = 'RESET_GAME'\n\nexport const SET_PLAYERS_NUMBER = 'SET_PLAYERS_NUMBER'\nexport const SET_QUESTIONS_NUMBER = 'SET_QUESTIONS_NUMBER'\nexport const SET_PRICE_MULTIPLIER = 'SET_PRICE_MULTIPLIER'\n\nexport const CREATE_PLAYER = 'CREATE_PLAYER'\nexport const SET_PLAYER_NAME = 'SET_PLAYER_NAME'\n\nexport const SET_PACKAGE_TEXT = 'SET_PACKAGE_TEXT'\nexport const ADD_SUBJECT = 'ADD_SUBJECT'\nexport const SET_SUBJECT_NAMES = 'SET_SUBJECT_NAMES'\nexport const RESET_SUBJECTS = 'RESET_SUBJECTS'\n\nexport const SET_CURRENT_QUESTION_NUM = 'SET_CURRENT_QUESTION_NUM'\nexport const SET_PLAYER_ANSWER = 'SET_PLAYER_ANSWER'\n\nexport const SET_UI_GAME_WIDTH = 'SET_UI_GAME_WIDTH'\n\nexport const SET_THEME = 'SET_THEME'\nexport const SET_USER_COLOR = 'SET_USER_COLOR'\n\nexport const SAVE_STATE_TO_LOCAL_STORAGE = 'SAVE_STATE_TO_LOCAL_STORAGE'\nexport const LOAD_STATE_FROM_LOCAL_STORAGE = 'LOAD_STATE_TO_LOCAL_STORAGE'","import { createMemoryHistory } from 'history'\n\nexport default createMemoryHistory()","import history from '../history'\nimport {\n  RESET_GAME,\n  \n  SET_PLAYERS_NUMBER,\n  SET_QUESTIONS_NUMBER,\n  SET_PRICE_MULTIPLIER,\n\n  CREATE_PLAYER,\n  SET_PLAYER_NAME,\n\n  SET_CURRENT_QUESTION_NUM,\n  SET_PLAYER_ANSWER,\n  ADD_SUBJECT,\n  RESET_SUBJECTS,\n  SET_SUBJECT_NAMES,\n  SET_PACKAGE_TEXT,\n\n  SET_UI_GAME_WIDTH,\n\n  SET_THEME,\n  SET_USER_COLOR,\n\n  SAVE_STATE_TO_LOCAL_STORAGE,\n  LOAD_STATE_FROM_LOCAL_STORAGE\n} from './types'\n\n//#region SETTINGS\nexport const setPlayersNumber = (num) => (dispatch) => {\n  dispatch({ type: SET_PLAYERS_NUMBER, payload: num })\n}\n\nexport const setQuestionsNumber = (num) => (dispatch) => {\n  dispatch({ type: SET_QUESTIONS_NUMBER, payload: num })\n}\n\nexport const setPriceMultiplier = (multiplier) => {\n  return ({ type: SET_PRICE_MULTIPLIER, payload: multiplier })\n}\n\n//#endregion\n\nexport const resetGame = ({resetPackage}) => (dispatch, getState) => {\n  const {game} = getState()\n  \n  if (resetPackage) {\n    game.subjects = ['Тема #1', 'Тема #2', 'Тема #3']\n    game.subjectNames = []\n    game.packageText = \"\"\n  }\n\n  dispatch ({ type: RESET_GAME, payload: game })\n  history.push('/')\n  dispatch( saveStateToLocalStorage() )\n}\n\nexport const setCurrentQuestionNum = (num) => (dispatch) => {\n  dispatch({ type: SET_CURRENT_QUESTION_NUM, payload: num })\n  dispatch( saveStateToLocalStorage() )\n}\n\nexport const createPlayers = () => (dispatch, getState) => {\n  const numOfPlayers = getState().settings.numberOfPlayers\n  const players = []\n  for (let i = 0; i < numOfPlayers; i++) {\n    players.push({\n      name: `Игрок ${i}`,\n      team: '',\n      answers: []\n    })\n  }\n  dispatch({ type: CREATE_PLAYER, payload: [...players] })\n}\n\nexport const setPlayerName = ({ name, id}) => (dispatch, getState) => {\n  const { players } = getState().game\n  players[id].name = name\n  dispatch({ type: SET_PLAYER_NAME, payload: [...players] })\n  dispatch( saveStateToLocalStorage() )\n}\n\nexport const setPlayerAnswer = \n  ({ playerID, questionID, score}) => (dispatch, getState) => {\n  const { players } = getState().game\n  const currentScore = players[playerID].answers[questionID]\n  if (score === currentScore) {\n    players[playerID].answers[questionID] = null\n  } else {\n    players[playerID].answers[questionID] = score\n  }\n  dispatch({\n    type: SET_PLAYER_ANSWER,\n    payload: [...players]\n  })\n  dispatch( saveStateToLocalStorage() )\n}\n\nexport const addSubject = () => (dispatch, getState) => {\n  const subjects = [...getState().game.subjects]\n  const newSubjectNumber = subjects.length + 1\n  const newSubjectName = getState().game.subjectNames[newSubjectNumber - 1] ||\n    `Тема #${newSubjectNumber}`\n  subjects.push(newSubjectName)\n  \n  dispatch({ type: ADD_SUBJECT, payload: [...subjects] })\n  dispatch( saveStateToLocalStorage() )\n}\n\nexport const resetSubjects = () => (dispatch) => {\n  dispatch({ type: RESET_SUBJECTS, payload: [] })\n}\n\nexport const setSubjectNames = (names) => (dispatch, getState) => {\n  const newGame = {...getState().game}\n  newGame.subjectNames = [...names]\n  newGame.subjects.map((el, index) => {\n    return newGame.subjects[index] = newGame.subjectNames[index] || `Тема #${index + 1}`\n  })\n  dispatch({ type: SET_SUBJECT_NAMES, payload: newGame})\n  dispatch( saveStateToLocalStorage() )\n}\n\nexport const setPackageText = (text) => (dispatch, getState) => {\n  dispatch({ type: SET_PACKAGE_TEXT, payload: text})\n  dispatch(saveStateToLocalStorage())\n}\n\nexport const setUIGameWidth = (width) => (dispatch, getState) => {\n  const numOfPlayers = getState().settings.numberOfPlayers\n  const baseWidth = 130\n  let gameWidth, playerScoreWidth\n  if (width / numOfPlayers <= 120) {\n    gameWidth = width\n    playerScoreWidth = width / numOfPlayers\n  } else if (width / numOfPlayers >= baseWidth) {\n    gameWidth = numOfPlayers * baseWidth\n    playerScoreWidth = baseWidth\n  } else {\n    gameWidth = width\n    playerScoreWidth = width / numOfPlayers\n  }\n  document.documentElement.style.setProperty('--game-width', `${gameWidth}px`)\n  document.documentElement.style.setProperty('--player-score-width', `${playerScoreWidth}px`)\n  dispatch({ type: SET_UI_GAME_WIDTH, payload: gameWidth})\n}\n\nexport const setTheme = (id) => (dispatch, getState) => {\n  if (id === undefined) {\n    id = getState().settings.activeTheme\n  }\n  const colors = getState().settings.themes[id].colors\n  const keys = [\n    '--theme-main',\n    '--theme-dark',\n    '--theme-darker',\n    '--theme-light',\n    '--theme-lighter',\n    '--theme-bg',\n    '--theme-text-dark',\n    '--theme-text-light'\n  ]\n  colors.forEach((color, index) => {\n    document.documentElement.style.setProperty(keys[index], color)\n  })\n  dispatch({ type: SET_THEME, payload: id })\n  dispatch(saveStateToLocalStorage())\n}\n\nexport const setUserColor = ({index, color}) => (dispatch, getState) => {\n  const themes = getState().settings.themes\n  themes[0].colors[index] = color\n\n  dispatch({ type: SET_USER_COLOR, payload: themes })\n  dispatch(setTheme(0))\n}\n\nlet allowRecording = true\n\nexport const saveStateToLocalStorage = () => (dispatch, getState) => {\n  if (allowRecording) {\n    allowRecording = false\n\n    setTimeout(() => {\n      console.log('saved state to local storage')\n      localStorage.setItem('state', JSON.stringify(getState()))\n      allowRecording = true\n    }, 1000);\n\n  }\n  dispatch({ type: SAVE_STATE_TO_LOCAL_STORAGE, payload: null })\n}\n\nexport const loadStateFromLocalStorage = () => (dispatch, getState) => {\n  const state = JSON.parse(localStorage.getItem('state'))\n  if (state) {\n    dispatch({ type: LOAD_STATE_FROM_LOCAL_STORAGE, payload: state })\n  } else {\n    dispatch({ type: LOAD_STATE_FROM_LOCAL_STORAGE, payload: getState() })\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nclass Menu extends React.Component {\n\n  render() {\n    return (\n      <div className=\"menu\">\n        <button \n          className=\"hide-menu-btn\"\n          onClick={() => {\n            this.props.switchMenuState()\n          }}\n        >\n          <i className=\"fas fa-chevron-left\"></i>\n        </button>\n        <NavLink \n          to=\"/\" exact \n          className=\"menu-item\" \n          activeClassName=\"menu-active\"\n        >\n          <div>Игра</div>\n        </NavLink>\n        <NavLink \n          to=\"/newgame\" \n          className=\"menu-item\" \n          activeClassName=\"menu-active\"\n        >\n          <div>Новая игра</div>\n        </NavLink>\n        <NavLink \n          to=\"/subjects\" \n          className=\"menu-item\" \n          activeClassName=\"menu-active\"\n        >\n          <div>Темы и вопросы</div>\n        </NavLink>\n        <NavLink \n          to=\"/graph\" \n          className=\"menu-item\" \n          activeClassName=\"menu-active\"\n        >\n          <div>График</div>\n        </NavLink>\n        <NavLink \n          to=\"/theme\" \n          className=\"menu-item\" \n          activeClassName=\"menu-active\"\n        >\n          <div>Цвета</div>\n        </NavLink>\n        <NavLink \n          to=\"/about\" \n          className=\"menu-item\" \n          activeClassName=\"menu-active\"\n        >\n          <div>?</div>\n        </NavLink>\n      </div>\n    )\n  }\n}\n\nexport default Menu","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass Subject extends React.Component {\n\n  render() {\n    return (\n      <React.Fragment>\n        <tr>\n          <td colSpan={this.props.numberOfPlayers + 1} className=\"subject\">\n            {this.props.subjectName}\n          </td>\n        </tr>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    numberOfPlayers: state.settings.numberOfPlayers\n  })\n}\n\nexport default connect(mapStateToProps, {})(Subject)","import React from 'react'\n\nclass Price extends React.Component {\n\n  render() {\n    return (\n      <td className=\"price\">\n        {this.props.price}\n      </td>\n    )\n  }\n}\n\nexport default Price","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setCurrentQuestionNum } from '../actions'\nimport Price from './Price'\n\nclass Question extends React.Component {\n\n  render() {\n    return (\n      <tr \n        onClick={() => this.onClick()}\n        className={`question ${this.isActive()} q${this.props.id}`}\n      >\n        <Price price={this.props.price} />\n        {this.renderPlayerScoreCell()}\n      </tr>\n    )\n  }\n\n  renderPlayerScoreCell = () => {\n    const { id, numberOfPlayers } = this.props\n    return [...Array(numberOfPlayers)].map(\n      (el, index) => {\n        return (\n          <td \n            className=\"player-score\"\n            key={`${id}.${index}`}\n          >\n            {this.getPlayerScore({player: index, questionID: id})}\n          </td>\n        )\n      }\n    )\n  }\n\n  getPlayerScore = ({player, questionID}) => {\n    const { players } = this.props\n    if (!players[player]) {\n      return\n    }\n    const answer = players[player].answers[questionID]\n    return answer\n  }\n\n  isActive = () => {\n    return (\n      this.props.currentQuestionNum === this.props.id ? 'active' : ''\n    )\n  }\n\n  onClick = () => {\n    this.props.setCurrentQuestionNum(this.props.id)\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    numberOfPlayers: state.settings.numberOfPlayers,\n    players: state.game.players,\n    currentQuestionNum: state.game.currentQuestionNum\n  })\n}\n\nexport default connect(mapStateToProps, {setCurrentQuestionNum})(Question)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Subject from './Subject'\nimport Question from './Question'\n\nclass SubjectBlock extends React.Component {\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderSubject()}\n        {this.renderQuestions()}\n      </React.Fragment>\n      \n    )\n  }\n\n  renderSubject = () => {\n    return (\n      <Subject \n        subjectName={this.props.subjectName}\n        subjectID={this.props.subjectID}\n      />\n    )\n  }\n\n  renderQuestions = () => {\n    const {subjectID, numberOfQuestions, priceMultiplier} = this.props\n    return [...Array(this.props.numberOfQuestions)].map(\n      (el, index) => {\n        const questionID = subjectID * numberOfQuestions + index\n        const price = (index + 1) * priceMultiplier\n        return (\n          <Question key={questionID} id={questionID} price={price}/>\n        )\n      }\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    numberOfQuestions: state.settings.numberOfQuestions,\n    priceMultiplier: state.settings.priceMultiplier\n  })\n}\n\nexport default connect(mapStateToProps, {})(SubjectBlock)","export const copyToClipboard = (text) => {\n  let dummy = document.createElement('textarea')\n  document.body.appendChild(dummy)\n  dummy.setAttribute('id', 'dummy')\n  document.getElementById('dummy').value = text\n  dummy.select()\n  dummy.setSelectionRange(0, 99999)\n  document.execCommand(\"copy\")\n  document.body.removeChild(dummy)\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { copyToClipboard } from './helpers'\n\nclass SummaryBlock extends React.Component {\n\n  render() {\n    return (\n     <React.Fragment>\n        <tr>\n          <td colSpan={this.props.numberOfPlayers + 1} className=\"divider\"></td>\n        </tr>\n        <tr>\n          <td \n            className=\"sigma\"\n            title=\"Кликните, чтобы скопировать счёт в буфер обмена\"\n            onClick={() => {\n              const text = this.getAllPlayersResults().join('\\r\\n')\n              copyToClipboard(text)\n            }}\n          >Σ</td>\n          {this.renderPlayerSum()}\n        </tr> \n     </React.Fragment>\n    )\n  }\n\n  renderPlayerResults = (index) => {\n    const results = this.calcPlayerResults(index)\n    if (!results) {\n      return <>0 <br />[+0/-0]</>\n    }\n    const {sum, correct, incorrect} = results\n    return (\n      <>{sum} <br />\n      {`[+${correct}/-${incorrect}]`}</>\n    )\n  }\n\n  renderPlayerSum = () => {\n    return [...Array(this.props.numberOfPlayers)].map(\n      (el, index) => {\n        return (\n          <td key={`p${index}`} className=\"player-sum\">\n            {this.renderPlayerResults(index)}\n          </td>\n        )\n      }\n    )\n  }\n\n  calcPlayerResults = (index) => {\n    if (!this.props.players[index]) return null\n    const scores = this.props.players[index].answers\n    if (scores.length === 0) return null\n    const sum = scores.reduce((acc, current) => acc + current)\n    const correct = scores.filter((score) => score > 0).length\n    const incorrect = scores.filter((score) => score < 0).length\n    return {sum, correct, incorrect}\n  }\n\n  getAllPlayersResults = () => {\n    const allResults = []\n    this.props.players.forEach((el, index) => {\n      const results = this.calcPlayerResults(index)\n      const name = this.props.players[index].name\n      if (!results) {\n        allResults.push(`${name}: 0 [+0/-0]`)\n      } else {\n        const {sum, correct, incorrect} = results\n        allResults.push(`${name}: ${sum} [+${correct}/-${incorrect}]`)\n      }\n    });\n    return allResults\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    numberOfPlayers: state.settings.numberOfPlayers,\n    players: state.game.players\n  })\n}\n\nexport default connect(mapStateToProps, {})(SummaryBlock)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setPlayerName, setPlayerAnswer } from '../actions'\n\nclass PlayerControl extends React.Component {\n\n  render() {\n    return (\n      <div className=\"player-control\">\n        {this.renderPlayerScoreButton('plus')}\n        {this.renderNameInput()}\n        {this.renderPlayerScoreButton('minus')}\n      </div>\n    )\n  }\n\n  renderPlayerScoreButton = (sign) => {\n    return (\n      <div \n        className={`player-button ${sign}`}\n        onClick={() => {\n          const currentPrice = (this.props.currentQuestionNum % \n            this.props.numberOfQuestions + 1) * this.props.priceMultiplier\n          this.props.setPlayerAnswer({\n            playerID: this.props.playerID,\n            questionID: this.props.currentQuestionNum,\n            score: sign === 'plus' ? currentPrice : -currentPrice\n          })\n        }}\n      >\n        <i className={`fas fa-${sign}-square`}></i>\n      </div>\n    )\n  }\n\n  renderNameInput = () => {\n    return (\n      <input \n          className=\"player-name\" \n          size=\"10\"\n          type=\"text\"\n          value={this.renderPlayerName()}\n          onChange={(e) => {\n            e.preventDefault()\n            this.setState({name: e.target.value})\n            this.props.setPlayerName(\n              {name: e.target.value, id: this.props.playerID}\n            )\n          }}\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              e.target.blur()\n            }\n          }}\n        />\n    )\n  }\n\n  renderPlayerName = () => {\n    const { playerID, players } = this.props\n    if (players[playerID]) {\n      return players[playerID].name\n    }\n    return `Игрок ${playerID + 1}`\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    players: state.game.players,\n    currentQuestionNum: state.game.currentQuestionNum,\n    numberOfQuestions: state.settings.numberOfQuestions,\n    priceMultiplier: state.settings.priceMultiplier\n  })\n}\n\nexport default connect(\n    mapStateToProps, { setPlayerName, setPlayerAnswer }\n  )(PlayerControl)","import React from 'react'\nimport { connect } from 'react-redux'\nimport PlayerControl from './PlayerControl'\n\nclass ControlsBlock extends React.Component {\n  render() {\n    return (\n      <tr className=\"controls-block\">\n        <td></td>\n        {this.renderPlayerControls()}\n      </tr>\n    )\n  }\n\n  renderPlayerControls = () => {\n    return [...Array(this.props.numberOfPlayers)].map(\n      (el, index) => {\n        return (\n          <td key={`pc-${index}`}><PlayerControl playerID={index} /></td>\n        )\n      }\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    numberOfPlayers: state.settings.numberOfPlayers\n  })\n}\n\nexport default connect(mapStateToProps, {})(ControlsBlock)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setCurrentQuestionNum, addSubject } from '../actions'\nimport { copyToClipboard } from './helpers'\n\nclass NavigationBlock extends React.Component {\n\n  render() {\n    return (\n      <tr>\n        <td colSpan={this.props.numberOfPlayers + 1}>\n          <div className=\"navigation-block\">\n            <button \n              onClick={() => this.onPrevClicked()} \n              className=\"nav-btn nav-prev\"\n            ><i className=\"fas fa-chevron-left\"></i></button>\n            <button \n            className=\"nav-btn nav-current\"\n            onClick={() => {\n              const text = this.getCurrentText()\n              if (window.electron) {\n                // Electron-specific code\n                window.electron.bridge.sendToChat(text)\n              } else {\n                copyToClipboard(text)\n              }\n            }}\n            >\n              {this.getCurrentNav()}\n            </button>\n            <button \n              onClick={() => this.onNextClicked()} \n              className=\"nav-btn nav-next\"\n            ><i className=\"fas fa-chevron-right\"></i></button>\n          </div>\n        </td>\n      </tr>\n    )\n  }\n\n  scrollToCurrentQuestion = () => {\n    const activeQuestion = \n      document.querySelector(`.q${this.props.currentQuestionNum}`)\n    activeQuestion.scrollIntoView({block: 'center', behavior: 'smooth'})\n  }\n\n  onNextClicked = () => {\n    const { \n      setCurrentQuestionNum, \n      currentQuestionNum, \n      numberOfSubjects, \n      numberOfQuestions,\n      addSubject\n    } = this.props\n    const totalNumOfQuestions = numberOfSubjects * numberOfQuestions\n    if (totalNumOfQuestions - currentQuestionNum <= 2) {\n      addSubject()\n    }\n    setCurrentQuestionNum(currentQuestionNum + 1)\n    this.scrollToCurrentQuestion()\n  }\n\n  onPrevClicked = () => {\n    if (this.props.currentQuestionNum === 0) {\n      return\n    }\n    this.props.setCurrentQuestionNum(this.props.currentQuestionNum - 1)\n    this.scrollToCurrentQuestion()\n  }\n\n  getCurrentNav = () => {\n    const {currentQuestionNum, numberOfQuestions} = this.props\n    const subjectNum = Math.floor(currentQuestionNum / numberOfQuestions) + 1\n    const questionNum = (currentQuestionNum % numberOfQuestions) + 1\n    return `${subjectNum}.${questionNum}`\n  }\n\n  getCurrentText = () => {\n    let { subjects, currentQuestionNum, numberOfQuestions, priceMultiplier } = this.props\n    let currentSubjectNum = Math.floor(currentQuestionNum / numberOfQuestions)\n    let currentSubjectName = subjects[currentSubjectNum]\n    let currentPrice = ((currentQuestionNum % numberOfQuestions) + 1) * priceMultiplier\n\n    return `Тема #${currentSubjectNum + 1}: ${currentSubjectName}, вопрос за ${currentPrice}`\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    currentQuestionNum: state.game.currentQuestionNum,\n    numberOfPlayers: state.settings.numberOfPlayers,\n    numberOfQuestions: state.settings.numberOfQuestions,\n    numberOfSubjects: state.game.subjects.length,\n    subjects: state.game.subjects,\n    priceMultiplier: state.settings.priceMultiplier\n  })\n}\n\nexport default connect(mapStateToProps, {setCurrentQuestionNum, addSubject})(NavigationBlock)","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass PackageBlock extends React.Component {\n  state = {active: 0}\n\n  render() {\n    return (\n      <div className=\"package-container\">\n        <div className=\"package\">\n          {this.renderPackageText()}\n        </div>\n      </div>\n    )\n  }\n\n  renderPackageText = () => {\n    const text = this.props.packageText\n    return text.split('\\n').map((el, index) => {\n      if (el && el !== '\\r' && el !== ' ') {\n        return (\n          <React.Fragment key={`package-text-${index}`}>\n            <div \n              className={`package-el ${index === this.state.active ? 'active' : ''}`} \n              onClick={() => this.setState({active: index})}\n            >{el}</div>\n            <div className=\"package-el\">&nbsp;</div>\n          </React.Fragment>\n        )\n      }\n      return null\n    })\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    numberOfPlayers: state.settings.numberOfPlayers,\n    packageText: state.game.packageText\n  })\n}\n\nexport default connect(mapStateToProps, {})(PackageBlock)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport SubjectBlock from './SubjectBlock'\nimport SummaryBlock from './SummaryBlock'\nimport ControlsBlock from './ControlsBlock'\nimport NavigationBlock from './NavigationBlock'\nimport PackageBlock from './PackageBlock'\n\nimport { createPlayers } from '../actions'\n\nclass Game extends React.Component { \n  componentDidMount() {\n    if (this.props.players.length === 0) {\n      this.props.createPlayers()\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"main-container\">\n          <div className=\"scrollable\">\n            <table className=\"scores-block\">\n              <tbody>\n                {this.renderSubjectBlocks()}\n              </tbody>\n            </table>\n          </div>\n          <table className=\"scores-block\">\n            <tbody>\n              <SummaryBlock />\n              <ControlsBlock />\n              <NavigationBlock />\n            </tbody>\n          </table>\n          <PackageBlock />\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  renderSubjectBlocks = () => {\n    return this.props.subjects.map((subject, index) => {\n      return (\n        <SubjectBlock \n          subjectName={subject}\n          key={index}\n          subjectID={index}\n        />\n      )\n    })\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentQuestionNum: state.game.currentQuestionNum,\n    subjects: state.game.subjects,\n    subjectNames: state.game.subjectNames,\n    numberOfPlayers: state.settings.numberOfPlayers,\n    players: state.game.players\n  }\n}\n\nexport default connect(mapStateToProps, {createPlayers})(Game)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { \n  setPlayersNumber,\n  setQuestionsNumber,\n  setPriceMultiplier,\n  resetGame,\n  setUIGameWidth\n} from '../actions'\n\nclass NewGame extends React.Component {\n  state = {\n    players: 4,\n    questions: 5,\n    multiplier: 10,\n    resetSubjects: false\n  }\n\n  render() {\n    return (\n      <div className=\"secondary-container\">\n        <div className=\"new-game\">\n          <form \n            name=\"new-game\" \n            id=\"new-game\"\n            onSubmit={this.onSubmitForm}\n          >\n          <h2>Параметры новой игры</h2>\n            <div>\n              <label htmlFor=\"players-num\">Число игроков: </label>\n              <select \n                value={this.state.players} \n                onChange={(e) => this.setState({ players: parseInt(e.target.value) })} \n                id=\"players-num\"\n              >\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"questions-num\">Число вопросов в теме: </label>\n              <select \n                value={this.state.questions} \n                onChange={(e) => this.setState({ questions: parseInt(e.target.value) })}\n                id=\"questions-num\"\n              >\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"multiplier\">Мультипликатор стоимости вопроса: </label>\n              <select \n                value={this.state.multiplier} \n                onChange={(e) => this.setState({ multiplier: parseInt(e.target.value) })}\n                id=\"multiplier\"\n              >\n                <option value=\"1\">1</option>\n                <option value=\"10\">10</option>\n                <option value=\"100\">100</option>\n              </select>\n            </div>\n            <div>\n              <input \n                type=\"checkbox\" \n                onChange={(e) => this.setState({ resetSubjects: e.target.checked })}\n                id=\"reset-subjects\"\n              />\n              <label htmlFor=\"reset-subjects\"> Очистить названия тем и текст пакета</label>\n            </div>\n            <button \n              type=\"submit\" \n            >\n              Начать игру\n            </button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n\n  onSubmitForm = (e) => {\n    const resetPackage = this.state.resetSubjects\n    e.preventDefault()\n    this.props.setPlayersNumber(this.state.players)\n    this.props.setQuestionsNumber(this.state.questions)\n    this.props.setPriceMultiplier(this.state.multiplier)\n    this.props.resetGame({resetPackage})\n    this.props.setUIGameWidth(document.body.offsetWidth)\n  }\n}\n\nexport default connect(null, { \n  setPlayersNumber,\n  setQuestionsNumber,\n  setPriceMultiplier,\n  resetGame,\n  setUIGameWidth\n })(NewGame)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setSubjectNames, setPackageText } from '../actions'\n\nclass SubjectsList extends React.Component {\n  state = { subjects: '', packageText: '' }\n\n  componentDidMount() {\n    const subjects = this.props.subjects.join('\\n')\n    const { packageText } = this.props\n    this.setState({ subjects, packageText })\n  }\n\n  render() {\n    return (\n      <div className=\"secondary-container\">\n        <div className=\"subjects-list\">\n          <h2>Список тем</h2>\n          <textarea \n            placeholder={`Вставьте список тем (каждая тема с новой строки). Названия текущих и будущих тем в игре обновятся автоматически`}\n            onChange={this.onSubjectsListChange}\n            value={this.state.subjects}\n          >\n          </textarea>\n          <h2>Текст пакета</h2>\n          <textarea \n            placeholder={`Вставьте содержимое пакета сюда. Его форматированная версия появится на экране игры`}\n            onChange={this.onPackageTextChange}\n            value={this.state.packageText}\n          >\n          </textarea>\n        </div>\n      </div>\n    )\n  }\n\n  onSubjectsListChange = (e) => {\n    const subjects = e.target.value\n    this.setState({ subjects })\n    const subjectsArray = subjects.split('\\n')\n    this.props.setSubjectNames(subjectsArray)\n  }\n\n  onPackageTextChange = (e) => {\n    const packageText = e.target.value\n    this.setState({ packageText })\n    if (packageText) {\n      this.props.setPackageText(packageText)\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    subjects: state.game.subjectNames,\n    packageText: state.game.packageText\n  })\n}\n\nexport default connect(mapStateToProps, {\n  setSubjectNames, setPackageText\n})(SubjectsList)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {Line } from 'react-chartjs-2'\n\nclass Graph extends React.Component {\n  render() {\n    this.getDatasets()\n    return(\n      <div className=\"secondary-container\">\n        <div className=\"graph\" id=\"graph\">\n          <h2>График</h2>\n          <Line \n              data={{\n                labels: this.getLabels(),\n                datasets: this.getDatasets()\n              }} \n              width={this.props.uiWidth - 85}\n              redraw={true}\n              height={200}\n              options={this.graphOptions}\n              plugins={this.graphPlugins}\n            />\n        </div>\n      </div>\n    )\n  }\n\n  graphColors = [\"#92e084\", \"#e08492\", \"#86a2e3\",\n            \"#c287e6\", \"#e0aa84\", \"#83cae0\",\n            \"#c7e07a\", \"#52e3c1\", \"#e0b051\",\n            \"#e6d779\"]\n\n  graphOptions = { \n    maintainAspectRatio: true,\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"Набранные очки\",\n          fontSize: 16\n        }\n      }]\n    },\n    legend: {\n      labels: {\n        fontSize: 16\n      }\n    },\n    animation: false,\n    layout: {\n      padding: 1\n    }\n  }\n\n  graphPlugins = [{\n    beforeDraw: function(chartInstance, easing) {\n      var ctx = chartInstance.chart.ctx\n      ctx.fillStyle = 'white' // Меняем цвет здесь\n      ctx.fillRect(0, 0, 1920, 1080)\n    }\n  }]\n\n  getDatasets = () => {\n    let { players, maxQuestions } = this.props\n    let arr = [] //будущий dataset\n    for (let i = 0; i < players.length; i++) { // Для каждого игрока\n        let playerData = {}\n        playerData.label = players[i].name // Заполняем имя\n        playerData.backgroundColor = this.graphColors[i] // Указываем цвет фона\n        playerData.borderColor = this.graphColors[i] // Указываем цвет границы\n        playerData.fill = false // Отменяем заливку\n        // Превращаем очки за вопрос в сумму очков на момент вопроса\n        let scores = []\n        scores.push(0)\n        for (let y = 1; y < (maxQuestions + 2); y++) {\n            let score = players[i].answers[y - 1]\n            // Если очки на этом вопросе не были начислены\n            if (score === undefined) { \n              score = scores[y - 1]\n            }\n            // Если очки на этом вопросе были начислены, то\n            // добавляем их к сумме предыдущих очков\n            else {\n                score += scores[y - 1]\n            }\n            scores.push(score)\n        }\n        playerData.data = scores\n        arr.push({...playerData})\n    }\n    return arr\n  }\n\n  getLabels = () => {\n    let labels = []\n    for (let i = 0; i < (this.props.maxQuestions + 2); i++) {\n        labels.push(i)\n    }\n    return labels\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    players: state.game.players,\n    maxQuestions: state.game.subjects.length * state.settings.numberOfQuestions,\n    uiWidth: state.settings.uiWidth\n  }\n}\n\nexport default connect(mapStateToProps, {})(Graph)","import React from 'react'\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"secondary-container\">\n        <div className=\"about\">\n          <h2>SIGMA X v2</h2>\n          <h4>Svoya Igra Game Manager Application by ExConfessor</h4>\n          <div className=\"links\">\n            <div><a href=\"https://exconf.github.io/sigma-x-react/\" target=\"_blank\" rel=\"noopener noreferrer\">Браузерная версия</a></div>\n            <div> | </div>\n            <div><a href=\"https://github.com/eXConf/sigma-x-2/releases/\" target=\"_blank\" rel=\"noopener noreferrer\"> Десктопная версия</a></div>\n            <div> | </div>\n            <div><a href=\"https://donatepay.ru/don/DomovinaOpen\" target=\"_blank\" rel=\"noopener noreferrer\">Помочь автору</a></div>\n          </div>\n          <h3>Советы</h3>\n          <div className=\"advices\">\n            <ul>\n              <li>\n                Браузерную версию SIGMA X можно использовать и в режиме оффлайн. Для этого установите её как веб-приложение, воспользовавшись иконкой в правой части адресной строки браузера (или соответствующим пунктом меню в мобильном браузере).\n              </li>\n              <li>\n                Счёт и все настройки сохраняются после закрытия. Чтобы обнулить счёт, начните новую игру из меню слева.\n              </li>\n              <li>\n                Нажмите на иконку сигмы (Σ) слева от счёта, чтобы скопировать текущий счёт в буфер обмена.\n              </li>\n              <li>\n                Нажмите на текущий номер темы и вопроса в блоке навигации, чтобы: в браузерной версии — скопировать \"отбивку\" (номер темы и ее название, стоимость вопроса) в буфер обмена; в десктопной версии — отправить \"отбивку\" в последнее активное окно.\n              </li>\n              \n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setTheme, setUserColor } from '../actions'\nimport { ChromePicker } from 'react-color'\n\nclass Themes extends React.Component {\n  state = {activeColorPickerNum: 0}\n  \n  render() {\n    return(\n      <div className=\"secondary-container\">\n        <h2>Темы оформления</h2>\n        <div className=\"themes\">\n          {this.renderThemes()}\n          <div className=\"user-theme-text\">\n            Ниже вы можете задать цвета пользовательской темы (кликните по цвету, который хотите поменять, затем выберите новый в палитре ниже):\n          </div>\n          <div className=\"user-colors\">\n            {this.renderUserThemeControl()}\n          </div>\n          <div style={{display: 'flex', justifyContent: 'center'}}>\n              {this.renderColorPicker()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderThemes = () => {\n    const { themes, activeTheme } = this.props\n    return themes.map((theme, index) => {\n      const isActive = index === activeTheme ? 'active' : ''\n      const isCurrent = index === activeTheme ? '(текущая)' : ''\n      const { colors } = theme\n      return (\n        <div \n          className={`theme ${isActive}`} \n          key={theme.name}\n          onClick={() => this.props.setTheme(index)}\n        >\n          <div className=\"theme-name\">\n            {`${theme.name} ${isCurrent}`}\n          </div>\n          <div \n            className=\"theme-colors\"\n            style={{\n              // backgroundColor: 'red'\n              background: `linear-gradient(to right, ${colors[0]} 12.5%, 12.5%, ${colors[1]} 25%, 25%, ${colors[2]} 37.5%, 37.5%, ${colors[3]} 50%, 50%, ${colors[4]} 62.5%, 62.5%, ${colors[5]} 75%, 75%, ${colors[6]} 87.5%, 87.5%, ${colors[7]})`\n            }}\n          >\n          </div>\n        </div>\n      )\n    })\n  }\n\n  renderUserThemeControl = () => {\n    const colors = this.props.themes[0].colors\n    return (\n      [...Array(colors.length)].map((el, index) => {\n        return (\n          <div \n            key={index} \n            className=\"user-color\" \n            style={{backgroundColor: colors[index]}}\n            onClick={() => {\n              if (this.state.activeColorPickerNum !== index) {\n                this.setState({activeColorPickerNum: index})\n              } else {\n                this.setState({activeColorPickerNum: -1})\n              }\n            }}\n          >\n          </div>\n        )\n      })\n    )\n  }\n\n  renderColorPicker = () => {\n    const index = this.state.activeColorPickerNum\n    if (index !== -1) {\n      return (\n        <div>\n          <ChromePicker \n            color={this.props.themes[0].colors[index]}\n            onChangeComplete={(e) => this.props.setUserColor({index, color: e.hex})}\n          />\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeTheme: state.settings.activeTheme,\n    themes: state.settings.themes\n  }\n}\n\nexport default connect(mapStateToProps, {setTheme, setUserColor})(Themes)","import React from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport history from '../history'\nimport { connect } from 'react-redux'\nimport { setUIGameWidth, loadStateFromLocalStorage, setTheme } from '../actions'\nimport Menu from './Menu'\nimport Game from './Game'\nimport NewGame from './NewGame'\nimport SubjectsList from './SubjectsList'\nimport Graph from './Graph'\nimport About from './About'\nimport Themes from './Themes'\n\nclass App extends React.Component {\n  \n  state = {menuEnabled: true}\n\n  componentDidMount() {\n    const width = document.body.offsetWidth\n    this.props.setUIGameWidth(width)\n    window.addEventListener('resize', this.onPageResize)\n    this.props.loadStateFromLocalStorage()\n    this.props.setTheme()\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n        <Router history={history}>\n          {this.state.menuEnabled === true ? \n          <div className=\"menu-container\">\n            <Menu switchMenuState={this.switchMenuState} />\n          </div> : this.renderMenuSwitcher()}\n          <Switch>\n            <Route path=\"/\" exact>\n              <Game \n                switchMenuState={this.switchMenuState}\n                menuEnabled={this.state.menuEnabled} \n              />\n            </Route>\n            <Route path=\"/newgame\">\n              <NewGame />\n            </Route>\n            <Route path=\"/subjects\">\n              <SubjectsList />\n            </Route>\n            <Route path=\"/graph\">\n              <Graph />\n            </Route>\n            <Route path=\"/theme\">\n              <Themes />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n\n  renderMenuSwitcher = () => {\n    if (!this.state.menuEnabled) {\n      return (\n        <div \n          className=\"menu-switcher\"\n          onClick={() => this.switchMenuState()}\n        >\n          <i className=\"fas fa-chevron-right\"></i>\n        </div>\n      )\n    }\n  }\n\n  onPageResize = () => {\n    this.props.setUIGameWidth(document.body.offsetWidth)\n  }\n\n  switchMenuState = () => {\n    this.setState({menuEnabled: !this.state.menuEnabled})\n  }\n\n}\n\nexport default connect(null, {setUIGameWidth, loadStateFromLocalStorage, setTheme})(App)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport reducers from './reducers'\nimport App from './components/App'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}