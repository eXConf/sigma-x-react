{"version":3,"sources":["reducers/settingsReducer.js","reducers/gameReducer.js","reducers/index.js","actions/types.js","history.js","actions/index.js","components/Menu.js","components/Subject.js","components/Price.js","components/Question.js","components/SubjectBlock.js","components/helpers.js","components/SummaryBlock.js","components/PlayerControl.js","components/ControlsBlock.js","components/NavigationBlock.js","components/PackageBlock.js","components/Game.js","components/NewGame.js","components/SubjectsList.js","components/Graph.js","components/App.js","index.js"],"names":["INITITAL_STATE","numberOfPlayers","numberOfQuestions","priceMultiplier","uiWidth","players","currentQuestionNum","packageText","subjects","subjectNames","combineReducers","settings","state","action","type","payload","game","createMemoryHistory","setCurrentQuestionNum","num","dispatch","saveStateToLocalStorage","setUIGameWidth","width","getState","gameWidth","playerScoreWidth","numOfPlayers","document","documentElement","style","setProperty","allowRecording","setTimeout","console","log","localStorage","setItem","JSON","stringify","Menu","className","onClick","props","switchMenuState","to","exact","activeClassName","React","Component","Subject","Fragment","colSpan","this","subjectName","connect","Price","price","Question","renderPlayerScoreCell","id","Array","map","el","index","key","getPlayerScore","player","questionID","answers","isActive","SubjectBlock","renderQuestions","subjectID","renderSubject","copyToClipboard","text","dummy","createElement","body","appendChild","setAttribute","getElementById","value","select","setSelectionRange","execCommand","removeChild","SummaryBlock","renderPlayerResults","results","calcPlayerResults","sum","correct","incorrect","scores","length","reduce","acc","current","filter","score","getAllPlayersResults","allResults","forEach","name","push","renderPlayerSum","title","join","PlayerControl","renderPlayerName","playerID","renderNameInput","size","onChange","e","preventDefault","setState","target","setPlayerName","onKeyPress","blur","renderPlayerScoreButton","sign","currentPrice","setPlayerAnswer","currentScore","ControlsBlock","renderPlayerControls","NavigationBlock","scrollToCurrentQuestion","querySelector","scrollIntoView","block","behavior","onNextClicked","numberOfSubjects","addSubject","onPrevClicked","getCurrentNav","subjectNum","Math","floor","questionNum","getCurrentText","currentSubjectNum","currentSubjectName","window","electron","bridge","sendToChat","newSubjectNumber","newSubjectName","PackageBlock","active","renderPackageText","split","Game","renderSubjectBlocks","subject","createPlayers","i","team","NewGame","questions","multiplier","resetSubjects","onSubmitForm","resetPackage","setPlayersNumber","setQuestionsNumber","setPriceMultiplier","resetGame","offsetWidth","onSubmit","htmlFor","parseInt","checked","history","SubjectsList","onSubjectsListChange","subjectsArray","setSubjectNames","onPackageTextChange","setPackageText","placeholder","names","newGame","Graph","graphColors","graphOptions","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","scaleLabel","display","labelString","fontSize","legend","labels","animation","layout","padding","graphPlugins","beforeDraw","chartInstance","easing","ctx","chart","fillStyle","fillRect","getDatasets","maxQuestions","arr","playerData","label","backgroundColor","borderColor","fill","y","undefined","data","getLabels","datasets","redraw","height","options","plugins","App","menuEnabled","onPageResize","renderMenuSwitcher","addEventListener","loadStateFromLocalStorage","path","parse","getItem","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render"],"mappings":"gMAOMA,EAAiB,CACrBC,gBAAiB,EACjBC,kBAAmB,EACnBC,gBAAiB,GACjBC,QAAS,K,OCILJ,EAAiB,CACrBK,QAAS,GACTC,mBAAoB,EACpBC,YAAa,GACbC,SAAU,CAAC,8BAAW,8BAAW,+BACjCC,aAAc,IChBDC,cAAgB,CAC7BC,SFSa,WAAqC,IAApCC,EAAmC,uDAA3BZ,EAAgBa,EAAW,uCACjD,OAAOA,EAAOC,MACZ,IGd8B,qBHe5B,OAAO,YAAC,eAAIF,GAAZ,IAAmBX,gBAAiBY,EAAOE,UAC7C,IGfgC,uBHgB9B,OAAO,YAAC,eAAIH,GAAZ,IAAmBV,kBAAmBW,EAAOE,UAC/C,IGhBgC,uBHiB9B,OAAO,YAAC,eAAIH,GAAZ,IAAmBT,gBAAiBU,EAAOE,UAE7C,IGN6B,oBHO3B,OAAO,YAAC,eAAIH,GAAZ,IAAmBR,QAASS,EAAOE,UACrC,QACE,OAAOH,IEpBXI,KDiBa,WAAqC,IAApCJ,EAAmC,uDAA3BZ,EAAgBa,EAAW,uCACzCE,EAAYF,EAAZE,QAER,OAAOF,EAAOC,MACZ,IE3BsB,aF4BpB,OAAO,2BAAKd,GAAZ,IACEQ,SAAS,YAAKO,EAAQP,UACtBC,aAAa,YAAKM,EAAQN,cAC1BF,YAAaQ,EAAQR,cAEzB,IE3ByB,gBF8BzB,IE7B2B,kBF8BzB,OAAO,2BAAIK,GAAX,IAAkBP,QAASU,IAE7B,IEzBoC,2BF0BlC,OAAO,2BAAIH,GAAX,IAAkBN,mBAAoBS,IAExC,IE3B6B,oBF4B3B,OAAO,2BAAIH,GAAX,IAAkBP,QAASU,IAE7B,IEnCuB,cFoCrB,OAAO,2BAAIH,GAAX,IAAkBJ,SAAUO,IAE9B,IEvC4B,mBFwC1B,OAAO,2BAAIH,GAAX,IAAkBL,YAAaQ,IAEjC,IEvC0B,iBFwCxB,OAAO,2BACFH,GADL,IAEEJ,SAAS,YAAKR,EAAeQ,UAC7BC,aAAc,KAElB,IE9C6B,oBF+C3B,OAAO,eAAIM,GAEb,IE3C6B,oBF8C7B,IE5CuC,8BF6CrC,OAAOH,EAET,IE9CyC,8BF+CvC,OAAO,eAAIG,EAAQC,MAErB,QACE,OAAOJ,M,2CGpEEK,gBCmDFC,EAAwB,SAACC,GAAD,OAAS,SAACC,GAC7CA,EAAS,CAAEN,KFxC2B,2BEwCKC,QAASI,IACpDC,EAAUC,OAqECC,EAAiB,SAACC,GAAD,OAAW,SAACH,EAAUI,GAClD,IAEIC,EAAWC,EAFTC,EAAeH,IAAWb,SAASV,gBAGrCsB,EAAQI,GAAgB,KAC1BF,EAAYF,EACZG,EAAmBH,EAAQI,GAClBJ,EAAQI,GALD,KAMhBF,EANgB,IAMJE,EACZD,EAPgB,MAShBD,EAAYF,EACZG,EAAmBH,EAAQI,GAE7BC,SAASC,gBAAgBC,MAAMC,YAAY,eAA3C,UAA8DN,EAA9D,OACAG,SAASC,gBAAgBC,MAAMC,YAAY,uBAA3C,UAAsEL,EAAtE,OACAN,EAAS,CAAEN,KF3HoB,oBE2HKC,QAASU,MAG3CO,GAAiB,EAERX,EAA0B,kBAAM,SAACD,EAAUI,GAClDQ,IACFA,GAAiB,EAEjBC,YAAW,WACTC,QAAQC,IAAI,gCACZC,aAAaC,QAAQ,QAASC,KAAKC,UAAUf,MAC7CQ,GAAiB,IAChB,MAILZ,EAAS,CAAEN,KF1I8B,8BE0IKC,QAAS,S,QC9F1CyB,E,uKA1DH,IAAD,OACP,OACE,yBAAKC,UAAU,QACb,4BACEA,UAAU,gBACVC,QAAS,WACP,EAAKC,MAAMC,oBAGb,uBAAGH,UAAU,yBAEf,kBAAC,IAAD,CACEI,GAAG,IAAIC,OAAK,EACZL,UAAU,YACVM,gBAAgB,eAEhB,0DAEF,kBAAC,IAAD,CACEF,GAAG,WACHJ,UAAU,YACVM,gBAAgB,eAEhB,yFAEF,kBAAC,IAAD,CACEF,GAAG,YACHJ,UAAU,YACVM,gBAAgB,eAEhB,4GAEF,kBAAC,IAAD,CACEF,GAAG,SACHJ,UAAU,YACVM,gBAAgB,eAEhB,sEAEF,kBAAC,IAAD,CACEF,GAAG,SACHJ,UAAU,YACVM,gBAAgB,eAEhB,gEAEF,kBAAC,IAAD,CACEF,GAAG,SACHJ,UAAU,YACVM,gBAAgB,eAEhB,wC,GArDSC,IAAMC,WCAnBC,E,uKAGF,OACE,kBAAC,IAAMC,SAAP,KACE,4BACE,wBAAIC,QAASC,KAAKV,MAAM1C,gBAAkB,EAAGwC,UAAU,WACpDY,KAAKV,MAAMW,mB,GAPFN,IAAMC,WAqBbM,eANS,SAAC3C,GACvB,MAAQ,CACNX,gBAAiBW,EAAMD,SAASV,mBAII,GAAzBsD,CAA6BL,GCX7BM,E,uKARX,OACE,wBAAIf,UAAU,SACXY,KAAKV,MAAMc,W,GALAT,IAAMC,WCGpBS,E,4MAEJC,sBAAwB,WAAO,IAAD,EACI,EAAKhB,MAA7BiB,EADoB,EACpBA,GAAI3D,EADgB,EAChBA,gBACZ,OAAO,YAAI4D,MAAM5D,IAAkB6D,KACjC,SAACC,EAAIC,GACH,OACE,wBACEvB,UAAU,eACVwB,IAAG,UAAKL,EAAL,YAAWI,IAEb,EAAKE,eAAe,CAACC,OAAQH,EAAOI,WAAYR,S,EAO3DM,eAAiB,YAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WACjB/D,EAAY,EAAKsC,MAAjBtC,QACR,GAAKA,EAAQ8D,GAIb,OADe9D,EAAQ8D,GAAQE,QAAQD,I,EAIzCE,SAAW,WACT,OACE,EAAK3B,MAAMrC,qBAAuB,EAAKqC,MAAMiB,GAAK,SAAW,I,EAIjElB,QAAU,WACR,EAAKC,MAAMzB,sBAAsB,EAAKyB,MAAMiB,K,uDAGpC,IAAD,OACP,OACE,wBACElB,QAAS,kBAAM,EAAKA,WACpBD,UAAS,mBAAcY,KAAKiB,WAAnB,aAAkCjB,KAAKV,MAAMiB,KAEtD,kBAAC,EAAD,CAAOH,MAAOJ,KAAKV,MAAMc,QACxBJ,KAAKM,6B,GA5CSX,IAAMC,WA0DdM,eARS,SAAC3C,GACvB,MAAQ,CACNX,gBAAiBW,EAAMD,SAASV,gBAChCI,QAASO,EAAMI,KAAKX,QACpBC,mBAAoBM,EAAMI,KAAKV,sBAIK,CAACY,yBAA1BqC,CAAkDG,GC1D3Da,E,4MAEJC,gBAAkB,WAAO,IAAD,EACkC,EAAK7B,MAAtD8B,EADe,EACfA,UAAWvE,EADI,EACJA,kBAAmBC,EADf,EACeA,gBACrC,OAAO,YAAI0D,MAAM,EAAKlB,MAAMzC,oBAAoB4D,KAC9C,SAACC,EAAIC,GACH,IAAMI,EAAaK,EAAYvE,EAAoB8D,EAC7CP,GAASO,EAAQ,GAAK7D,EAC5B,OACE,kBAAC,EAAD,CAAU8D,IAAKG,EAAYR,GAAIQ,EAAYX,MAAOA,Q,EAM1DiB,cAAgB,WACd,OACE,kBAAC,EAAD,CACEpB,YAAa,EAAKX,MAAMW,YACxBmB,UAAW,EAAK9B,MAAM8B,a,uDAM1B,OACE,kBAAC,IAAMtB,SAAP,KACGE,KAAKqB,gBACLrB,KAAKmB,uB,GA5BaxB,IAAMC,WA0ClBM,eAPS,SAAC3C,GACvB,MAAQ,CACNV,kBAAmBU,EAAMD,SAAST,kBAClCC,gBAAiBS,EAAMD,SAASR,mBAII,GAAzBoD,CAA6BgB,GC/C/BI,EAAkB,SAACC,GAC9B,IAAIC,EAAQjD,SAASkD,cAAc,YACnClD,SAASmD,KAAKC,YAAYH,GAC1BA,EAAMI,aAAa,KAAM,SACzBrD,SAASsD,eAAe,SAASC,MAAQP,EACzCC,EAAMO,SACNP,EAAMQ,kBAAkB,EAAG,OAC3BzD,SAAS0D,YAAY,QACrB1D,SAASmD,KAAKQ,YAAYV,ICJtBW,E,4MAEJC,oBAAsB,SAACzB,GACrB,IAAM0B,EAAU,EAAKC,kBAAkB3B,GACvC,IAAK0B,EACH,OAAO,yCAAI,6BAAJ,WAHsB,IAKxBE,EAA2BF,EAA3BE,IAAKC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,UACrB,OACE,oCAAGF,EAAH,IAAQ,6BAAR,YACMC,EADN,aACkBC,EADlB,O,EAKJH,kBAAoB,SAAC3B,GACnB,IAAK,EAAKrB,MAAMtC,QAAQ2D,GAAQ,OAAO,KACvC,IAAM+B,EAAS,EAAKpD,MAAMtC,QAAQ2D,GAAOK,QACzC,OAAsB,IAAlB0B,EAAOC,OAAqB,KAIzB,CAACJ,IAHIG,EAAOE,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,KAGrCN,QAFGE,EAAOK,QAAO,SAACC,GAAD,OAAWA,EAAQ,KAAGL,OAE9BF,UADJC,EAAOK,QAAO,SAACC,GAAD,OAAWA,EAAQ,KAAGL,S,EAIxDM,qBAAuB,WACrB,IAAMC,EAAa,GAYnB,OAXArE,QAAQC,IAAI,EAAKQ,MAAMtC,QAAQ2F,QAC/B,EAAKrD,MAAMtC,QAAQmG,SAAQ,SAACzC,EAAIC,GAC9B,IAAM0B,EAAU,EAAKC,kBAAkB3B,GACjCyC,EAAO,EAAK9D,MAAMtC,QAAQ2D,GAAOyC,KACvC,GAAKf,EAEE,CAAC,IACCE,EAA2BF,EAA3BE,IAAKC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,UACrBS,EAAWG,KAAX,UAAmBD,EAAnB,aAA4Bb,EAA5B,cAAqCC,EAArC,aAAiDC,EAAjD,WAHAS,EAAWG,KAAX,UAAmBD,EAAnB,mBAMGF,G,EAGTI,gBAAkB,WAChB,OAAO,YAAI9C,MAAM,EAAKlB,MAAM1C,kBAAkB6D,KAC5C,SAACC,EAAIC,GACH,OACE,wBAAIC,IAAG,WAAMD,GAASvB,UAAU,cAC7B,EAAKgD,oBAAoBzB,Q,uDAO1B,IAAD,OACP,OACC,kBAAC,IAAMb,SAAP,KACG,4BACE,wBAAIC,QAASC,KAAKV,MAAM1C,gBAAkB,EAAGwC,UAAU,aAEzD,4BACE,wBACEA,UAAU,QACVmE,MAAM,0PACNlE,QAAS,WACP,IAAMkC,EAAO,EAAK0B,uBAAuBO,KAAK,QAC9ClC,EAAgBC,KALpB,UAQCvB,KAAKsD,wB,GAnEW3D,IAAMC,WAiFlBM,eAPS,SAAC3C,GACvB,MAAQ,CACNX,gBAAiBW,EAAMD,SAASV,gBAChCI,QAASO,EAAMI,KAAKX,WAIgB,GAAzBkD,CAA6BiC,GCjFtCsB,E,4MAIJC,iBAAmB,WAAO,IAAD,EACO,EAAKpE,MAA3BqE,EADe,EACfA,SAAU3G,EADK,EACLA,QAClB,OAAIA,EAAQ2G,GACH3G,EAAQ2G,GAAUP,KAErB,kCAAN,OAAgBO,EAAW,I,EAG7BC,gBAAkB,WAChB,OACE,2BACIxE,UAAU,cACVyE,KAAK,KACLpG,KAAK,OACLqE,MAAO,EAAK4B,mBACZI,SAAU,SAACC,GACTA,EAAEC,iBACF,EAAKC,SAAS,CAACb,KAAMW,EAAEG,OAAOpC,QAC9B,EAAKxC,MAAM6E,cACT,CAACf,KAAMW,EAAEG,OAAOpC,MAAOvB,GAAI,EAAKjB,MAAMqE,YAG1CS,WAAY,SAACL,GACG,UAAVA,EAAEnD,KACJmD,EAAEG,OAAOG,W,EAOrBC,wBAA0B,SAACC,GACzB,OACE,yBACEnF,UAAS,wBAAmBmF,GAC5BlF,QAAS,WACP,IAAMmF,GAAgB,EAAKlF,MAAMrC,mBAC/B,EAAKqC,MAAMzC,kBAAoB,GAAK,EAAKyC,MAAMxC,gBACjD,EAAKwC,MAAMmF,gBAAgB,CACzBd,SAAU,EAAKrE,MAAMqE,SACrB5C,WAAY,EAAKzB,MAAMrC,mBACvB+F,MAAgB,SAATuB,EAAkBC,GAAgBA,MAI7C,uBAAGpF,UAAS,iBAAYmF,EAAZ,e,uDAMhB,OACE,yBAAKnF,UAAU,kBACZY,KAAKsE,wBAAwB,QAC7BtE,KAAK4D,kBACL5D,KAAKsE,wBAAwB,c,GA3DV3E,IAAMC,WA0EnBM,eATS,SAAC3C,GACvB,MAAQ,CACNP,QAASO,EAAMI,KAAKX,QACpBC,mBAAoBM,EAAMI,KAAKV,mBAC/BJ,kBAAmBU,EAAMD,SAAST,kBAClCC,gBAAiBS,EAAMD,SAASR,mBAKf,CAAEqH,cRRM,SAAC,GAAD,IAAGf,EAAH,EAAGA,KAAM7C,EAAT,EAASA,GAAT,OAAiB,SAACxC,EAAUI,GAAc,IAC7DnB,EAAYmB,IAAWR,KAAvBX,QACRA,EAAQuD,GAAI6C,KAAOA,EACnBrF,EAAS,CAAEN,KFnEkB,kBEmEKC,QAAQ,YAAKV,KAC/Ce,EAAUC,OQI0ByG,gBRApC,SAAC,GAAD,IAAGd,EAAH,EAAGA,SAAU5C,EAAb,EAAaA,WAAYiC,EAAzB,EAAyBA,MAAzB,OAAoC,SAACjF,EAAUI,GAAc,IACrDnB,EAAYmB,IAAWR,KAAvBX,QACF0H,EAAe1H,EAAQ2G,GAAU3C,QAAQD,GAE7C/D,EAAQ2G,GAAU3C,QAAQD,GADxBiC,IAAU0B,EAC4B,KAEA1B,EAE1CjF,EAAS,CACPN,KFzE6B,oBE0E7BC,QAAQ,YAAKV,KAEfe,EAAUC,QQbGkC,CAEXuD,GC5EEkB,E,4MAEJC,qBAAuB,WACrB,OAAO,YAAIpE,MAAM,EAAKlB,MAAM1C,kBAAkB6D,KAC5C,SAACC,EAAIC,GACH,OACE,wBAAIC,IAAG,aAAQD,IAAS,kBAAC,EAAD,CAAegD,SAAUhD,S,uDAOvD,OACE,wBAAIvB,UAAU,kBACZ,6BACCY,KAAK4E,4B,GAhBcjF,IAAMC,WA4BnBM,eANS,SAAC3C,GACvB,MAAQ,CACNX,gBAAiBW,EAAMD,SAASV,mBAII,GAAzBsD,CAA6ByE,GC3BtCE,E,4MAEJC,wBAA0B,WAEtBvG,SAASwG,cAAT,YAA4B,EAAKzF,MAAMrC,qBAC1B+H,eAAe,CAACC,MAAO,SAAUC,SAAU,Y,EAG5DC,cAAgB,WAAO,IAAD,EAOhB,EAAK7F,MALPzB,EAFkB,EAElBA,sBACAZ,EAHkB,EAGlBA,mBACAmI,EAJkB,EAIlBA,iBACAvI,EALkB,EAKlBA,kBACAwI,EANkB,EAMlBA,WAE0BD,EAAmBvI,EACrBI,GAAsB,GAC9CoI,IAEFxH,EAAsBZ,EAAqB,GAC3C,EAAK6H,2B,EAGPQ,cAAgB,WACwB,IAAlC,EAAKhG,MAAMrC,qBAGf,EAAKqC,MAAMzB,sBAAsB,EAAKyB,MAAMrC,mBAAqB,GACjE,EAAK6H,4B,EAGPS,cAAgB,WAAO,IAAD,EAC4B,EAAKjG,MAA9CrC,EADa,EACbA,mBAAoBJ,EADP,EACOA,kBACrB2I,EAAaC,KAAKC,MAAMzI,EAAqBJ,GAAqB,EAClE8I,EAAe1I,EAAqBJ,EAAqB,EAC/D,MAAM,GAAN,OAAU2I,EAAV,YAAwBG,I,EAG1BC,eAAiB,WAAO,IAAD,EACsD,EAAKtG,MAA1EnC,EADe,EACfA,SAAUF,EADK,EACLA,mBAAoBJ,EADf,EACeA,kBAAmBC,EADlC,EACkCA,gBACnD+I,EAAoBJ,KAAKC,MAAMzI,EAAqBJ,GACpDiJ,EAAqB3I,EAAS0I,GAC9BrB,GAAiBvH,EAAqBJ,EAAqB,GAAKC,EAEpE,MAAM,6BAAN,OAAgB+I,EAAoB,EAApC,aAA0CC,EAA1C,+DAA2EtB,I,uDAGnE,IAAD,OACP,OACE,4BACE,wBAAIzE,QAASC,KAAKV,MAAM1C,gBAAkB,GACxC,yBAAKwC,UAAU,oBACb,4BACEC,QAAS,kBAAM,EAAKiG,iBACpBlG,UAAU,oBACX,uBAAGA,UAAU,yBACd,4BACAA,UAAU,sBACVC,QAAS,WACP,IAAMkC,EAAO,EAAKqE,iBACdG,OAAOC,SAETD,OAAOC,SAASC,OAAOC,WAAW3E,GAElCD,EAAgBC,KAIjBvB,KAAKuF,iBAER,4BACElG,QAAS,kBAAM,EAAK8F,iBACpB/F,UAAU,oBACX,uBAAGA,UAAU,iC,GA1EIO,IAAMC,WA6FrBM,eAXS,SAAC3C,GACvB,MAAQ,CACNN,mBAAoBM,EAAMI,KAAKV,mBAC/BL,gBAAiBW,EAAMD,SAASV,gBAChCC,kBAAmBU,EAAMD,SAAST,kBAClCuI,iBAAkB7H,EAAMI,KAAKR,SAASwF,OACtCxF,SAAUI,EAAMI,KAAKR,SACrBL,gBAAiBS,EAAMD,SAASR,mBAII,CAACe,wBAAuBwH,WVJtC,kBAAM,SAACtH,EAAUI,GACzC,IAAMhB,EAAQ,YAAOgB,IAAWR,KAAKR,UAC/BgJ,EAAmBhJ,EAASwF,OAAS,EACrCyD,EAAiBjI,IAAWR,KAAKP,aAAa+I,EAAmB,IAAhD,oCACZA,GACXhJ,EAASkG,KAAK+C,GAEdrI,EAAS,CAAEN,KF3Fc,cE2FKC,QAAQ,YAAKP,KAC3CY,EAAUC,QUJGkC,CAA8D2E,GC/FvEwB,E,4MACJ9I,MAAQ,CAAC+I,OAAQ,G,EAYjBC,kBAAoB,WAElB,OADa,EAAKjH,MAAMpC,YACZsJ,MAAM,MAAM/F,KAAI,SAACC,EAAIC,GAC/B,OAAID,GAAa,OAAPA,GAAsB,MAAPA,EAErB,kBAAC,IAAMZ,SAAP,CAAgBc,IAAG,uBAAkBD,IACnC,yBACEvB,UAAS,qBAAgBuB,IAAU,EAAKpD,MAAM+I,OAAS,SAAW,IAClEjH,QAAS,kBAAM,EAAK4E,SAAS,CAACqC,OAAQ3F,MACtCD,GACF,yBAAKtB,UAAU,cAAf,SAIC,S,uDAvBT,OACE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,WACZY,KAAKuG,0B,GAPW5G,IAAMC,WAuClBM,eAPS,SAAC3C,GACvB,MAAQ,CACNX,gBAAiBW,EAAMD,SAASV,gBAChCM,YAAaK,EAAMI,KAAKT,eAIY,GAAzBgD,CAA6BmG,GC/BtCI,E,4MAOJC,oBAAsB,WACpB,OAAO,EAAKpH,MAAMnC,SAASsD,KAAI,SAACkG,EAAShG,GACvC,OACE,kBAAC,EAAD,CACEV,YAAa0G,EACb/F,IAAKD,EACLS,UAAWT,Q,kEAXiB,IAA9BX,KAAKV,MAAMtC,QAAQ2F,QACrB3C,KAAKV,MAAMsH,kB,+BAmBb,OACE,kBAAC,IAAM9G,SAAP,KACE,yBAAKV,UAAU,kBACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,gBACf,+BACGY,KAAK0G,yBAIZ,2BAAOtH,UAAU,gBACf,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QAIJ,kBAAC,EAAD,Y,GAxCSO,IAAMC,WAyDVM,eAVS,SAAC3C,GACvB,MAAO,CACLN,mBAAoBM,EAAMI,KAAKV,mBAC/BE,SAAUI,EAAMI,KAAKR,SACrBC,aAAcG,EAAMI,KAAKP,aACzBR,gBAAiBW,EAAMD,SAASV,gBAChCI,QAASO,EAAMI,KAAKX,WAIgB,CAAC4J,cZVZ,kBAAM,SAAC7I,EAAUI,GAG5C,IAFA,IAAMG,EAAeH,IAAWb,SAASV,gBACnCI,EAAU,GACP6J,EAAI,EAAGA,EAAIvI,EAAcuI,IAChC7J,EAAQqG,KAAK,CACXD,KAAK,kCAAD,OAAWyD,GACfC,KAAM,GACN9F,QAAS,KAGbjD,EAAS,CAAEN,KF9DgB,gBE8DKC,QAAQ,GAAD,OAAMV,QYAhCkD,CAA0CuG,GC1DnDM,E,4MACJxJ,MAAQ,CACNP,QAAS,EACTgK,UAAW,EACXC,WAAY,GACZC,eAAe,G,EA8EjBC,aAAe,SAACpD,GACd,IAAMqD,EAAe,EAAK7J,MAAM2J,cAChCnD,EAAEC,iBACF,EAAK1E,MAAM+H,iBAAiB,EAAK9J,MAAMP,SACvC,EAAKsC,MAAMgI,mBAAmB,EAAK/J,MAAMyJ,WACzC,EAAK1H,MAAMiI,mBAAmB,EAAKhK,MAAM0J,YACzC,EAAK3H,MAAMkI,UAAU,CAACJ,iBACtB,EAAK9H,MAAMrB,eAAeM,SAASmD,KAAK+F,c,uDAlFhC,IAAD,OACP,OACE,yBAAKrI,UAAU,uBACb,yBAAKA,UAAU,YACb,0BACEgE,KAAK,WACL7C,GAAG,WACHmH,SAAU1H,KAAKmH,cAEjB,8IACE,6BACE,2BAAOQ,QAAQ,eAAf,+EACA,4BACE7F,MAAO9B,KAAKzC,MAAMP,QAClB8G,SAAU,SAACC,GAAD,OAAO,EAAKE,SAAS,CAAEjH,QAAS4K,SAAS7D,EAAEG,OAAOpC,UAC5DvB,GAAG,eAEH,4BAAQuB,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAGJ,6BACE,2BAAO6F,QAAQ,iBAAf,qHACA,4BACE7F,MAAO9B,KAAKzC,MAAMyJ,UAClBlD,SAAU,SAACC,GAAD,OAAO,EAAKE,SAAS,CAAE+C,UAAWY,SAAS7D,EAAEG,OAAOpC,UAC9DvB,GAAG,iBAEH,4BAAQuB,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,QAGJ,6BACE,2BAAO6F,QAAQ,cAAf,4LACA,4BACE7F,MAAO9B,KAAKzC,MAAM0J,WAClBnD,SAAU,SAACC,GAAD,OAAO,EAAKE,SAAS,CAAEgD,WAAYW,SAAS7D,EAAEG,OAAOpC,UAC/DvB,GAAG,cAEH,4BAAQuB,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,SAGJ,6BACE,2BACErE,KAAK,WACLqG,SAAU,SAACC,GAAD,OAAO,EAAKE,SAAS,CAAEiD,cAAenD,EAAEG,OAAO2D,WACzDtH,GAAG,mBAEL,2BAAOoH,QAAQ,kBAAf,qMAEF,4BACElK,KAAK,UADP,wE,GAxEUkC,IAAMC,WA8FbM,cAAQ,KAAM,CAC3BmH,iBbhF8B,SAACvJ,GAAD,OAAS,SAACC,GACxCA,EAAS,CAAEN,KFxBqB,qBEwBKC,QAASI,MagF9CwJ,mBb7EgC,SAACxJ,GAAD,OAAS,SAACC,GAC1CA,EAAS,CAAEN,KF3BuB,uBE2BKC,QAASI,Ma6EhDyJ,mBb1EgC,SAACN,GACjC,MAAQ,CAAExJ,KF9BwB,uBE8BIC,QAASuJ,Ia0E/CO,UbrEuB,SAAC,GAAD,IAAEJ,EAAF,EAAEA,aAAF,OAAoB,SAACrJ,EAAUI,GAAc,IAC7DR,EAAQQ,IAARR,KAEHyJ,IACFzJ,EAAKR,SAAW,CAAC,8BAAW,8BAAW,+BACvCQ,EAAKP,aAAe,GACpBO,EAAKT,YAAc,IAGrBa,EAAU,CAAEN,KFhDY,aEgDMC,QAASC,IACvCmK,EAAQzE,KAAK,KACbtF,EAAUC,Oa2DVC,kBALaiC,CAMX6G,GC1GEgB,E,4MACJxK,MAAQ,CAAEJ,SAAU,GAAID,YAAa,I,EA+BrC8K,qBAAuB,SAACjE,GACtB,IAAM5G,EAAW4G,EAAEG,OAAOpC,MAC1B,EAAKmC,SAAS,CAAE9G,aAChB,IAAM8K,EAAgB9K,EAASqJ,MAAM,MACrC,EAAKlH,MAAM4I,gBAAgBD,I,EAG7BE,oBAAsB,SAACpE,GACrB,IAAM7G,EAAc6G,EAAEG,OAAOpC,MAC7B,EAAKmC,SAAS,CAAE/G,gBACZA,GACF,EAAKoC,MAAM8I,eAAelL,I,kEAvC5B,IAAMC,EAAW6C,KAAKV,MAAMnC,SAASqG,KAAK,MAClCtG,EAAgB8C,KAAKV,MAArBpC,YACR8C,KAAKiE,SAAS,CAAE9G,WAAUD,kB,+BAI1B,OACE,yBAAKkC,UAAU,uBACb,yBAAKA,UAAU,iBACb,uFACA,8BACEiJ,YAAW,8jBACXvE,SAAU9D,KAAKgI,qBACflG,MAAO9B,KAAKzC,MAAMJ,WAGpB,mGACA,8BACEkL,YAAW,8bACXvE,SAAU9D,KAAKmI,oBACfrG,MAAO9B,KAAKzC,MAAML,oB,GAxBHyC,IAAMC,WAuDlBM,eAPS,SAAC3C,GACvB,MAAQ,CACNJ,SAAUI,EAAMI,KAAKP,aACrBF,YAAaK,EAAMI,KAAKT,eAIY,CACtCgL,gBdiD6B,SAACI,GAAD,OAAW,SAACvK,EAAUI,GACnD,IAAMoK,EAAO,eAAOpK,IAAWR,MAC/B4K,EAAQnL,aAAR,YAA2BkL,GAC3BC,EAAQpL,SAASsD,KAAI,SAACC,EAAIC,GACxB,OAAO4H,EAAQpL,SAASwD,GAAS4H,EAAQnL,aAAauD,IAArB,oCAAwCA,EAAQ,MAEnF5C,EAAS,CAAEN,KFxGoB,oBEwGKC,QAAS6K,IAC7CxK,EAAUC,OcxDOoK,ed2DW,SAAC7G,GAAD,OAAU,SAACxD,EAAUI,GACjDJ,EAAS,CAAEN,KF/GmB,mBE+GKC,QAAS6D,IAC5CxD,EAASC,Qc9DIkC,CAEZ6H,G,QCzDGS,E,4MAuBJC,YAAc,CAAC,UAAW,UAAW,UAC3B,UAAW,UAAW,UACtB,UAAW,UAAW,UACtB,W,EAEVC,aAAe,CACbC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CAAC,CACNC,MAAO,CACLC,aAAa,GAEfC,WAAY,CACVC,SAAS,EACTC,YAAa,kFACbC,SAAU,OAIhBC,OAAQ,CACNC,OAAQ,CACNF,SAAU,KAGdG,WAAW,EACXC,OAAQ,CACNC,QAAS,I,EAIbC,aAAe,CAAC,CACdC,WAAY,SAASC,EAAeC,GAClC,IAAIC,EAAMF,EAAcG,MAAMD,IAC9BA,EAAIE,UAAY,QAChBF,EAAIG,SAAS,EAAG,EAAG,KAAM,S,EAI7BC,YAAc,WAGZ,IAHmB,IAAD,EACc,EAAK3K,MAA/BtC,EADY,EACZA,QAASkN,EADG,EACHA,aACXC,EAAM,GACDtD,EAAI,EAAGA,EAAI7J,EAAQ2F,OAAQkE,IAAK,CACrC,IAAIuD,EAAa,GACjBA,EAAWC,MAAQrN,EAAQ6J,GAAGzD,KAC9BgH,EAAWE,gBAAkB,EAAK7B,YAAY5B,GAC9CuD,EAAWG,YAAc,EAAK9B,YAAY5B,GAC1CuD,EAAWI,MAAO,EAElB,IAAI9H,EAAS,GACbA,EAAOW,KAAK,GACZ,IAAK,IAAIoH,EAAI,EAAGA,EAAKP,EAAe,EAAIO,IAAK,CACzC,IAAIzH,EAAQhG,EAAQ6J,GAAG7F,QAAQyJ,EAAI,QAErBC,IAAV1H,EACFA,EAAQN,EAAO+H,EAAI,GAKjBzH,GAASN,EAAO+H,EAAI,GAExB/H,EAAOW,KAAKL,GAEhBoH,EAAWO,KAAOjI,EAClByH,EAAI9G,KAAJ,eAAa+G,IAEjB,OAAOD,G,EAGTS,UAAY,WAEV,IADA,IAAIvB,EAAS,GACJxC,EAAI,EAAGA,EAAK,EAAKvH,MAAM4K,aAAe,EAAIrD,IAC/CwC,EAAOhG,KAAKwD,GAEhB,OAAOwC,G,uDA9FP,OADArJ,KAAKiK,cAEH,yBAAK7K,UAAU,uBACb,yBAAKA,UAAU,QAAQmB,GAAG,SACxB,oEACA,kBAAC,OAAD,CACIoK,KAAM,CACJtB,OAAQrJ,KAAK4K,YACbC,SAAU7K,KAAKiK,eAEjB/L,MAAO8B,KAAKV,MAAMvC,QAAU,GAC5B+N,QAAQ,EACRC,OAAQ,IACRC,QAAShL,KAAK0I,aACduC,QAASjL,KAAKyJ,qB,GAhBR9J,IAAMC,WA6GXM,gBARS,SAAC3C,GACvB,MAAO,CACLP,QAASO,EAAMI,KAAKX,QACpBkN,aAAc3M,EAAMI,KAAKR,SAASwF,OAASpF,EAAMD,SAAST,kBAC1DE,QAASQ,EAAMD,SAASP,WAIY,GAAzBmD,CAA6BsI,GCtGtC0C,G,4MAEJ3N,MAAQ,CAAC4N,aAAa,G,EAUtBC,aAAe,WACb,EAAK9L,MAAMrB,eAAeM,SAASmD,KAAK+F,c,EAG1ClI,gBAAkB,WAChB,EAAK0E,SAAS,CAACkH,aAAc,EAAK5N,MAAM4N,e,EAG1CE,mBAAqB,WACnB,IAAK,EAAK9N,MAAM4N,YACd,OACE,yBACC/L,UAAU,gBACVC,QAAS,WACP,EAAKE,oBAGN,uBAAGH,UAAU,2B,kEAxBnB,IAAMlB,EAAQK,SAASmD,KAAK+F,YAC5BzH,KAAKiE,SAAS,CAACkH,aAAa,IAC5BnL,KAAKV,MAAMrB,eAAeC,GAC1B6H,OAAOuF,iBAAiB,SAAUtL,KAAKoL,cACvCpL,KAAKV,MAAMiM,8B,+BA2BX,OACE,yBAAKnM,UAAU,aACb,kBAAC,IAAD,CAAQ0I,QAASA,IACa,IAA3B9H,KAAKzC,MAAM4N,YACZ,yBAAK/L,UAAU,kBACb,kBAAC,EAAD,CAAMG,gBAAiBS,KAAKT,mBACrBS,KAAKqL,qBACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,KAAK,IAAI/L,OAAK,GACnB,kBAAC,EAAD,CACEF,gBAAiBS,KAAKT,gBACtB4L,YAAanL,KAAKzC,MAAM4N,eAG5B,kBAAC,IAAD,CAAOK,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WAGZ,kBAAC,IAAD,CAAOA,KAAK,kB,GA9DN7L,IAAMC,WAwETM,eAAQ,KAAM,CAACjC,iBAAgBsN,0BhB6EL,kBAAM,SAACxN,EAAUI,GACxD,IAAMZ,EAAQ0B,KAAKwM,MAAM1M,aAAa2M,QAAQ,UAE5C3N,EADER,EACO,CAAEE,KF/I8B,8BE+IOC,QAASH,GAEhD,CAAEE,KFjJ8B,8BEiJOC,QAASS,SgBlF9C+B,CAA2DgL,IC1EpES,GAAmB5F,OAAO6F,sCAAwCC,IAClEC,GAAQC,YACZC,EACAL,GAAiBM,YAAgBC,OAInCC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,OAEFvN,SAASwG,cAAc,W","file":"static/js/main.233c4129.chunk.js","sourcesContent":["import { \r\n  SET_PLAYERS_NUMBER,\r\n  SET_QUESTIONS_NUMBER,\r\n  SET_PRICE_MULTIPLIER,\r\n  SET_UI_GAME_WIDTH\r\n } from '../actions/types'\r\n\r\nconst INITITAL_STATE = {\r\n  numberOfPlayers: 4,\r\n  numberOfQuestions: 5,\r\n  priceMultiplier: 10,\r\n  uiWidth: 600\r\n}\r\n\r\nexport default (state = INITITAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case SET_PLAYERS_NUMBER:\r\n      return ({...state, numberOfPlayers: action.payload})\r\n    case SET_QUESTIONS_NUMBER:\r\n      return ({...state, numberOfQuestions: action.payload})\r\n    case SET_PRICE_MULTIPLIER:\r\n      return ({...state, priceMultiplier: action.payload})\r\n\r\n    case SET_UI_GAME_WIDTH:\r\n      return ({...state, uiWidth: action.payload})\r\n    default: \r\n      return state\r\n  }\r\n}","import { \r\n  RESET_GAME,\r\n  ADD_SUBJECT,\r\n  RESET_SUBJECTS,\r\n  SET_SUBJECT_NAMES,\r\n  SET_PACKAGE_TEXT,\r\n  SET_CURRENT_QUESTION_NUM,\r\n  SET_PLAYER_ANSWER,\r\n  CREATE_PLAYER,\r\n  SET_PLAYER_NAME,\r\n  SET_UI_GAME_WIDTH,\r\n  SAVE_STATE_TO_LOCAL_STORAGE,\r\n  LOAD_STATE_FROM_LOCAL_STORAGE\r\n } from '../actions/types'\r\n\r\nconst INITITAL_STATE = {\r\n  players: [],\r\n  currentQuestionNum: 0,\r\n  packageText: '',\r\n  subjects: ['Тема #1', 'Тема #2', 'Тема #3'],\r\n  subjectNames: []\r\n}\r\n\r\nexport default (state = INITITAL_STATE, action) => {\r\n  const { payload } = action\r\n\r\n  switch(action.type) {\r\n    case RESET_GAME:\r\n      return { ...INITITAL_STATE, \r\n        subjects: [...payload.subjects],\r\n        subjectNames: [...payload.subjectNames],\r\n        packageText: payload.packageText }\r\n    \r\n    case CREATE_PLAYER:\r\n      return {...state, players: payload}\r\n    \r\n    case SET_PLAYER_NAME:\r\n      return {...state, players: payload}\r\n\r\n    case SET_CURRENT_QUESTION_NUM:\r\n      return {...state, currentQuestionNum: payload}\r\n\r\n    case SET_PLAYER_ANSWER: \r\n      return {...state, players: payload}\r\n\r\n    case ADD_SUBJECT:\r\n      return {...state, subjects: payload}\r\n\r\n    case SET_PACKAGE_TEXT:\r\n      return {...state, packageText: payload}\r\n\r\n    case RESET_SUBJECTS:\r\n      return {\r\n        ...state, \r\n        subjects: [...INITITAL_STATE.subjects], \r\n        subjectNames: []\r\n      }\r\n    case SET_SUBJECT_NAMES:\r\n      return {...payload}\r\n\r\n    case SET_UI_GAME_WIDTH:\r\n      return state\r\n\r\n    case SAVE_STATE_TO_LOCAL_STORAGE:\r\n      return state\r\n\r\n    case LOAD_STATE_FROM_LOCAL_STORAGE:\r\n      return {...payload.game}\r\n      \r\n    default: \r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport settingsReducer from './settingsReducer'\r\nimport gameReducer from './gameReducer'\r\n\r\nexport default combineReducers({\r\n  settings: settingsReducer,\r\n  game: gameReducer\r\n})","export const RESET_GAME = 'RESET_GAME'\r\n\r\nexport const SET_PLAYERS_NUMBER = 'SET_PLAYERS_NUMBER'\r\nexport const SET_QUESTIONS_NUMBER = 'SET_QUESTIONS_NUMBER'\r\nexport const SET_PRICE_MULTIPLIER = 'SET_PRICE_MULTIPLIER'\r\n\r\nexport const CREATE_PLAYER = 'CREATE_PLAYER'\r\nexport const SET_PLAYER_NAME = 'SET_PLAYER_NAME'\r\n\r\nexport const SET_PACKAGE_TEXT = 'SET_PACKAGE_TEXT'\r\nexport const ADD_SUBJECT = 'ADD_SUBJECT'\r\nexport const SET_SUBJECT_NAMES = 'SET_SUBJECT_NAMES'\r\nexport const RESET_SUBJECTS = 'RESET_SUBJECTS'\r\n\r\nexport const SET_CURRENT_QUESTION_NUM = 'SET_CURRENT_QUESTION_NUM'\r\nexport const SET_PLAYER_ANSWER = 'SET_PLAYER_ANSWER'\r\n\r\nexport const SET_UI_GAME_WIDTH = 'SET_UI_GAME_WIDTH'\r\n\r\nexport const SAVE_STATE_TO_LOCAL_STORAGE = 'SAVE_STATE_TO_LOCAL_STORAGE'\r\nexport const LOAD_STATE_FROM_LOCAL_STORAGE = 'LOAD_STATE_TO_LOCAL_STORAGE'","import { createMemoryHistory } from 'history'\r\n\r\nexport default createMemoryHistory()","import history from '../history'\r\nimport {\r\n  RESET_GAME,\r\n  \r\n  SET_PLAYERS_NUMBER,\r\n  SET_QUESTIONS_NUMBER,\r\n  SET_PRICE_MULTIPLIER,\r\n\r\n  CREATE_PLAYER,\r\n  SET_PLAYER_NAME,\r\n\r\n  SET_CURRENT_QUESTION_NUM,\r\n  SET_PLAYER_ANSWER,\r\n  ADD_SUBJECT,\r\n  RESET_SUBJECTS,\r\n  SET_SUBJECT_NAMES,\r\n  SET_PACKAGE_TEXT,\r\n\r\n  SET_UI_GAME_WIDTH,\r\n\r\n  SAVE_STATE_TO_LOCAL_STORAGE,\r\n  LOAD_STATE_FROM_LOCAL_STORAGE\r\n} from './types'\r\n\r\n//#region SETTINGS\r\nexport const setPlayersNumber = (num) => (dispatch) => {\r\n  dispatch({ type: SET_PLAYERS_NUMBER, payload: num })\r\n}\r\n\r\nexport const setQuestionsNumber = (num) => (dispatch) => {\r\n  dispatch({ type: SET_QUESTIONS_NUMBER, payload: num })\r\n}\r\n\r\nexport const setPriceMultiplier = (multiplier) => {\r\n  return ({ type: SET_PRICE_MULTIPLIER, payload: multiplier })\r\n}\r\n\r\n//#endregion\r\n\r\nexport const resetGame = ({resetPackage}) => (dispatch, getState) => {\r\n  const {game} = getState()\r\n  \r\n  if (resetPackage) {\r\n    game.subjects = ['Тема #1', 'Тема #2', 'Тема #3']\r\n    game.subjectNames = []\r\n    game.packageText = \"\"\r\n  }\r\n\r\n  dispatch ({ type: RESET_GAME, payload: game })\r\n  history.push('/')\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const setCurrentQuestionNum = (num) => (dispatch) => {\r\n  dispatch({ type: SET_CURRENT_QUESTION_NUM, payload: num })\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const createPlayers = () => (dispatch, getState) => {\r\n  const numOfPlayers = getState().settings.numberOfPlayers\r\n  const players = []\r\n  for (let i = 0; i < numOfPlayers; i++) {\r\n    players.push({\r\n      name: `Игрок ${i}`,\r\n      team: '',\r\n      answers: []\r\n    })\r\n  }\r\n  dispatch({ type: CREATE_PLAYER, payload: [...players] })\r\n}\r\n\r\nexport const setPlayerName = ({ name, id}) => (dispatch, getState) => {\r\n  const { players } = getState().game\r\n  players[id].name = name\r\n  dispatch({ type: SET_PLAYER_NAME, payload: [...players] })\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const setPlayerAnswer = \r\n  ({ playerID, questionID, score}) => (dispatch, getState) => {\r\n  const { players } = getState().game\r\n  const currentScore = players[playerID].answers[questionID]\r\n  if (score === currentScore) {\r\n    players[playerID].answers[questionID] = null\r\n  } else {\r\n    players[playerID].answers[questionID] = score\r\n  }\r\n  dispatch({\r\n    type: SET_PLAYER_ANSWER,\r\n    payload: [...players]\r\n  })\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const addSubject = () => (dispatch, getState) => {\r\n  const subjects = [...getState().game.subjects]\r\n  const newSubjectNumber = subjects.length + 1\r\n  const newSubjectName = getState().game.subjectNames[newSubjectNumber - 1] ||\r\n    `Тема #${newSubjectNumber}`\r\n  subjects.push(newSubjectName)\r\n  \r\n  dispatch({ type: ADD_SUBJECT, payload: [...subjects] })\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const resetSubjects = () => (dispatch) => {\r\n  dispatch({ type: RESET_SUBJECTS, payload: [] })\r\n}\r\n\r\nexport const setSubjectNames = (names) => (dispatch, getState) => {\r\n  const newGame = {...getState().game}\r\n  newGame.subjectNames = [...names]\r\n  newGame.subjects.map((el, index) => {\r\n    return newGame.subjects[index] = newGame.subjectNames[index] || `Тема #${index + 1}`\r\n  })\r\n  dispatch({ type: SET_SUBJECT_NAMES, payload: newGame})\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const setPackageText = (text) => (dispatch, getState) => {\r\n  dispatch({ type: SET_PACKAGE_TEXT, payload: text})\r\n  dispatch(saveStateToLocalStorage())\r\n}\r\n\r\nexport const setUIGameWidth = (width) => (dispatch, getState) => {\r\n  const numOfPlayers = getState().settings.numberOfPlayers\r\n  const baseWidth = 130\r\n  let gameWidth, playerScoreWidth\r\n  if (width / numOfPlayers <= 120) {\r\n    gameWidth = width\r\n    playerScoreWidth = width / numOfPlayers\r\n  } else if (width / numOfPlayers >= baseWidth) {\r\n    gameWidth = numOfPlayers * baseWidth\r\n    playerScoreWidth = baseWidth\r\n  } else {\r\n    gameWidth = width\r\n    playerScoreWidth = width / numOfPlayers\r\n  }\r\n  document.documentElement.style.setProperty('--game-width', `${gameWidth}px`)\r\n  document.documentElement.style.setProperty('--player-score-width', `${playerScoreWidth}px`)\r\n  dispatch({ type: SET_UI_GAME_WIDTH, payload: gameWidth})\r\n}\r\n\r\nlet allowRecording = true\r\n\r\nexport const saveStateToLocalStorage = () => (dispatch, getState) => {\r\n  if (allowRecording) {\r\n    allowRecording = false\r\n\r\n    setTimeout(() => {\r\n      console.log('saved state to local storage')\r\n      localStorage.setItem('state', JSON.stringify(getState()))\r\n      allowRecording = true\r\n    }, 1000);\r\n\r\n  }\r\n  \r\n  dispatch({ type: SAVE_STATE_TO_LOCAL_STORAGE, payload: null })\r\n}\r\n\r\nexport const loadStateFromLocalStorage = () => (dispatch, getState) => {\r\n  const state = JSON.parse(localStorage.getItem('state'))\r\n  if (state) {\r\n    dispatch({ type: LOAD_STATE_FROM_LOCAL_STORAGE, payload: state })\r\n  } else {\r\n    dispatch({ type: LOAD_STATE_FROM_LOCAL_STORAGE, payload: getState() })\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass Menu extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menu\">\r\n        <button \r\n          className=\"hide-menu-btn\"\r\n          onClick={() => {\r\n            this.props.switchMenuState()\r\n          }}\r\n        >\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n        <NavLink \r\n          to=\"/\" exact \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>Игра</div>\r\n        </NavLink>\r\n        <NavLink \r\n          to=\"/newgame\" \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>Новая игра</div>\r\n        </NavLink>\r\n        <NavLink \r\n          to=\"/subjects\" \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>Темы и вопросы</div>\r\n        </NavLink>\r\n        <NavLink \r\n          to=\"/graph\" \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>График</div>\r\n        </NavLink>\r\n        <NavLink \r\n          to=\"/theme\" \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>Цвета</div>\r\n        </NavLink>\r\n        <NavLink \r\n          to=\"/about\" \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>?</div>\r\n        </NavLink>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Subject extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <tr>\r\n          <td colSpan={this.props.numberOfPlayers + 1} className=\"subject\">\r\n            {this.props.subjectName}\r\n          </td>\r\n        </tr>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Subject)","import React from 'react'\r\n\r\nclass Price extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <td className=\"price\">\r\n        {this.props.price}\r\n      </td>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Price","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentQuestionNum } from '../actions'\r\nimport Price from './Price'\r\n\r\nclass Question extends React.Component {\r\n\r\n  renderPlayerScoreCell = () => {\r\n    const { id, numberOfPlayers } = this.props\r\n    return [...Array(numberOfPlayers)].map(\r\n      (el, index) => {\r\n        return (\r\n          <td \r\n            className=\"player-score\"\r\n            key={`${id}.${index}`}\r\n          >\r\n            {this.getPlayerScore({player: index, questionID: id})}\r\n          </td>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  getPlayerScore = ({player, questionID}) => {\r\n    const { players } = this.props\r\n    if (!players[player]) {\r\n      return\r\n    }\r\n    const answer = players[player].answers[questionID]\r\n    return answer\r\n  }\r\n\r\n  isActive = () => {\r\n    return (\r\n      this.props.currentQuestionNum === this.props.id ? 'active' : ''\r\n    )\r\n  }\r\n\r\n  onClick = () => {\r\n    this.props.setCurrentQuestionNum(this.props.id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr \r\n        onClick={() => this.onClick()}\r\n        className={`question ${this.isActive()} q${this.props.id}`}\r\n      >\r\n        <Price price={this.props.price} />\r\n        {this.renderPlayerScoreCell()}\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    players: state.game.players,\r\n    currentQuestionNum: state.game.currentQuestionNum\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {setCurrentQuestionNum})(Question)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Subject from './Subject'\r\nimport Question from './Question'\r\n\r\nclass SubjectBlock extends React.Component {\r\n\r\n  renderQuestions = () => {\r\n    const {subjectID, numberOfQuestions, priceMultiplier} = this.props\r\n    return [...Array(this.props.numberOfQuestions)].map(\r\n      (el, index) => {\r\n        const questionID = subjectID * numberOfQuestions + index\r\n        const price = (index + 1) * priceMultiplier\r\n        return (\r\n          <Question key={questionID} id={questionID} price={price}/>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  renderSubject = () => {\r\n    return (\r\n      <Subject \r\n        subjectName={this.props.subjectName}\r\n        subjectID={this.props.subjectID}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.renderSubject()}\r\n        {this.renderQuestions()}\r\n      </React.Fragment>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfQuestions: state.settings.numberOfQuestions,\r\n    priceMultiplier: state.settings.priceMultiplier\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(SubjectBlock)","export const copyToClipboard = (text) => {\r\n  let dummy = document.createElement('textarea')\r\n  document.body.appendChild(dummy)\r\n  dummy.setAttribute('id', 'dummy')\r\n  document.getElementById('dummy').value = text\r\n  dummy.select()\r\n  dummy.setSelectionRange(0, 99999)\r\n  document.execCommand(\"copy\")\r\n  document.body.removeChild(dummy)\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { copyToClipboard } from './helpers'\r\n\r\nclass SummaryBlock extends React.Component {\r\n\r\n  renderPlayerResults = (index) => {\r\n    const results = this.calcPlayerResults(index)\r\n    if (!results) {\r\n      return <>0 <br />[+0/-0]</>\r\n    }\r\n    const {sum, correct, incorrect} = results\r\n    return (\r\n      <>{sum} <br />\r\n      {`[+${correct}/-${incorrect}]`}</>\r\n    )\r\n  }\r\n\r\n  calcPlayerResults = (index) => {\r\n    if (!this.props.players[index]) return null\r\n    const scores = this.props.players[index].answers\r\n    if (scores.length === 0) return null\r\n    const sum = scores.reduce((acc, current) => acc + current)\r\n    const correct = scores.filter((score) => score > 0).length\r\n    const incorrect = scores.filter((score) => score < 0).length\r\n    return {sum, correct, incorrect}\r\n  }\r\n\r\n  getAllPlayersResults = () => {\r\n    const allResults = []\r\n    console.log(this.props.players.length)\r\n    this.props.players.forEach((el, index) => {\r\n      const results = this.calcPlayerResults(index)\r\n      const name = this.props.players[index].name\r\n      if (!results) {\r\n        allResults.push(`${name}: 0 [+0/-0]`)\r\n      } else {\r\n        const {sum, correct, incorrect} = results\r\n        allResults.push(`${name}: ${sum} [+${correct}/-${incorrect}]`)\r\n      }\r\n    });\r\n    return allResults\r\n  }\r\n  \r\n  renderPlayerSum = () => {\r\n    return [...Array(this.props.numberOfPlayers)].map(\r\n      (el, index) => {\r\n        return (\r\n          <td key={`p${index}`} className=\"player-sum\">\r\n            {this.renderPlayerResults(index)}\r\n          </td>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     <React.Fragment>\r\n        <tr>\r\n          <td colSpan={this.props.numberOfPlayers + 1} className=\"divider\"></td>\r\n        </tr>\r\n        <tr>\r\n          <td \r\n            className=\"sigma\"\r\n            title=\"Кликните, чтобы скопировать счёт в буфер обмена\"\r\n            onClick={() => {\r\n              const text = this.getAllPlayersResults().join('\\r\\n')\r\n              copyToClipboard(text)\r\n            }}\r\n          >Σ</td>\r\n          {this.renderPlayerSum()}\r\n        </tr> \r\n     </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    players: state.game.players\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(SummaryBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setPlayerName, setPlayerAnswer } from '../actions'\r\n\r\nclass PlayerControl extends React.Component {\r\n  // state = {name: `Игрок ${this.props.playerID + 1}`}\r\n  // state = {name: this.props.players[this.props.playerID].name || `Игрок ${this.props.playerID + 1}`}\r\n\r\n  renderPlayerName = () => {\r\n    const { playerID, players } = this.props\r\n    if (players[playerID]) {\r\n      return players[playerID].name\r\n    }\r\n    return `Игрок ${playerID + 1}`\r\n  }\r\n\r\n  renderNameInput = () => {\r\n    return (\r\n      <input \r\n          className=\"player-name\" \r\n          size=\"10\"\r\n          type=\"text\"\r\n          value={this.renderPlayerName()}\r\n          onChange={(e) => {\r\n            e.preventDefault()\r\n            this.setState({name: e.target.value})\r\n            this.props.setPlayerName(\r\n              {name: e.target.value, id: this.props.playerID}\r\n            )\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === 'Enter') {\r\n              e.target.blur()\r\n            }\r\n          }}\r\n        />\r\n    )\r\n  }\r\n\r\n  renderPlayerScoreButton = (sign) => {\r\n    return (\r\n      <div \r\n        className={`player-button ${sign}`}\r\n        onClick={() => {\r\n          const currentPrice = (this.props.currentQuestionNum % \r\n            this.props.numberOfQuestions + 1) * this.props.priceMultiplier\r\n          this.props.setPlayerAnswer({\r\n            playerID: this.props.playerID,\r\n            questionID: this.props.currentQuestionNum,\r\n            score: sign === 'plus' ? currentPrice : -currentPrice\r\n          })\r\n        }}\r\n      >\r\n        <i className={`fas fa-${sign}-square`}></i>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"player-control\">\r\n        {this.renderPlayerScoreButton('plus')}\r\n        {this.renderNameInput()}\r\n        {this.renderPlayerScoreButton('minus')}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    players: state.game.players,\r\n    currentQuestionNum: state.game.currentQuestionNum,\r\n    numberOfQuestions: state.settings.numberOfQuestions,\r\n    priceMultiplier: state.settings.priceMultiplier\r\n  })\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, { setPlayerName, setPlayerAnswer }\r\n  )(PlayerControl)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PlayerControl from './PlayerControl'\r\n\r\nclass ControlsBlock extends React.Component {\r\n\r\n  renderPlayerControls = () => {\r\n    return [...Array(this.props.numberOfPlayers)].map(\r\n      (el, index) => {\r\n        return (\r\n          <td key={`pc-${index}`}><PlayerControl playerID={index} /></td>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr className=\"controls-block\">\r\n        <td></td>\r\n        {this.renderPlayerControls()}\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(ControlsBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentQuestionNum, addSubject } from '../actions'\r\nimport { copyToClipboard } from './helpers'\r\n\r\nclass NavigationBlock extends React.Component {\r\n\r\n  scrollToCurrentQuestion = () => {\r\n    const activeQuestion = \r\n      document.querySelector(`.q${this.props.currentQuestionNum}`)\r\n    activeQuestion.scrollIntoView({block: 'center', behavior: 'smooth'})\r\n  }\r\n\r\n  onNextClicked = () => {\r\n    const { \r\n      setCurrentQuestionNum, \r\n      currentQuestionNum, \r\n      numberOfSubjects, \r\n      numberOfQuestions,\r\n      addSubject\r\n    } = this.props\r\n    const totalNumOfQuestions = numberOfSubjects * numberOfQuestions\r\n    if (totalNumOfQuestions - currentQuestionNum <= 2) {\r\n      addSubject()\r\n    }\r\n    setCurrentQuestionNum(currentQuestionNum + 1)\r\n    this.scrollToCurrentQuestion()\r\n  }\r\n\r\n  onPrevClicked = () => {\r\n    if (this.props.currentQuestionNum === 0) {\r\n      return\r\n    }\r\n    this.props.setCurrentQuestionNum(this.props.currentQuestionNum - 1)\r\n    this.scrollToCurrentQuestion()\r\n  }\r\n\r\n  getCurrentNav = () => {\r\n    const {currentQuestionNum, numberOfQuestions} = this.props\r\n    const subjectNum = Math.floor(currentQuestionNum / numberOfQuestions) + 1\r\n    const questionNum = (currentQuestionNum % numberOfQuestions) + 1\r\n    return `${subjectNum}.${questionNum}`\r\n  }\r\n\r\n  getCurrentText = () => {\r\n    let { subjects, currentQuestionNum, numberOfQuestions, priceMultiplier } = this.props\r\n    let currentSubjectNum = Math.floor(currentQuestionNum / numberOfQuestions)\r\n    let currentSubjectName = subjects[currentSubjectNum]\r\n    let currentPrice = ((currentQuestionNum % numberOfQuestions) + 1) * priceMultiplier\r\n\r\n    return `Тема #${currentSubjectNum + 1}: ${currentSubjectName}, вопрос за ${currentPrice}`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td colSpan={this.props.numberOfPlayers + 1}>\r\n          <div className=\"navigation-block\">\r\n            <button \r\n              onClick={() => this.onPrevClicked()} \r\n              className=\"nav-btn nav-prev\"\r\n            ><i className=\"fas fa-chevron-left\"></i></button>\r\n            <button \r\n            className=\"nav-btn nav-current\"\r\n            onClick={() => {\r\n              const text = this.getCurrentText()\r\n              if (window.electron) {\r\n                // Electron-specific code\r\n                window.electron.bridge.sendToChat(text)\r\n              } else {\r\n                copyToClipboard(text)\r\n              }\r\n            }}\r\n            >\r\n              {this.getCurrentNav()}\r\n            </button>\r\n            <button \r\n              onClick={() => this.onNextClicked()} \r\n              className=\"nav-btn nav-next\"\r\n            ><i className=\"fas fa-chevron-right\"></i></button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    currentQuestionNum: state.game.currentQuestionNum,\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    numberOfQuestions: state.settings.numberOfQuestions,\r\n    numberOfSubjects: state.game.subjects.length,\r\n    subjects: state.game.subjects,\r\n    priceMultiplier: state.settings.priceMultiplier\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {setCurrentQuestionNum, addSubject})(NavigationBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass PackageBlock extends React.Component {\r\n  state = {active: 0}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"package-container\">\r\n        <div className=\"package\">\r\n          {this.renderPackageText()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderPackageText = () => {\r\n    const text = this.props.packageText\r\n    return text.split('\\n').map((el, index) => {\r\n      if (el && el !== '\\r' && el !== ' ') {\r\n        return (\r\n          <React.Fragment key={`package-text-${index}`}>\r\n            <div \r\n              className={`package-el ${index === this.state.active ? 'active' : ''}`} \r\n              onClick={() => this.setState({active: index})}\r\n            >{el}</div>\r\n            <div className=\"package-el\">&nbsp;</div>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n      return null\r\n    })\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    packageText: state.game.packageText\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(PackageBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport SubjectBlock from './SubjectBlock'\r\nimport SummaryBlock from './SummaryBlock'\r\nimport ControlsBlock from './ControlsBlock'\r\nimport NavigationBlock from './NavigationBlock'\r\nimport PackageBlock from './PackageBlock'\r\n\r\nimport { createPlayers } from '../actions'\r\n\r\nclass Game extends React.Component { \r\n  componentDidMount() {\r\n    if (this.props.players.length === 0) {\r\n      this.props.createPlayers()\r\n    }\r\n  }\r\n\r\n  renderSubjectBlocks = () => {\r\n    return this.props.subjects.map((subject, index) => {\r\n      return (\r\n        <SubjectBlock \r\n          subjectName={subject}\r\n          key={index}\r\n          subjectID={index}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main-container\">\r\n          <div className=\"scrollable\">\r\n            <table className=\"scores-block\">\r\n              <tbody>\r\n                {this.renderSubjectBlocks()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <table className=\"scores-block\">\r\n            <tbody>\r\n              <SummaryBlock />\r\n              <ControlsBlock />\r\n              <NavigationBlock />\r\n              \r\n            </tbody>\r\n          </table>\r\n          <PackageBlock />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentQuestionNum: state.game.currentQuestionNum,\r\n    subjects: state.game.subjects,\r\n    subjectNames: state.game.subjectNames,\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    players: state.game.players\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {createPlayers})(Game)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  setPlayersNumber,\r\n  setQuestionsNumber,\r\n  setPriceMultiplier,\r\n  resetGame,\r\n  setUIGameWidth\r\n} from '../actions'\r\n\r\nclass NewGame extends React.Component {\r\n  state = {\r\n    players: 4,\r\n    questions: 5,\r\n    multiplier: 10,\r\n    resetSubjects: false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"secondary-container\">\r\n        <div className=\"new-game\">\r\n          <form \r\n            name=\"new-game\" \r\n            id=\"new-game\"\r\n            onSubmit={this.onSubmitForm}\r\n          >\r\n          <h2>Параметры новой игры</h2>\r\n            <div>\r\n              <label htmlFor=\"players-num\">Число игроков: </label>\r\n              <select \r\n                value={this.state.players} \r\n                onChange={(e) => this.setState({ players: parseInt(e.target.value) })} \r\n                id=\"players-num\"\r\n              >\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"6\">6</option>\r\n                <option value=\"7\">7</option>\r\n                <option value=\"8\">8</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"questions-num\">Число вопросов в теме: </label>\r\n              <select \r\n                value={this.state.questions} \r\n                onChange={(e) => this.setState({ questions: parseInt(e.target.value) })}\r\n                id=\"questions-num\"\r\n              >\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"6\">6</option>\r\n                <option value=\"7\">7</option>\r\n                <option value=\"8\">8</option>\r\n                <option value=\"9\">9</option>\r\n                <option value=\"10\">10</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"multiplier\">Мультипликатор стоимости вопроса: </label>\r\n              <select \r\n                value={this.state.multiplier} \r\n                onChange={(e) => this.setState({ multiplier: parseInt(e.target.value) })}\r\n                id=\"multiplier\"\r\n              >\r\n                <option value=\"1\">1</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"100\">100</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <input \r\n                type=\"checkbox\" \r\n                onChange={(e) => this.setState({ resetSubjects: e.target.checked })}\r\n                id=\"reset-subjects\"\r\n              />\r\n              <label htmlFor=\"reset-subjects\"> Очистить названия тем и текст пакета</label>\r\n            </div>\r\n            <button \r\n              type=\"submit\" \r\n            >\r\n              Начать игру\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  onSubmitForm = (e) => {\r\n    const resetPackage = this.state.resetSubjects\r\n    e.preventDefault()\r\n    this.props.setPlayersNumber(this.state.players)\r\n    this.props.setQuestionsNumber(this.state.questions)\r\n    this.props.setPriceMultiplier(this.state.multiplier)\r\n    this.props.resetGame({resetPackage})\r\n    this.props.setUIGameWidth(document.body.offsetWidth)\r\n  }\r\n}\r\n\r\nexport default connect(null, { \r\n  setPlayersNumber,\r\n  setQuestionsNumber,\r\n  setPriceMultiplier,\r\n  resetGame,\r\n  setUIGameWidth\r\n })(NewGame)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setSubjectNames, setPackageText } from '../actions'\r\n\r\nclass SubjectsList extends React.Component {\r\n  state = { subjects: '', packageText: '' }\r\n\r\n  componentDidMount() {\r\n    const subjects = this.props.subjects.join('\\n')\r\n    const { packageText } = this.props\r\n    this.setState({ subjects, packageText })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"secondary-container\">\r\n        <div className=\"subjects-list\">\r\n          <h2>Список тем</h2>\r\n          <textarea \r\n            placeholder={`Вставьте список тем (каждая тема с новой строки). Названия текущих и будущих тем в игре обновятся автоматически`}\r\n            onChange={this.onSubjectsListChange}\r\n            value={this.state.subjects}\r\n          >\r\n          </textarea>\r\n          <h2>Текст пакета</h2>\r\n          <textarea \r\n            placeholder={`Вставьте содержимое пакета сюда. Его форматированная версия появится на экране игры`}\r\n            onChange={this.onPackageTextChange}\r\n            value={this.state.packageText}\r\n          >\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  onSubjectsListChange = (e) => {\r\n    const subjects = e.target.value\r\n    this.setState({ subjects })\r\n    const subjectsArray = subjects.split('\\n')\r\n    this.props.setSubjectNames(subjectsArray)\r\n  }\r\n\r\n  onPackageTextChange = (e) => {\r\n    const packageText = e.target.value\r\n    this.setState({ packageText })\r\n    if (packageText) {\r\n      this.props.setPackageText(packageText)\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    subjects: state.game.subjectNames,\r\n    packageText: state.game.packageText\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  setSubjectNames, setPackageText\r\n})(SubjectsList)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Line } from 'react-chartjs-2'\r\n\r\nclass Graph extends React.Component {\r\n  render() {\r\n    this.getDatasets()\r\n    return(\r\n      <div className=\"secondary-container\">\r\n        <div className=\"graph\" id=\"graph\">\r\n          <h2>График</h2>\r\n          <Line \r\n              data={{\r\n                labels: this.getLabels(),\r\n                datasets: this.getDatasets()\r\n              }} \r\n              width={this.props.uiWidth - 85}\r\n              redraw={true}\r\n              height={200}\r\n              options={this.graphOptions}\r\n              plugins={this.graphPlugins}\r\n            />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  graphColors = [\"#92e084\", \"#e08492\", \"#86a2e3\",\r\n            \"#c287e6\", \"#e0aa84\", \"#83cae0\",\r\n            \"#c7e07a\", \"#52e3c1\", \"#e0b051\",\r\n            \"#e6d779\"]\r\n\r\n  graphOptions = { \r\n    maintainAspectRatio: true,\r\n    scales: {\r\n      yAxes: [{\r\n        ticks: {\r\n          beginAtZero: true\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: \"Набранные очки\",\r\n          fontSize: 16\r\n        }\r\n      }]\r\n    },\r\n    legend: {\r\n      labels: {\r\n        fontSize: 16\r\n      }\r\n    },\r\n    animation: false,\r\n    layout: {\r\n      padding: 1\r\n    }\r\n  }\r\n\r\n  graphPlugins = [{\r\n    beforeDraw: function(chartInstance, easing) {\r\n      var ctx = chartInstance.chart.ctx\r\n      ctx.fillStyle = 'white' // Меняем цвет здесь\r\n      ctx.fillRect(0, 0, 1920, 1080)\r\n    }\r\n  }]\r\n\r\n  getDatasets = () => {\r\n    let { players, maxQuestions } = this.props\r\n    let arr = [] //будущий dataset\r\n    for (let i = 0; i < players.length; i++) { // Для каждого игрока\r\n        let playerData = {}\r\n        playerData.label = players[i].name // Заполняем имя\r\n        playerData.backgroundColor = this.graphColors[i] // Указываем цвет фона\r\n        playerData.borderColor = this.graphColors[i] // Указываем цвет границы\r\n        playerData.fill = false // Отменяем заливку\r\n        // Превращаем очки за вопрос в сумму очков на момент вопроса\r\n        let scores = []\r\n        scores.push(0)\r\n        for (let y = 1; y < (maxQuestions + 2); y++) {\r\n            let score = players[i].answers[y - 1]\r\n            // Если очки на этом вопросе не были начислены\r\n            if (score === undefined) { \r\n              score = scores[y - 1]\r\n            }\r\n            // Если очки на этом вопросе были начислены, то\r\n            // добавляем их к сумме предыдущих очков\r\n            else {\r\n                score += scores[y - 1]\r\n            }\r\n            scores.push(score)\r\n        }\r\n        playerData.data = scores\r\n        arr.push({...playerData})\r\n    }\r\n    return arr\r\n  }\r\n\r\n  getLabels = () => {\r\n    let labels = []\r\n    for (let i = 0; i < (this.props.maxQuestions + 2); i++) {\r\n        labels.push(i)\r\n    }\r\n    return labels\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    players: state.game.players,\r\n    maxQuestions: state.game.subjects.length * state.settings.numberOfQuestions,\r\n    uiWidth: state.settings.uiWidth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Graph)","import React from 'react'\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport history from '../history'\r\nimport { connect } from 'react-redux'\r\nimport { setUIGameWidth, loadStateFromLocalStorage } from '../actions'\r\nimport Menu from './Menu'\r\nimport Game from './Game'\r\nimport NewGame from './NewGame'\r\nimport SubjectsList from './SubjectsList'\r\nimport Graph from './Graph'\r\n\r\nclass App extends React.Component {\r\n  \r\n  state = {menuEnabled: true}\r\n\r\n  componentDidMount() {\r\n    const width = document.body.offsetWidth\r\n    this.setState({menuEnabled: true})\r\n    this.props.setUIGameWidth(width)\r\n    window.addEventListener('resize', this.onPageResize)\r\n    this.props.loadStateFromLocalStorage()\r\n  }\r\n\r\n  onPageResize = () => {\r\n    this.props.setUIGameWidth(document.body.offsetWidth)\r\n  }\r\n\r\n  switchMenuState = () => {\r\n    this.setState({menuEnabled: !this.state.menuEnabled})\r\n  }\r\n\r\n  renderMenuSwitcher = () => {\r\n    if (!this.state.menuEnabled) {\r\n      return (\r\n        <div \r\n         className=\"menu-switcher\"\r\n         onClick={() => {\r\n           this.switchMenuState()\r\n         }}\r\n        >\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"container\">\r\n        <Router history={history}>\r\n          {this.state.menuEnabled === true ? \r\n          <div className=\"menu-container\">\r\n            <Menu switchMenuState={this.switchMenuState} />\r\n          </div> : this.renderMenuSwitcher()}\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Game \r\n                switchMenuState={this.switchMenuState}\r\n                menuEnabled={this.state.menuEnabled} \r\n              />\r\n            </Route>\r\n            <Route path=\"/newgame\">\r\n              <NewGame />\r\n            </Route>\r\n            <Route path=\"/subjects\">\r\n              <SubjectsList />\r\n            </Route>\r\n            <Route path=\"/graph\">\r\n              <Graph />\r\n            </Route>\r\n            <Route path=\"/theme\">\r\n              \r\n            </Route>\r\n            <Route path=\"/about\">\r\n              \r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nexport default connect(null, {setUIGameWidth, loadStateFromLocalStorage})(App)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nimport reducers from './reducers'\r\nimport App from './components/App'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n)\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}