{"version":3,"sources":["reducers/settingsReducer.js","reducers/gameReducer.js","reducers/index.js","actions/types.js","history.js","actions/index.js","components/Menu.js","components/Subject.js","components/Price.js","components/Question.js","components/SubjectBlock.js","components/helpers.js","components/SummaryBlock.js","components/PlayerControl.js","components/ControlsBlock.js","components/NavigationBlock.js","components/PackageBlock.js","components/Game.js","components/NewGame.js","components/SubjectsList.js","components/Graph.js","components/About.js","components/Themes.js","components/App.js","index.js"],"names":["INITITAL_STATE","numberOfPlayers","numberOfQuestions","priceMultiplier","uiWidth","activeTheme","themes","name","colors","players","currentQuestionNum","packageText","subjects","subjectNames","combineReducers","settings","state","action","payload","type","game","createMemoryHistory","setCurrentQuestionNum","num","dispatch","saveStateToLocalStorage","setUIGameWidth","width","getState","gameWidth","playerScoreWidth","numOfPlayers","document","documentElement","style","setProperty","setTheme","id","undefined","keys","forEach","color","index","allowRecording","setTimeout","console","log","localStorage","setItem","JSON","stringify","Menu","className","onClick","props","switchMenuState","to","exact","activeClassName","React","Component","Subject","Fragment","colSpan","this","subjectName","connect","Price","price","Question","renderPlayerScoreCell","Array","map","el","key","getPlayerScore","player","questionID","answers","isActive","SubjectBlock","renderQuestions","subjectID","renderSubject","copyToClipboard","text","dummy","createElement","body","appendChild","setAttribute","getElementById","value","select","setSelectionRange","execCommand","removeChild","SummaryBlock","renderPlayerResults","results","calcPlayerResults","sum","correct","incorrect","scores","length","reduce","acc","current","filter","score","getAllPlayersResults","allResults","push","renderPlayerSum","title","join","PlayerControl","renderPlayerName","playerID","renderNameInput","size","onChange","e","preventDefault","setState","target","setPlayerName","onKeyPress","blur","renderPlayerScoreButton","sign","currentPrice","setPlayerAnswer","currentScore","ControlsBlock","renderPlayerControls","NavigationBlock","scrollToCurrentQuestion","querySelector","scrollIntoView","block","behavior","onNextClicked","numberOfSubjects","addSubject","onPrevClicked","getCurrentNav","subjectNum","Math","floor","questionNum","getCurrentText","currentSubjectNum","currentSubjectName","window","electron","bridge","sendToChat","newSubjectNumber","newSubjectName","PackageBlock","active","renderPackageText","split","Game","renderSubjectBlocks","subject","createPlayers","i","team","NewGame","questions","multiplier","resetSubjects","onSubmitForm","resetPackage","setPlayersNumber","setQuestionsNumber","setPriceMultiplier","resetGame","offsetWidth","onSubmit","htmlFor","parseInt","checked","history","SubjectsList","onSubjectsListChange","subjectsArray","setSubjectNames","onPackageTextChange","setPackageText","placeholder","names","newGame","Graph","graphColors","graphOptions","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","scaleLabel","display","labelString","fontSize","legend","labels","animation","layout","padding","graphPlugins","beforeDraw","chartInstance","easing","ctx","chart","fillStyle","fillRect","getDatasets","maxQuestions","arr","playerData","label","backgroundColor","borderColor","fill","y","data","getLabels","datasets","redraw","height","options","plugins","About","href","Themes","renderThemes","theme","isCurrent","background","App","menuEnabled","onPageResize","renderMenuSwitcher","addEventListener","loadStateFromLocalStorage","path","parse","getItem","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.40611d07.chunk.js","sourcesContent":["import { \r\n  SET_PLAYERS_NUMBER,\r\n  SET_QUESTIONS_NUMBER,\r\n  SET_PRICE_MULTIPLIER,\r\n  SET_UI_GAME_WIDTH,\r\n  SET_THEME,\r\n  SAVE_STATE_TO_LOCAL_STORAGE,\r\n  LOAD_STATE_FROM_LOCAL_STORAGE\r\n } from '../actions/types'\r\n\r\nconst INITITAL_STATE = {\r\n  numberOfPlayers: 4,\r\n  numberOfQuestions: 5,\r\n  priceMultiplier: 10,\r\n  uiWidth: 600,\r\n  activeTheme: 1,\r\n  themes: [\r\n    // colors: main, dark, darker, light, lighter, bg, text-dark, text-light\r\n    {\r\n      name: 'Пользовательская',\r\n      colors: ['#424246', '#bbb6b6', '#747474', '#d4d9dd', '#f1f1f1', '#fffdfd', '#141414', '#f1f1f1']\r\n    },\r\n    {\r\n      name: 'Brown-gray',\r\n      colors: ['#424246', '#bbb6b6', '#747474', '#d4d9dd', '#f1f1f1', '#fffdfd', '#141414', '#f1f1f1']\r\n    },\r\n    {\r\n      name: 'Greenery',\r\n      colors: ['#5e7431', '#879d5e', '#9ab740', '#c8d86d', '#aabe86', '#fcfff5', '#161616', '#f1f1f1']\r\n    },\r\n    {\r\n      name: 'Amber-chocolate',\r\n      colors: ['#49290f', '#ffc45f', '#d17745', '#fff0bc', '#c78446', '#fff4e7', '#161616', '#f1f1f1']\r\n    },\r\n    {\r\n      name: 'Burgundy-pink',\r\n      colors: ['#8c323d', '#40151f', '#6e0700', '#d45863', '#cd7483', '#f8f8f8', '#ffcece', '#f1f1f1']\r\n    },\r\n    {\r\n      name: 'Gray-blue',\r\n      colors: ['#294552', '#00070a', '#597884', '#4f6c78', '#9eb9b3', '#76939d', '#f0f0f0', '#f1f1f1']\r\n    },\r\n    {\r\n      name: 'Huckleberry',\r\n      colors: ['#2c3953', '#7891c7', '#8393ff', '#889edb', '#657db2', '#e7f1ff', '#0d0d0d', '#f1f1f1']\r\n    }\r\n  ]\r\n}\r\n\r\nexport default (state = INITITAL_STATE, action) => {\r\n  const { payload } = action\r\n\r\n  switch(action.type) {\r\n    case SET_PLAYERS_NUMBER:\r\n      return ({...state, numberOfPlayers: payload})\r\n    case SET_QUESTIONS_NUMBER:\r\n      return ({...state, numberOfQuestions: payload})\r\n    case SET_PRICE_MULTIPLIER:\r\n      return ({...state, priceMultiplier: payload})\r\n\r\n    case SET_UI_GAME_WIDTH:\r\n      return ({...state, uiWidth: payload})\r\n\r\n    case SET_THEME:\r\n      return ({...state, activeTheme: payload })\r\n\r\n    case SAVE_STATE_TO_LOCAL_STORAGE:\r\n      return state\r\n\r\n    case LOAD_STATE_FROM_LOCAL_STORAGE:\r\n      return ({...state, ...payload.settings})\r\n    default: \r\n      return state\r\n  }\r\n}","import { \r\n  RESET_GAME,\r\n  ADD_SUBJECT,\r\n  RESET_SUBJECTS,\r\n  SET_SUBJECT_NAMES,\r\n  SET_PACKAGE_TEXT,\r\n  SET_CURRENT_QUESTION_NUM,\r\n  SET_PLAYER_ANSWER,\r\n  CREATE_PLAYER,\r\n  SET_PLAYER_NAME,\r\n  SET_UI_GAME_WIDTH,\r\n  SAVE_STATE_TO_LOCAL_STORAGE,\r\n  LOAD_STATE_FROM_LOCAL_STORAGE\r\n } from '../actions/types'\r\n\r\nconst INITITAL_STATE = {\r\n  players: [],\r\n  currentQuestionNum: 0,\r\n  packageText: '',\r\n  subjects: ['Тема #1', 'Тема #2', 'Тема #3'],\r\n  subjectNames: []\r\n}\r\n\r\nexport default (state = INITITAL_STATE, action) => {\r\n  const { payload } = action\r\n\r\n  switch(action.type) {\r\n    case RESET_GAME:\r\n      return { ...INITITAL_STATE, \r\n        subjects: [...payload.subjects],\r\n        subjectNames: [...payload.subjectNames],\r\n        packageText: payload.packageText }\r\n    \r\n    case CREATE_PLAYER:\r\n      return {...state, players: payload}\r\n    \r\n    case SET_PLAYER_NAME:\r\n      return {...state, players: payload}\r\n\r\n    case SET_CURRENT_QUESTION_NUM:\r\n      return {...state, currentQuestionNum: payload}\r\n\r\n    case SET_PLAYER_ANSWER: \r\n      return {...state, players: payload}\r\n\r\n    case ADD_SUBJECT:\r\n      return {...state, subjects: payload}\r\n\r\n    case SET_PACKAGE_TEXT:\r\n      return {...state, packageText: payload}\r\n\r\n    case RESET_SUBJECTS:\r\n      return {\r\n        ...state, \r\n        subjects: [...INITITAL_STATE.subjects], \r\n        subjectNames: []\r\n      }\r\n    case SET_SUBJECT_NAMES:\r\n      return {...payload}\r\n\r\n    case SET_UI_GAME_WIDTH:\r\n      return state\r\n\r\n    case SAVE_STATE_TO_LOCAL_STORAGE:\r\n      return state\r\n\r\n    case LOAD_STATE_FROM_LOCAL_STORAGE:\r\n      return {...payload.game}\r\n      \r\n    default: \r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport settingsReducer from './settingsReducer'\r\nimport gameReducer from './gameReducer'\r\n\r\nexport default combineReducers({\r\n  settings: settingsReducer,\r\n  game: gameReducer\r\n})","export const RESET_GAME = 'RESET_GAME'\r\n\r\nexport const SET_PLAYERS_NUMBER = 'SET_PLAYERS_NUMBER'\r\nexport const SET_QUESTIONS_NUMBER = 'SET_QUESTIONS_NUMBER'\r\nexport const SET_PRICE_MULTIPLIER = 'SET_PRICE_MULTIPLIER'\r\n\r\nexport const CREATE_PLAYER = 'CREATE_PLAYER'\r\nexport const SET_PLAYER_NAME = 'SET_PLAYER_NAME'\r\n\r\nexport const SET_PACKAGE_TEXT = 'SET_PACKAGE_TEXT'\r\nexport const ADD_SUBJECT = 'ADD_SUBJECT'\r\nexport const SET_SUBJECT_NAMES = 'SET_SUBJECT_NAMES'\r\nexport const RESET_SUBJECTS = 'RESET_SUBJECTS'\r\n\r\nexport const SET_CURRENT_QUESTION_NUM = 'SET_CURRENT_QUESTION_NUM'\r\nexport const SET_PLAYER_ANSWER = 'SET_PLAYER_ANSWER'\r\n\r\nexport const SET_UI_GAME_WIDTH = 'SET_UI_GAME_WIDTH'\r\n\r\nexport const SET_THEME = 'SET_THEME'\r\n\r\nexport const SAVE_STATE_TO_LOCAL_STORAGE = 'SAVE_STATE_TO_LOCAL_STORAGE'\r\nexport const LOAD_STATE_FROM_LOCAL_STORAGE = 'LOAD_STATE_TO_LOCAL_STORAGE'","import { createMemoryHistory } from 'history'\r\n\r\nexport default createMemoryHistory()","import history from '../history'\r\nimport {\r\n  RESET_GAME,\r\n  \r\n  SET_PLAYERS_NUMBER,\r\n  SET_QUESTIONS_NUMBER,\r\n  SET_PRICE_MULTIPLIER,\r\n\r\n  CREATE_PLAYER,\r\n  SET_PLAYER_NAME,\r\n\r\n  SET_CURRENT_QUESTION_NUM,\r\n  SET_PLAYER_ANSWER,\r\n  ADD_SUBJECT,\r\n  RESET_SUBJECTS,\r\n  SET_SUBJECT_NAMES,\r\n  SET_PACKAGE_TEXT,\r\n\r\n  SET_UI_GAME_WIDTH,\r\n\r\n  SET_THEME,\r\n\r\n  SAVE_STATE_TO_LOCAL_STORAGE,\r\n  LOAD_STATE_FROM_LOCAL_STORAGE\r\n} from './types'\r\n\r\n//#region SETTINGS\r\nexport const setPlayersNumber = (num) => (dispatch) => {\r\n  dispatch({ type: SET_PLAYERS_NUMBER, payload: num })\r\n}\r\n\r\nexport const setQuestionsNumber = (num) => (dispatch) => {\r\n  dispatch({ type: SET_QUESTIONS_NUMBER, payload: num })\r\n}\r\n\r\nexport const setPriceMultiplier = (multiplier) => {\r\n  return ({ type: SET_PRICE_MULTIPLIER, payload: multiplier })\r\n}\r\n\r\n//#endregion\r\n\r\nexport const resetGame = ({resetPackage}) => (dispatch, getState) => {\r\n  const {game} = getState()\r\n  \r\n  if (resetPackage) {\r\n    game.subjects = ['Тема #1', 'Тема #2', 'Тема #3']\r\n    game.subjectNames = []\r\n    game.packageText = \"\"\r\n  }\r\n\r\n  dispatch ({ type: RESET_GAME, payload: game })\r\n  history.push('/')\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const setCurrentQuestionNum = (num) => (dispatch) => {\r\n  dispatch({ type: SET_CURRENT_QUESTION_NUM, payload: num })\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const createPlayers = () => (dispatch, getState) => {\r\n  const numOfPlayers = getState().settings.numberOfPlayers\r\n  const players = []\r\n  for (let i = 0; i < numOfPlayers; i++) {\r\n    players.push({\r\n      name: `Игрок ${i}`,\r\n      team: '',\r\n      answers: []\r\n    })\r\n  }\r\n  dispatch({ type: CREATE_PLAYER, payload: [...players] })\r\n}\r\n\r\nexport const setPlayerName = ({ name, id}) => (dispatch, getState) => {\r\n  const { players } = getState().game\r\n  players[id].name = name\r\n  dispatch({ type: SET_PLAYER_NAME, payload: [...players] })\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const setPlayerAnswer = \r\n  ({ playerID, questionID, score}) => (dispatch, getState) => {\r\n  const { players } = getState().game\r\n  const currentScore = players[playerID].answers[questionID]\r\n  if (score === currentScore) {\r\n    players[playerID].answers[questionID] = null\r\n  } else {\r\n    players[playerID].answers[questionID] = score\r\n  }\r\n  dispatch({\r\n    type: SET_PLAYER_ANSWER,\r\n    payload: [...players]\r\n  })\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const addSubject = () => (dispatch, getState) => {\r\n  const subjects = [...getState().game.subjects]\r\n  const newSubjectNumber = subjects.length + 1\r\n  const newSubjectName = getState().game.subjectNames[newSubjectNumber - 1] ||\r\n    `Тема #${newSubjectNumber}`\r\n  subjects.push(newSubjectName)\r\n  \r\n  dispatch({ type: ADD_SUBJECT, payload: [...subjects] })\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const resetSubjects = () => (dispatch) => {\r\n  dispatch({ type: RESET_SUBJECTS, payload: [] })\r\n}\r\n\r\nexport const setSubjectNames = (names) => (dispatch, getState) => {\r\n  const newGame = {...getState().game}\r\n  newGame.subjectNames = [...names]\r\n  newGame.subjects.map((el, index) => {\r\n    return newGame.subjects[index] = newGame.subjectNames[index] || `Тема #${index + 1}`\r\n  })\r\n  dispatch({ type: SET_SUBJECT_NAMES, payload: newGame})\r\n  dispatch( saveStateToLocalStorage() )\r\n}\r\n\r\nexport const setPackageText = (text) => (dispatch, getState) => {\r\n  dispatch({ type: SET_PACKAGE_TEXT, payload: text})\r\n  dispatch(saveStateToLocalStorage())\r\n}\r\n\r\nexport const setUIGameWidth = (width) => (dispatch, getState) => {\r\n  const numOfPlayers = getState().settings.numberOfPlayers\r\n  const baseWidth = 130\r\n  let gameWidth, playerScoreWidth\r\n  if (width / numOfPlayers <= 120) {\r\n    gameWidth = width\r\n    playerScoreWidth = width / numOfPlayers\r\n  } else if (width / numOfPlayers >= baseWidth) {\r\n    gameWidth = numOfPlayers * baseWidth\r\n    playerScoreWidth = baseWidth\r\n  } else {\r\n    gameWidth = width\r\n    playerScoreWidth = width / numOfPlayers\r\n  }\r\n  document.documentElement.style.setProperty('--game-width', `${gameWidth}px`)\r\n  document.documentElement.style.setProperty('--player-score-width', `${playerScoreWidth}px`)\r\n  dispatch({ type: SET_UI_GAME_WIDTH, payload: gameWidth})\r\n}\r\n\r\nexport const setTheme = (id) => (dispatch, getState) => {\r\n  if (id === undefined) {\r\n    id = getState().settings.activeTheme\r\n  }\r\n  const colors = getState().settings.themes[id].colors\r\n  const keys = [\r\n    '--theme-main',\r\n    '--theme-dark',\r\n    '--theme-darker',\r\n    '--theme-light',\r\n    '--theme-lighter',\r\n    '--theme-bg',\r\n    '--theme-text-dark',\r\n    '--theme-text-light'\r\n  ]\r\n  colors.forEach((color, index) => {\r\n    document.documentElement.style.setProperty(keys[index], color)\r\n  })\r\n  dispatch({ type: SET_THEME, payload: id })\r\n  dispatch(saveStateToLocalStorage())\r\n}\r\n\r\nlet allowRecording = true\r\n\r\nexport const saveStateToLocalStorage = () => (dispatch, getState) => {\r\n  if (allowRecording) {\r\n    allowRecording = false\r\n\r\n    setTimeout(() => {\r\n      console.log('saved state to local storage')\r\n      localStorage.setItem('state', JSON.stringify(getState()))\r\n      allowRecording = true\r\n    }, 1000);\r\n\r\n  }\r\n  dispatch({ type: SAVE_STATE_TO_LOCAL_STORAGE, payload: null })\r\n}\r\n\r\nexport const loadStateFromLocalStorage = () => (dispatch, getState) => {\r\n  const state = JSON.parse(localStorage.getItem('state'))\r\n  if (state) {\r\n    dispatch({ type: LOAD_STATE_FROM_LOCAL_STORAGE, payload: state })\r\n  } else {\r\n    dispatch({ type: LOAD_STATE_FROM_LOCAL_STORAGE, payload: getState() })\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass Menu extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menu\">\r\n        <button \r\n          className=\"hide-menu-btn\"\r\n          onClick={() => {\r\n            this.props.switchMenuState()\r\n          }}\r\n        >\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n        <NavLink \r\n          to=\"/\" exact \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>Игра</div>\r\n        </NavLink>\r\n        <NavLink \r\n          to=\"/newgame\" \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>Новая игра</div>\r\n        </NavLink>\r\n        <NavLink \r\n          to=\"/subjects\" \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>Темы и вопросы</div>\r\n        </NavLink>\r\n        <NavLink \r\n          to=\"/graph\" \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>График</div>\r\n        </NavLink>\r\n        <NavLink \r\n          to=\"/theme\" \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>Цвета</div>\r\n        </NavLink>\r\n        <NavLink \r\n          to=\"/about\" \r\n          className=\"menu-item\" \r\n          activeClassName=\"menu-active\"\r\n        >\r\n          <div>?</div>\r\n        </NavLink>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Subject extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <tr>\r\n          <td colSpan={this.props.numberOfPlayers + 1} className=\"subject\">\r\n            {this.props.subjectName}\r\n          </td>\r\n        </tr>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Subject)","import React from 'react'\r\n\r\nclass Price extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <td className=\"price\">\r\n        {this.props.price}\r\n      </td>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Price","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentQuestionNum } from '../actions'\r\nimport Price from './Price'\r\n\r\nclass Question extends React.Component {\r\n\r\n  renderPlayerScoreCell = () => {\r\n    const { id, numberOfPlayers } = this.props\r\n    return [...Array(numberOfPlayers)].map(\r\n      (el, index) => {\r\n        return (\r\n          <td \r\n            className=\"player-score\"\r\n            key={`${id}.${index}`}\r\n          >\r\n            {this.getPlayerScore({player: index, questionID: id})}\r\n          </td>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  getPlayerScore = ({player, questionID}) => {\r\n    const { players } = this.props\r\n    if (!players[player]) {\r\n      return\r\n    }\r\n    const answer = players[player].answers[questionID]\r\n    return answer\r\n  }\r\n\r\n  isActive = () => {\r\n    return (\r\n      this.props.currentQuestionNum === this.props.id ? 'active' : ''\r\n    )\r\n  }\r\n\r\n  onClick = () => {\r\n    this.props.setCurrentQuestionNum(this.props.id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr \r\n        onClick={() => this.onClick()}\r\n        className={`question ${this.isActive()} q${this.props.id}`}\r\n      >\r\n        <Price price={this.props.price} />\r\n        {this.renderPlayerScoreCell()}\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    players: state.game.players,\r\n    currentQuestionNum: state.game.currentQuestionNum\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {setCurrentQuestionNum})(Question)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Subject from './Subject'\r\nimport Question from './Question'\r\n\r\nclass SubjectBlock extends React.Component {\r\n\r\n  renderQuestions = () => {\r\n    const {subjectID, numberOfQuestions, priceMultiplier} = this.props\r\n    return [...Array(this.props.numberOfQuestions)].map(\r\n      (el, index) => {\r\n        const questionID = subjectID * numberOfQuestions + index\r\n        const price = (index + 1) * priceMultiplier\r\n        return (\r\n          <Question key={questionID} id={questionID} price={price}/>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  renderSubject = () => {\r\n    return (\r\n      <Subject \r\n        subjectName={this.props.subjectName}\r\n        subjectID={this.props.subjectID}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.renderSubject()}\r\n        {this.renderQuestions()}\r\n      </React.Fragment>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfQuestions: state.settings.numberOfQuestions,\r\n    priceMultiplier: state.settings.priceMultiplier\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(SubjectBlock)","export const copyToClipboard = (text) => {\r\n  let dummy = document.createElement('textarea')\r\n  document.body.appendChild(dummy)\r\n  dummy.setAttribute('id', 'dummy')\r\n  document.getElementById('dummy').value = text\r\n  dummy.select()\r\n  dummy.setSelectionRange(0, 99999)\r\n  document.execCommand(\"copy\")\r\n  document.body.removeChild(dummy)\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { copyToClipboard } from './helpers'\r\n\r\nclass SummaryBlock extends React.Component {\r\n\r\n  renderPlayerResults = (index) => {\r\n    const results = this.calcPlayerResults(index)\r\n    if (!results) {\r\n      return <>0 <br />[+0/-0]</>\r\n    }\r\n    const {sum, correct, incorrect} = results\r\n    return (\r\n      <>{sum} <br />\r\n      {`[+${correct}/-${incorrect}]`}</>\r\n    )\r\n  }\r\n\r\n  calcPlayerResults = (index) => {\r\n    if (!this.props.players[index]) return null\r\n    const scores = this.props.players[index].answers\r\n    if (scores.length === 0) return null\r\n    const sum = scores.reduce((acc, current) => acc + current)\r\n    const correct = scores.filter((score) => score > 0).length\r\n    const incorrect = scores.filter((score) => score < 0).length\r\n    return {sum, correct, incorrect}\r\n  }\r\n\r\n  getAllPlayersResults = () => {\r\n    const allResults = []\r\n    console.log(this.props.players.length)\r\n    this.props.players.forEach((el, index) => {\r\n      const results = this.calcPlayerResults(index)\r\n      const name = this.props.players[index].name\r\n      if (!results) {\r\n        allResults.push(`${name}: 0 [+0/-0]`)\r\n      } else {\r\n        const {sum, correct, incorrect} = results\r\n        allResults.push(`${name}: ${sum} [+${correct}/-${incorrect}]`)\r\n      }\r\n    });\r\n    return allResults\r\n  }\r\n  \r\n  renderPlayerSum = () => {\r\n    return [...Array(this.props.numberOfPlayers)].map(\r\n      (el, index) => {\r\n        return (\r\n          <td key={`p${index}`} className=\"player-sum\">\r\n            {this.renderPlayerResults(index)}\r\n          </td>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     <React.Fragment>\r\n        <tr>\r\n          <td colSpan={this.props.numberOfPlayers + 1} className=\"divider\"></td>\r\n        </tr>\r\n        <tr>\r\n          <td \r\n            className=\"sigma\"\r\n            title=\"Кликните, чтобы скопировать счёт в буфер обмена\"\r\n            onClick={() => {\r\n              const text = this.getAllPlayersResults().join('\\r\\n')\r\n              copyToClipboard(text)\r\n            }}\r\n          >Σ</td>\r\n          {this.renderPlayerSum()}\r\n        </tr> \r\n     </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    players: state.game.players\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(SummaryBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setPlayerName, setPlayerAnswer } from '../actions'\r\n\r\nclass PlayerControl extends React.Component {\r\n  // state = {name: `Игрок ${this.props.playerID + 1}`}\r\n  // state = {name: this.props.players[this.props.playerID].name || `Игрок ${this.props.playerID + 1}`}\r\n\r\n  renderPlayerName = () => {\r\n    const { playerID, players } = this.props\r\n    if (players[playerID]) {\r\n      return players[playerID].name\r\n    }\r\n    return `Игрок ${playerID + 1}`\r\n  }\r\n\r\n  renderNameInput = () => {\r\n    return (\r\n      <input \r\n          className=\"player-name\" \r\n          size=\"10\"\r\n          type=\"text\"\r\n          value={this.renderPlayerName()}\r\n          onChange={(e) => {\r\n            e.preventDefault()\r\n            this.setState({name: e.target.value})\r\n            this.props.setPlayerName(\r\n              {name: e.target.value, id: this.props.playerID}\r\n            )\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === 'Enter') {\r\n              e.target.blur()\r\n            }\r\n          }}\r\n        />\r\n    )\r\n  }\r\n\r\n  renderPlayerScoreButton = (sign) => {\r\n    return (\r\n      <div \r\n        className={`player-button ${sign}`}\r\n        onClick={() => {\r\n          const currentPrice = (this.props.currentQuestionNum % \r\n            this.props.numberOfQuestions + 1) * this.props.priceMultiplier\r\n          this.props.setPlayerAnswer({\r\n            playerID: this.props.playerID,\r\n            questionID: this.props.currentQuestionNum,\r\n            score: sign === 'plus' ? currentPrice : -currentPrice\r\n          })\r\n        }}\r\n      >\r\n        <i className={`fas fa-${sign}-square`}></i>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"player-control\">\r\n        {this.renderPlayerScoreButton('plus')}\r\n        {this.renderNameInput()}\r\n        {this.renderPlayerScoreButton('minus')}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    players: state.game.players,\r\n    currentQuestionNum: state.game.currentQuestionNum,\r\n    numberOfQuestions: state.settings.numberOfQuestions,\r\n    priceMultiplier: state.settings.priceMultiplier\r\n  })\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, { setPlayerName, setPlayerAnswer }\r\n  )(PlayerControl)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PlayerControl from './PlayerControl'\r\n\r\nclass ControlsBlock extends React.Component {\r\n\r\n  renderPlayerControls = () => {\r\n    return [...Array(this.props.numberOfPlayers)].map(\r\n      (el, index) => {\r\n        return (\r\n          <td key={`pc-${index}`}><PlayerControl playerID={index} /></td>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr className=\"controls-block\">\r\n        <td></td>\r\n        {this.renderPlayerControls()}\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(ControlsBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentQuestionNum, addSubject } from '../actions'\r\nimport { copyToClipboard } from './helpers'\r\n\r\nclass NavigationBlock extends React.Component {\r\n\r\n  scrollToCurrentQuestion = () => {\r\n    const activeQuestion = \r\n      document.querySelector(`.q${this.props.currentQuestionNum}`)\r\n    activeQuestion.scrollIntoView({block: 'center', behavior: 'smooth'})\r\n  }\r\n\r\n  onNextClicked = () => {\r\n    const { \r\n      setCurrentQuestionNum, \r\n      currentQuestionNum, \r\n      numberOfSubjects, \r\n      numberOfQuestions,\r\n      addSubject\r\n    } = this.props\r\n    const totalNumOfQuestions = numberOfSubjects * numberOfQuestions\r\n    if (totalNumOfQuestions - currentQuestionNum <= 2) {\r\n      addSubject()\r\n    }\r\n    setCurrentQuestionNum(currentQuestionNum + 1)\r\n    this.scrollToCurrentQuestion()\r\n  }\r\n\r\n  onPrevClicked = () => {\r\n    if (this.props.currentQuestionNum === 0) {\r\n      return\r\n    }\r\n    this.props.setCurrentQuestionNum(this.props.currentQuestionNum - 1)\r\n    this.scrollToCurrentQuestion()\r\n  }\r\n\r\n  getCurrentNav = () => {\r\n    const {currentQuestionNum, numberOfQuestions} = this.props\r\n    const subjectNum = Math.floor(currentQuestionNum / numberOfQuestions) + 1\r\n    const questionNum = (currentQuestionNum % numberOfQuestions) + 1\r\n    return `${subjectNum}.${questionNum}`\r\n  }\r\n\r\n  getCurrentText = () => {\r\n    let { subjects, currentQuestionNum, numberOfQuestions, priceMultiplier } = this.props\r\n    let currentSubjectNum = Math.floor(currentQuestionNum / numberOfQuestions)\r\n    let currentSubjectName = subjects[currentSubjectNum]\r\n    let currentPrice = ((currentQuestionNum % numberOfQuestions) + 1) * priceMultiplier\r\n\r\n    return `Тема #${currentSubjectNum + 1}: ${currentSubjectName}, вопрос за ${currentPrice}`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td colSpan={this.props.numberOfPlayers + 1}>\r\n          <div className=\"navigation-block\">\r\n            <button \r\n              onClick={() => this.onPrevClicked()} \r\n              className=\"nav-btn nav-prev\"\r\n            ><i className=\"fas fa-chevron-left\"></i></button>\r\n            <button \r\n            className=\"nav-btn nav-current\"\r\n            onClick={() => {\r\n              const text = this.getCurrentText()\r\n              if (window.electron) {\r\n                // Electron-specific code\r\n                window.electron.bridge.sendToChat(text)\r\n              } else {\r\n                copyToClipboard(text)\r\n              }\r\n            }}\r\n            >\r\n              {this.getCurrentNav()}\r\n            </button>\r\n            <button \r\n              onClick={() => this.onNextClicked()} \r\n              className=\"nav-btn nav-next\"\r\n            ><i className=\"fas fa-chevron-right\"></i></button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    currentQuestionNum: state.game.currentQuestionNum,\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    numberOfQuestions: state.settings.numberOfQuestions,\r\n    numberOfSubjects: state.game.subjects.length,\r\n    subjects: state.game.subjects,\r\n    priceMultiplier: state.settings.priceMultiplier\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {setCurrentQuestionNum, addSubject})(NavigationBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass PackageBlock extends React.Component {\r\n  state = {active: 0}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"package-container\">\r\n        <div className=\"package\">\r\n          {this.renderPackageText()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderPackageText = () => {\r\n    const text = this.props.packageText\r\n    return text.split('\\n').map((el, index) => {\r\n      if (el && el !== '\\r' && el !== ' ') {\r\n        return (\r\n          <React.Fragment key={`package-text-${index}`}>\r\n            <div \r\n              className={`package-el ${index === this.state.active ? 'active' : ''}`} \r\n              onClick={() => this.setState({active: index})}\r\n            >{el}</div>\r\n            <div className=\"package-el\">&nbsp;</div>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n      return null\r\n    })\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    packageText: state.game.packageText\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(PackageBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport SubjectBlock from './SubjectBlock'\r\nimport SummaryBlock from './SummaryBlock'\r\nimport ControlsBlock from './ControlsBlock'\r\nimport NavigationBlock from './NavigationBlock'\r\nimport PackageBlock from './PackageBlock'\r\n\r\nimport { createPlayers } from '../actions'\r\n\r\nclass Game extends React.Component { \r\n  componentDidMount() {\r\n    if (this.props.players.length === 0) {\r\n      this.props.createPlayers()\r\n    }\r\n  }\r\n\r\n  renderSubjectBlocks = () => {\r\n    return this.props.subjects.map((subject, index) => {\r\n      return (\r\n        <SubjectBlock \r\n          subjectName={subject}\r\n          key={index}\r\n          subjectID={index}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main-container\">\r\n          <div className=\"scrollable\">\r\n            <table className=\"scores-block\">\r\n              <tbody>\r\n                {this.renderSubjectBlocks()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <table className=\"scores-block\">\r\n            <tbody>\r\n              <SummaryBlock />\r\n              <ControlsBlock />\r\n              <NavigationBlock />\r\n              \r\n            </tbody>\r\n          </table>\r\n          <PackageBlock />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentQuestionNum: state.game.currentQuestionNum,\r\n    subjects: state.game.subjects,\r\n    subjectNames: state.game.subjectNames,\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    players: state.game.players\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {createPlayers})(Game)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  setPlayersNumber,\r\n  setQuestionsNumber,\r\n  setPriceMultiplier,\r\n  resetGame,\r\n  setUIGameWidth\r\n} from '../actions'\r\n\r\nclass NewGame extends React.Component {\r\n  state = {\r\n    players: 4,\r\n    questions: 5,\r\n    multiplier: 10,\r\n    resetSubjects: false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"secondary-container\">\r\n        <div className=\"new-game\">\r\n          <form \r\n            name=\"new-game\" \r\n            id=\"new-game\"\r\n            onSubmit={this.onSubmitForm}\r\n          >\r\n          <h2>Параметры новой игры</h2>\r\n            <div>\r\n              <label htmlFor=\"players-num\">Число игроков: </label>\r\n              <select \r\n                value={this.state.players} \r\n                onChange={(e) => this.setState({ players: parseInt(e.target.value) })} \r\n                id=\"players-num\"\r\n              >\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"6\">6</option>\r\n                <option value=\"7\">7</option>\r\n                <option value=\"8\">8</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"questions-num\">Число вопросов в теме: </label>\r\n              <select \r\n                value={this.state.questions} \r\n                onChange={(e) => this.setState({ questions: parseInt(e.target.value) })}\r\n                id=\"questions-num\"\r\n              >\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"6\">6</option>\r\n                <option value=\"7\">7</option>\r\n                <option value=\"8\">8</option>\r\n                <option value=\"9\">9</option>\r\n                <option value=\"10\">10</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"multiplier\">Мультипликатор стоимости вопроса: </label>\r\n              <select \r\n                value={this.state.multiplier} \r\n                onChange={(e) => this.setState({ multiplier: parseInt(e.target.value) })}\r\n                id=\"multiplier\"\r\n              >\r\n                <option value=\"1\">1</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"100\">100</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <input \r\n                type=\"checkbox\" \r\n                onChange={(e) => this.setState({ resetSubjects: e.target.checked })}\r\n                id=\"reset-subjects\"\r\n              />\r\n              <label htmlFor=\"reset-subjects\"> Очистить названия тем и текст пакета</label>\r\n            </div>\r\n            <button \r\n              type=\"submit\" \r\n            >\r\n              Начать игру\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  onSubmitForm = (e) => {\r\n    const resetPackage = this.state.resetSubjects\r\n    e.preventDefault()\r\n    this.props.setPlayersNumber(this.state.players)\r\n    this.props.setQuestionsNumber(this.state.questions)\r\n    this.props.setPriceMultiplier(this.state.multiplier)\r\n    this.props.resetGame({resetPackage})\r\n    this.props.setUIGameWidth(document.body.offsetWidth)\r\n  }\r\n}\r\n\r\nexport default connect(null, { \r\n  setPlayersNumber,\r\n  setQuestionsNumber,\r\n  setPriceMultiplier,\r\n  resetGame,\r\n  setUIGameWidth\r\n })(NewGame)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setSubjectNames, setPackageText } from '../actions'\r\n\r\nclass SubjectsList extends React.Component {\r\n  state = { subjects: '', packageText: '' }\r\n\r\n  componentDidMount() {\r\n    const subjects = this.props.subjects.join('\\n')\r\n    const { packageText } = this.props\r\n    this.setState({ subjects, packageText })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"secondary-container\">\r\n        <div className=\"subjects-list\">\r\n          <h2>Список тем</h2>\r\n          <textarea \r\n            placeholder={`Вставьте список тем (каждая тема с новой строки). Названия текущих и будущих тем в игре обновятся автоматически`}\r\n            onChange={this.onSubjectsListChange}\r\n            value={this.state.subjects}\r\n          >\r\n          </textarea>\r\n          <h2>Текст пакета</h2>\r\n          <textarea \r\n            placeholder={`Вставьте содержимое пакета сюда. Его форматированная версия появится на экране игры`}\r\n            onChange={this.onPackageTextChange}\r\n            value={this.state.packageText}\r\n          >\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  onSubjectsListChange = (e) => {\r\n    const subjects = e.target.value\r\n    this.setState({ subjects })\r\n    const subjectsArray = subjects.split('\\n')\r\n    this.props.setSubjectNames(subjectsArray)\r\n  }\r\n\r\n  onPackageTextChange = (e) => {\r\n    const packageText = e.target.value\r\n    this.setState({ packageText })\r\n    if (packageText) {\r\n      this.props.setPackageText(packageText)\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    subjects: state.game.subjectNames,\r\n    packageText: state.game.packageText\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  setSubjectNames, setPackageText\r\n})(SubjectsList)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Line } from 'react-chartjs-2'\r\n\r\nclass Graph extends React.Component {\r\n  render() {\r\n    this.getDatasets()\r\n    return(\r\n      <div className=\"secondary-container\">\r\n        <div className=\"graph\" id=\"graph\">\r\n          <h2>График</h2>\r\n          <Line \r\n              data={{\r\n                labels: this.getLabels(),\r\n                datasets: this.getDatasets()\r\n              }} \r\n              width={this.props.uiWidth - 85}\r\n              redraw={true}\r\n              height={200}\r\n              options={this.graphOptions}\r\n              plugins={this.graphPlugins}\r\n            />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  graphColors = [\"#92e084\", \"#e08492\", \"#86a2e3\",\r\n            \"#c287e6\", \"#e0aa84\", \"#83cae0\",\r\n            \"#c7e07a\", \"#52e3c1\", \"#e0b051\",\r\n            \"#e6d779\"]\r\n\r\n  graphOptions = { \r\n    maintainAspectRatio: true,\r\n    scales: {\r\n      yAxes: [{\r\n        ticks: {\r\n          beginAtZero: true\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: \"Набранные очки\",\r\n          fontSize: 16\r\n        }\r\n      }]\r\n    },\r\n    legend: {\r\n      labels: {\r\n        fontSize: 16\r\n      }\r\n    },\r\n    animation: false,\r\n    layout: {\r\n      padding: 1\r\n    }\r\n  }\r\n\r\n  graphPlugins = [{\r\n    beforeDraw: function(chartInstance, easing) {\r\n      var ctx = chartInstance.chart.ctx\r\n      ctx.fillStyle = 'white' // Меняем цвет здесь\r\n      ctx.fillRect(0, 0, 1920, 1080)\r\n    }\r\n  }]\r\n\r\n  getDatasets = () => {\r\n    let { players, maxQuestions } = this.props\r\n    let arr = [] //будущий dataset\r\n    for (let i = 0; i < players.length; i++) { // Для каждого игрока\r\n        let playerData = {}\r\n        playerData.label = players[i].name // Заполняем имя\r\n        playerData.backgroundColor = this.graphColors[i] // Указываем цвет фона\r\n        playerData.borderColor = this.graphColors[i] // Указываем цвет границы\r\n        playerData.fill = false // Отменяем заливку\r\n        // Превращаем очки за вопрос в сумму очков на момент вопроса\r\n        let scores = []\r\n        scores.push(0)\r\n        for (let y = 1; y < (maxQuestions + 2); y++) {\r\n            let score = players[i].answers[y - 1]\r\n            // Если очки на этом вопросе не были начислены\r\n            if (score === undefined) { \r\n              score = scores[y - 1]\r\n            }\r\n            // Если очки на этом вопросе были начислены, то\r\n            // добавляем их к сумме предыдущих очков\r\n            else {\r\n                score += scores[y - 1]\r\n            }\r\n            scores.push(score)\r\n        }\r\n        playerData.data = scores\r\n        arr.push({...playerData})\r\n    }\r\n    return arr\r\n  }\r\n\r\n  getLabels = () => {\r\n    let labels = []\r\n    for (let i = 0; i < (this.props.maxQuestions + 2); i++) {\r\n        labels.push(i)\r\n    }\r\n    return labels\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    players: state.game.players,\r\n    maxQuestions: state.game.subjects.length * state.settings.numberOfQuestions,\r\n    uiWidth: state.settings.uiWidth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Graph)","import React from 'react'\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"secondary-container\">\r\n        <div className=\"about\">\r\n          <h2>SIGMA X v2</h2>\r\n          <h4>Svoya Igra Game Manager Application by ExConfessor</h4>\r\n          <div className=\"links\">\r\n            <div><a href=\"https://exconf.github.io/sigma-x-react/\" target=\"_blank\">Браузерная версия</a></div>\r\n            <div> | </div>\r\n            <div><a href=\"https://github.com/eXConf/sigma-x-2/releases/\" target=\"_blank\"> Десктопная версия</a></div>\r\n            <div> | </div>\r\n            <div><a href=\"https://donatepay.ru/don/DomovinaOpen\" target=\"_blank\">Помочь автору</a></div>\r\n          </div>\r\n          <h3>Советы</h3>\r\n          <div className=\"advices\">\r\n            <ul>\r\n              <li>\r\n                Браузерную версию SIGMA X можно использовать и в режиме оффлайн. Для этого установите её как веб-приложение, воспользовавшись иконкой в правой части адресной строки браузера (или соответствующим пунктом меню в мобильном браузере).\r\n              </li>\r\n              <li>\r\n                Счёт и все настройки сохраняются после закрытия. Чтобы обнулить счёт, начните новую игру из меню слева.\r\n              </li>\r\n              <li>\r\n                Нажмите на иконку сигмы (Σ) слева от счёта, чтобы скопировать текущий счёт в буфер обмена.\r\n              </li>\r\n              <li>\r\n                Нажмите на текущий номер темы и вопроса в блоке навигации, чтобы: в браузерной версии — скопировать \"отбивку\" (номер темы и ее название, стоимость вопроса) в буфер обмена; в десктопной версии — отправить \"отбивку\" в последнее активное окно.\r\n              </li>\r\n              \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setTheme } from '../actions'\r\n\r\nclass Themes extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"secondary-container\">\r\n        <h2>Темы оформления</h2>\r\n        <div className=\"themes\">\r\n          {this.renderThemes()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderThemes = () => {\r\n    const { themes, activeTheme } = this.props\r\n    return themes.map((theme, index) => {\r\n      const isActive = index === activeTheme ? 'active' : ''\r\n      const isCurrent = index === activeTheme ? '(текущая)' : ''\r\n      const { colors } = theme\r\n      return (\r\n        <div \r\n          className={`theme ${isActive}`} \r\n          key={theme.name}\r\n          onClick={() => this.props.setTheme(index)}\r\n        >\r\n          <div className=\"theme-name\">\r\n            {`${theme.name} ${isCurrent}`}\r\n          </div>\r\n          <div \r\n            className=\"theme-colors\"\r\n            style={{\r\n              // backgroundColor: 'red'\r\n              background: `linear-gradient(to right, ${colors[0]} 12.5%, 12.5%, ${colors[1]} 25%, 25%, ${colors[2]} 37.5%, 37.5%, ${colors[3]} 50%, 50%, ${colors[4]} 62.5%, 62.5%, ${colors[5]} 75%, 75%, ${colors[6]} 87.5%, 87.5%, ${colors[7]})`\r\n            }}\r\n          >\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    activeTheme: state.settings.activeTheme,\r\n    themes: state.settings.themes\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setTheme})(Themes)","import React from 'react'\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport history from '../history'\r\nimport { connect } from 'react-redux'\r\nimport { setUIGameWidth, loadStateFromLocalStorage, setTheme } from '../actions'\r\nimport Menu from './Menu'\r\nimport Game from './Game'\r\nimport NewGame from './NewGame'\r\nimport SubjectsList from './SubjectsList'\r\nimport Graph from './Graph'\r\nimport About from './About'\r\nimport Themes from './Themes'\r\n\r\nclass App extends React.Component {\r\n  \r\n  state = {menuEnabled: true}\r\n\r\n  componentDidMount() {\r\n    const width = document.body.offsetWidth\r\n    this.setState({menuEnabled: true})\r\n    this.props.setUIGameWidth(width)\r\n    window.addEventListener('resize', this.onPageResize)\r\n    this.props.loadStateFromLocalStorage()\r\n    this.props.setTheme()\r\n  }\r\n\r\n  onPageResize = () => {\r\n    this.props.setUIGameWidth(document.body.offsetWidth)\r\n  }\r\n\r\n  switchMenuState = () => {\r\n    this.setState({menuEnabled: !this.state.menuEnabled})\r\n  }\r\n\r\n  renderMenuSwitcher = () => {\r\n    if (!this.state.menuEnabled) {\r\n      return (\r\n        <div \r\n         className=\"menu-switcher\"\r\n         onClick={() => {\r\n           this.switchMenuState()\r\n         }}\r\n        >\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"container\">\r\n        <Router history={history}>\r\n          {this.state.menuEnabled === true ? \r\n          <div className=\"menu-container\">\r\n            <Menu switchMenuState={this.switchMenuState} />\r\n          </div> : this.renderMenuSwitcher()}\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Game \r\n                switchMenuState={this.switchMenuState}\r\n                menuEnabled={this.state.menuEnabled} \r\n              />\r\n            </Route>\r\n            <Route path=\"/newgame\">\r\n              <NewGame />\r\n            </Route>\r\n            <Route path=\"/subjects\">\r\n              <SubjectsList />\r\n            </Route>\r\n            <Route path=\"/graph\">\r\n              <Graph />\r\n            </Route>\r\n            <Route path=\"/theme\">\r\n              <Themes />\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nexport default connect(null, {setUIGameWidth, loadStateFromLocalStorage, setTheme})(App)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nimport reducers from './reducers'\r\nimport App from './components/App'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n)\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}