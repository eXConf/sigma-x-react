{"version":3,"sources":["reducers/settingsReducer.js","reducers/gameReducer.js","reducers/index.js","actions/types.js","components/MenuItem.js","components/Menu.js","components/Subject.js","actions/index.js","components/Price.js","components/Question.js","components/SubjectBlock.js","components/SummaryBlock.js","components/PlayerControl.js","components/ControlsBlock.js","components/NavigationBlock.js","components/PackageBlock.js","components/Game.js","components/App.js","index.js"],"names":["INITITAL_STATE","numberOfPlayers","numberOfQuestions","priceMultiplier","players","currentQuestionNum","subjects","subjectNames","combineReducers","settings","state","action","type","payload","game","console","log","MenuItem","className","React","Component","Menu","onClick","props","switchMenuState","Subject","Fragment","colSpan","this","subjectName","connect","setCurrentQuestionNum","num","Price","price","Question","renderPlayerScoreCell","id","Array","map","el","index","key","getPlayerScore","player","questionID","answers","isActive","SubjectBlock","renderQuestions","subjectID","renderSubject","SummaryBlock","calcPlayerSum","scores","length","reduce","acc","current","renderPlayerSum","PlayerControl","name","playerID","renderNameInput","size","value","onChange","e","preventDefault","setState","target","setPlayerName","onKeyPress","blur","renderPlayerScoreButton","sign","currentPrice","setPlayerAnswer","score","dispatch","getState","currentScore","ControlsBlock","renderPlayerControls","NavigationBlock","scrollToCurrentQuestion","document","querySelector","scrollIntoView","block","behavior","onNextClicked","numberOfSubjects","addSubject","onPrevClicked","getCurrentNav","subjectNum","Math","floor","questionNum","newSubjectNumber","newSubjectName","push","PackageBlock","cols","rows","Game","renderSubjectBlocks","subject","renderMenuSwitcher","menuEnabled","createPlayers","numOfPlayers","i","team","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render"],"mappings":"iOAMMA,EAAiB,CACrBC,gBAAiB,EACjBC,kBAAmB,EACnBC,gBAAiB,ICDbH,EAAiB,CACrBI,QAAS,GACTC,mBAAoB,EACpBC,SAAU,CAAC,8BAAW,8BAAW,8BAAW,6BAAU,8BACtDC,aAAc,ICRDC,cAAgB,CAC7BC,SFOa,WAAqC,IAApCC,EAAmC,uDAA3BV,EAAgBW,EAAW,uCACjD,OAAOA,EAAOC,MACZ,IGd8B,qBHe5B,OAAO,YAAC,eAAIF,GAAZ,IAAmBT,gBAAiBU,EAAOE,UAC7C,IGfgC,uBHgB9B,OAAO,YAAC,eAAIH,GAAZ,IAAmBR,kBAAmBS,EAAOE,UAC/C,IGhBgC,uBHiB9B,OAAO,YAAC,eAAIH,GAAZ,IAAmBP,gBAAiBQ,EAAOE,UAC7C,QACE,OAAOH,IEfXI,KDSa,WAAqC,IAApCJ,EAAmC,uDAA3BV,EAAgBW,EAAW,uCACzCE,EAAYF,EAAZE,QAER,OAAOF,EAAOC,MACZ,IEfyB,gBFkBzB,IEjB2B,kBFkBzB,OAAO,2BAAIF,GAAX,IAAkBN,QAASS,IAE7B,IEhBoC,2BFiBlC,OAAO,2BAAIH,GAAX,IAAkBL,mBAAoBQ,IAExC,IElB6B,oBFmB3B,OAAO,2BAAIH,GAAX,IAAkBN,QAASS,IAE7B,IExBuB,cF0BvB,OADAE,QAAQC,IAAR,2BAAgBN,GAAhB,IAAuBJ,SAAUO,KAC1B,2BAAIH,GAAX,IAAkBJ,SAAUO,IAC5B,QACE,OAAOH,M,4BGtBEO,E,uKARX,OACE,6BACE,4BAAQC,UAAU,aAAlB,c,GALeC,IAAMC,WCsBdC,E,uKAnBH,IAAD,OACP,OACE,yBAAKH,UAAU,QACb,4BACEA,UAAU,gBACVI,QAAS,WACP,EAAKC,MAAMC,oBAGb,uBAAGN,UAAU,yBAEf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAfWC,IAAMC,W,OCAnBK,E,uKAGF,OACE,kBAAC,IAAMC,SAAP,KACE,4BACE,wBAAIC,QAASC,KAAKL,MAAMtB,gBAAkB,EAAGiB,UAAU,WACpDU,KAAKL,MAAMM,mB,GAPFV,IAAMC,WAqBbU,eANS,SAACpB,GACvB,MAAQ,CACNT,gBAAiBS,EAAMD,SAASR,mBAII,GAAzB6B,CAA6BL,GCI/BM,EAAwB,SAACC,GACpC,MAAQ,CAAEpB,KJpB4B,2BIoBIC,QAASmB,IChBtCC,E,uKARX,OACE,wBAAIf,UAAU,SACXU,KAAKL,MAAMW,W,GALAf,IAAMC,WCGpBe,E,4MAEJC,sBAAwB,WAAO,IAAD,EACI,EAAKb,MAA7Bc,EADoB,EACpBA,GAAIpC,EADgB,EAChBA,gBACZ,OAAO,YAAIqC,MAAMrC,IAAkBsC,KACjC,SAACC,EAAIC,GACH,OACE,wBACEvB,UAAU,eACVwB,IAAG,UAAKL,EAAL,YAAWI,IAEb,EAAKE,eAAe,CAACC,OAAQH,EAAOI,WAAYR,S,EAO3DM,eAAiB,YAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WACjBzC,EAAY,EAAKmB,MAAjBnB,QACR,GAAKA,EAAQwC,GAIb,OADexC,EAAQwC,GAAQE,QAAQD,I,EAIzCE,SAAW,WACT,OACE,EAAKxB,MAAMlB,qBAAuB,EAAKkB,MAAMc,GAAK,SAAW,I,EAIjEf,QAAU,WACR,EAAKC,MAAMQ,sBAAsB,EAAKR,MAAMc,K,uDAGpC,IAAD,OACP,OACE,wBACEf,QAAS,kBAAM,EAAKA,WACpBJ,UAAS,mBAAcU,KAAKmB,WAAnB,aAAkCnB,KAAKL,MAAMc,KAEtD,kBAAC,EAAD,CAAOH,MAAON,KAAKL,MAAMW,QACxBN,KAAKQ,6B,GA5CSjB,IAAMC,WA0DdU,eARS,SAACpB,GACvB,MAAQ,CACNT,gBAAiBS,EAAMD,SAASR,gBAChCG,QAASM,EAAMI,KAAKV,QACpBC,mBAAoBK,EAAMI,KAAKT,sBAIK,CAAC0B,yBAA1BD,CAAkDK,GC1D3Da,E,4MAEJC,gBAAkB,WAAO,IAAD,EACkC,EAAK1B,MAAtD2B,EADe,EACfA,UAAWhD,EADI,EACJA,kBAAmBC,EADf,EACeA,gBACrC,OAAO,YAAImC,MAAM,EAAKf,MAAMrB,oBAAoBqC,KAC9C,SAACC,EAAIC,GACH,IAAMI,EAAaK,EAAYhD,EAAoBuC,EAC7CP,GAASO,EAAQ,GAAKtC,EAC5B,OACE,kBAAC,EAAD,CAAUuC,IAAKG,EAAYR,GAAIQ,EAAYX,MAAOA,Q,EAM1DiB,cAAgB,WACd,OACE,kBAAC,EAAD,CACEtB,YAAa,EAAKN,MAAMM,YACxBqB,UAAW,EAAK3B,MAAM2B,a,uDAM1B,OACE,kBAAC,IAAMxB,SAAP,KACGE,KAAKuB,gBACLvB,KAAKqB,uB,GA5Ba9B,IAAMC,WA0ClBU,eAPS,SAACpB,GACvB,MAAQ,CACNR,kBAAmBQ,EAAMD,SAASP,kBAClCC,gBAAiBO,EAAMD,SAASN,mBAII,GAAzB2B,CAA6BkB,GC5CtCI,E,4MAEJC,cAAgB,SAACZ,GACf,IAAK,EAAKlB,MAAMnB,QAAQqC,GACtB,OAAO,EAET,IAAMa,EAAS,EAAK/B,MAAMnB,QAAQqC,GAAOK,QACzC,OAAsB,IAAlBQ,EAAOC,OACF,EAEGD,EAAOE,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,MACpC,G,EAGhBC,gBAAkB,WAChB,OAAO,YAAIrB,MAAM,EAAKf,MAAMtB,kBAAkBsC,KAC5C,SAACC,EAAIC,GACH,OACE,wBAAIC,IAAG,WAAMD,GAASvB,UAAU,cAC7B,EAAKmC,cAAcZ,Q,uDAQ5B,OACC,kBAAC,IAAMf,SAAP,KACG,4BACE,wBAAIC,QAASC,KAAKL,MAAMtB,gBAAkB,EAAGiB,UAAU,aAEzD,4BACE,wBAAIA,UAAU,SAAd,UACCU,KAAK+B,wB,GAlCWxC,IAAMC,WAgDlBU,eAPS,SAACpB,GACvB,MAAQ,CACNT,gBAAiBS,EAAMD,SAASR,gBAChCG,QAASM,EAAMI,KAAKV,WAIgB,GAAzB0B,CAA6BsB,GC/CtCQ,E,4MACJlD,MAAQ,CAACmD,KAAK,kCAAD,OAAW,EAAKtC,MAAMuC,SAAW,I,EAE9CC,gBAAkB,WAChB,OACE,2BACI7C,UAAU,cACV8C,KAAK,KACLpD,KAAK,OACLqD,MAAO,EAAKvD,MAAMmD,KAClBK,SAAU,SAACC,GACTA,EAAEC,iBACF,EAAKC,SAAS,CAACR,KAAMM,EAAEG,OAAOL,QAC9B,EAAK1C,MAAMgD,cACT,CAACV,KAAMM,EAAEG,OAAOL,MAAO5B,GAAI,EAAKd,MAAMuC,YAG1CU,WAAY,SAACL,GACG,UAAVA,EAAEzB,KACJyB,EAAEG,OAAOG,W,EAOrBC,wBAA0B,SAACC,GACzB,OACE,yBACEzD,UAAS,wBAAmByD,GAC5BrD,QAAS,WACP,IAAMsD,GAAgB,EAAKrD,MAAMlB,mBAC/B,EAAKkB,MAAMrB,kBAAoB,GAAK,EAAKqB,MAAMpB,gBACjD,EAAKoB,MAAMsD,gBAAgB,CACzBf,SAAU,EAAKvC,MAAMuC,SACrBjB,WAAY,EAAKtB,MAAMlB,mBACvByE,MAAgB,SAATH,EAAkBC,GAAgBA,MAI7C,uBAAG1D,UAAS,iBAAYyD,EAAZ,e,uDAMhB,OACE,yBAAKzD,UAAU,kBACZU,KAAK8C,wBAAwB,QAC7B9C,KAAKmC,kBACLnC,KAAK8C,wBAAwB,c,GAlDVvD,IAAMC,WAiEnBU,eATS,SAACpB,GACvB,MAAQ,CACNN,QAASM,EAAMI,KAAKV,QACpBC,mBAAoBK,EAAMI,KAAKT,mBAC/BH,kBAAmBQ,EAAMD,SAASP,kBAClCC,gBAAiBO,EAAMD,SAASN,mBAKf,CAAEoE,cLzBM,SAAC,GAAD,IAAGV,EAAH,EAAGA,KAAMxB,EAAT,EAASA,GAAT,OAAiB,SAAC0C,EAAUC,GAAc,IAC7D5E,EAAY4E,IAAWlE,KAAvBV,QACRA,EAAQiC,GAAIwB,KAAOA,EACnBkB,EAAS,CAAEnE,KJ3CkB,kBI2CKC,QAAQ,eAAKT,OKsBXyE,gBLlBpC,SAAC,GAAD,IAAGf,EAAH,EAAGA,SAAUjB,EAAb,EAAaA,WAAYiC,EAAzB,EAAyBA,MAAzB,OAAoC,SAACC,EAAUC,GAAc,IACrD5E,EAAY4E,IAAWlE,KAAvBV,QACF6E,EAAe7E,EAAQ0D,GAAUhB,QAAQD,GAE7CzC,EAAQ0D,GAAUhB,QAAQD,GADxBiC,IAAUG,EAC4B,KAEAH,EAE1CC,EAAS,CACPnE,KJnD6B,oBIoD7BC,QAAQ,eAAKT,QKOF0B,CAEX8B,GCnEEsB,E,4MAEJC,qBAAuB,WACrB,OAAO,YAAI7C,MAAM,EAAKf,MAAMtB,kBAAkBsC,KAC5C,SAACC,EAAIC,GACH,OACE,wBAAIC,IAAG,aAAQD,IAAS,kBAAC,EAAD,CAAeqB,SAAUrB,S,uDAOvD,OACE,wBAAIvB,UAAU,kBACZ,6BACCU,KAAKuD,4B,GAhBchE,IAAMC,WA4BnBU,eANS,SAACpB,GACvB,MAAQ,CACNT,gBAAiBS,EAAMD,SAASR,mBAII,GAAzB6B,CAA6BoD,GC5BtCE,E,4MAEJC,wBAA0B,WAEtBC,SAASC,cAAT,YAA4B,EAAKhE,MAAMlB,qBAC1BmF,eAAe,CAACC,MAAO,SAAUC,SAAU,Y,EAG5DC,cAAgB,WAAO,IAAD,EAOhB,EAAKpE,MALPQ,EAFkB,EAElBA,sBACA1B,EAHkB,EAGlBA,mBACAuF,EAJkB,EAIlBA,iBACA1F,EALkB,EAKlBA,kBACA2F,EANkB,EAMlBA,WAEExF,EAAqB,IAAMuF,EAAmB1F,GAChD2F,IAEF9D,EAAsB1B,EAAqB,GAC3C,EAAKgF,2B,EAGPS,cAAgB,WACwB,IAAlC,EAAKvE,MAAMlB,qBAGf,EAAKkB,MAAMQ,sBAAsB,EAAKR,MAAMlB,mBAAqB,GACjE,EAAKgF,4B,EAGPU,cAAgB,WAAO,IAAD,EAC4B,EAAKxE,MAA9ClB,EADa,EACbA,mBAAoBH,EADP,EACOA,kBACrB8F,EAAaC,KAAKC,MAAM7F,EAAqBH,GAAqB,EAClEiG,EAAe9F,EAAqBH,EAAqB,EAC/D,MAAM,GAAN,OAAU8F,EAAV,YAAwBG,I,uDAGhB,IAAD,OACP,OACE,4BACE,wBAAIxE,QAASC,KAAKL,MAAMtB,gBAAkB,GACxC,yBAAKiB,UAAU,oBACb,4BACEI,QAAS,kBAAM,EAAKwE,iBACpB5E,UAAU,oBACX,uBAAGA,UAAU,yBACd,4BAAQA,UAAU,uBACfU,KAAKmE,iBAER,4BACEzE,QAAS,kBAAM,EAAKqE,iBACpBzE,UAAU,oBACX,uBAAGA,UAAU,iC,GArDIC,IAAMC,WAsErBU,eATS,SAACpB,GACvB,MAAQ,CACNL,mBAAoBK,EAAMI,KAAKT,mBAC/BJ,gBAAiBS,EAAMD,SAASR,gBAChCC,kBAAmBQ,EAAMD,SAASP,kBAClC0F,iBAAkBlF,EAAMI,KAAKR,SAASiD,UAIF,CAACxB,wBAAuB8D,WPRtC,kBAAM,SAACd,EAAUC,GAAc,IAC/C1E,EAAa0E,IAAWlE,KAAxBR,SACF8F,EAAmB9F,EAASiD,OAAS,EACrC8C,EAAiBrB,IAAWlE,KAAKP,aAAa6F,IAA7B,oCACZA,GACX9F,EAASgG,KAAKD,GAEdtB,EAAS,CAAEnE,KJlEc,cIkEKC,QAAQ,YAAKP,QOC9BwB,CAA8DsD,GCvEvEmB,E,uKAGF,OACE,4BACE,wBAAI5E,QAASC,KAAKL,MAAMtB,gBAAkB,GACxC,8BAAUuG,KAAK,KAAKC,KAAK,KAAKvF,UAAU,kB,GANvBC,IAAMC,WAqBlBU,eANS,SAACpB,GACvB,MAAQ,CACNT,gBAAiBS,EAAMD,SAASR,mBAII,GAAzB6B,CAA6ByE,GCbtCG,E,4MAKJC,oBAAsB,WACpB,OAAO,EAAKpF,MAAMjB,SAASiC,KAAI,SAACqE,EAASnE,GACvC,OACE,kBAAC,EAAD,CACEZ,YAAa+E,EACblE,IAAKD,EACLS,UAAWT,Q,EAMnBoE,mBAAqB,WACnB,IAAK,EAAKtF,MAAMuF,YACd,OACE,yBACC5F,UAAU,gBACVI,QAAS,WACP,EAAKC,MAAMC,oBAGZ,uBAAGN,UAAU,2B,kEAxBnBU,KAAKL,MAAMwF,kB,+BA+BX,OACE,kBAAC,IAAMrF,SAAP,KACE,yBAAKR,UAAU,kBACZU,KAAKiF,qBACN,yBAAK3F,UAAU,cACb,2BAAOA,UAAU,gBACf,+BACGU,KAAK+E,yBAIZ,2BAAOzF,UAAU,gBACf,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,c,GAjDKC,IAAMC,WAmEVU,eATS,SAACpB,GACvB,MAAO,CACLL,mBAAoBK,EAAMI,KAAKT,mBAC/BC,SAAUI,EAAMI,KAAKR,SACrBC,aAAcG,EAAMI,KAAKP,aACzBN,gBAAiBS,EAAMD,SAASR,mBAII,CAAC8G,cT9CZ,kBAAM,SAAChC,EAAUC,GAG5C,IAFA,IAAMgC,EAAehC,IAAWvE,SAASR,gBACnCG,EAAU,GACP6G,EAAI,EAAGA,EAAID,EAAcC,IAChC7G,EAAQkG,KAAK,CACXzC,KAAK,kCAAD,OAAWoD,GACfC,KAAM,GACNpE,QAAS,KAGbiC,EAAS,CAAEnE,KJtCgB,gBIsCKC,QAAQ,GAAD,OAAMT,QSoChC0B,CAA0C4E,GChD1CS,E,4MAxBbzG,MAAQ,CAACoG,aAAa,G,EAKtBtF,gBAAkB,WAChB,EAAK6C,SAAS,CAACyC,aAAc,EAAKpG,MAAMoG,e,kEAJxClF,KAAKyC,SAAS,CAACyC,aAAa,M,+BAO5B,OACE,yBAAK5F,UAAU,cACe,IAA3BU,KAAKlB,MAAMoG,YACZ,yBAAK5F,UAAU,kBACb,kBAAC,EAAD,CAAMM,gBAAiBI,KAAKJ,mBACrB,KACT,kBAAC,EAAD,CACEA,gBAAiBI,KAAKJ,gBACtBsF,YAAalF,KAAKlB,MAAMoG,mB,GAnBhB3F,IAAMC,WCKlBgG,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YACZC,EACAN,EAAiBO,YAAgBC,OAInCC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFlC,SAASC,cAAc,Y","file":"static/js/main.55e29bf0.chunk.js","sourcesContent":["import { \r\n  SET_PLAYERS_NUMBER,\r\n  SET_QUESTIONS_NUMBER,\r\n  SET_PRICE_MULTIPLIER\r\n } from '../actions/types'\r\n\r\nconst INITITAL_STATE = {\r\n  numberOfPlayers: 4,\r\n  numberOfQuestions: 5,\r\n  priceMultiplier: 10\r\n}\r\n\r\nexport default (state = INITITAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case SET_PLAYERS_NUMBER:\r\n      return ({...state, numberOfPlayers: action.payload})\r\n    case SET_QUESTIONS_NUMBER:\r\n      return ({...state, numberOfQuestions: action.payload})\r\n    case SET_PRICE_MULTIPLIER:\r\n      return ({...state, priceMultiplier: action.payload})\r\n    default: \r\n      return state\r\n  }\r\n}","import { \r\n  ADD_SUBJECT,\r\n  SET_CURRENT_QUESTION_NUM,\r\n  SET_PLAYER_ANSWER,\r\n  CREATE_PLAYER,\r\n  SET_PLAYER_NAME\r\n } from '../actions/types'\r\n\r\nconst INITITAL_STATE = {\r\n  players: [],\r\n  currentQuestionNum: 0,\r\n  subjects: ['Тема #1', 'Тема #2', 'Тема #3', 'Тема 4', 'Тема 5'],\r\n  subjectNames: []\r\n}\r\n\r\nexport default (state = INITITAL_STATE, action) => {\r\n  const { payload } = action\r\n\r\n  switch(action.type) {\r\n    case CREATE_PLAYER:\r\n      return {...state, players: payload}\r\n    \r\n    case SET_PLAYER_NAME:\r\n      return {...state, players: payload}\r\n\r\n    case SET_CURRENT_QUESTION_NUM:\r\n      return {...state, currentQuestionNum: payload}\r\n\r\n    case SET_PLAYER_ANSWER: \r\n      return {...state, players: payload}\r\n\r\n    case ADD_SUBJECT:\r\n    console.log({...state, subjects: payload})  \r\n    return {...state, subjects: payload}\r\n    default: \r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport settingsReducer from './settingsReducer'\r\nimport gameReducer from './gameReducer'\r\n\r\nexport default combineReducers({\r\n  settings: settingsReducer,\r\n  game: gameReducer\r\n})","export const SET_PLAYERS_NUMBER = 'SET_PLAYERS_NUMBER'\r\nexport const SET_QUESTIONS_NUMBER = 'SET_QUESTIONS_NUMBER'\r\nexport const SET_PRICE_MULTIPLIER = 'SET_PRICE_MULTIPLIER'\r\n\r\nexport const CREATE_PLAYER = 'CREATE_PLAYER'\r\nexport const SET_PLAYER_NAME = 'SET_PLAYER_NAME'\r\n\r\nexport const ADD_SUBJECT = 'ADD_SUBJECT'\r\n\r\nexport const SET_CURRENT_QUESTION_NUM = 'SET_CURRENT_QUESTION_NUM'\r\nexport const SET_PLAYER_ANSWER = 'SET_PLAYER_ANSWER'","import React from 'react'\r\n\r\nclass MenuItem extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"menu-item\">mItem</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuItem","import React from 'react'\r\nimport MenuItem from './MenuItem'\r\n\r\nclass Menu extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menu\">\r\n        <button \r\n          className=\"hide-menu-btn\"\r\n          onClick={() => {\r\n            this.props.switchMenuState()\r\n          }}\r\n        >\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n        <MenuItem />\r\n        <MenuItem />\r\n        <MenuItem />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Subject extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <tr>\r\n          <td colSpan={this.props.numberOfPlayers + 1} className=\"subject\">\r\n            {this.props.subjectName}\r\n          </td>\r\n        </tr>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Subject)","import {\r\n  SET_PLAYERS_NUMBER,\r\n  SET_QUESTIONS_NUMBER,\r\n  SET_PRICE_MULTIPLIER,\r\n\r\n  CREATE_PLAYER,\r\n  SET_PLAYER_NAME,\r\n\r\n  SET_CURRENT_QUESTION_NUM,\r\n  SET_PLAYER_ANSWER,\r\n  ADD_SUBJECT\r\n} from './types'\r\n\r\n//#region SETTINGS\r\nexport const setPlayersNumber = (num) => (dispatch) => {\r\n  dispatch({ type: SET_PLAYERS_NUMBER, payload: num })\r\n}\r\n\r\nexport const setQuestionsNumber = (num) => (dispatch) => {\r\n  dispatch({ type: SET_QUESTIONS_NUMBER, payload: num })\r\n}\r\n\r\nexport const setPriceMultiplier = (multiplier) => {\r\n  return ({ type: SET_PRICE_MULTIPLIER, payload: multiplier })\r\n}\r\n\r\n//#endregion\r\n\r\nexport const setCurrentQuestionNum = (num) => {\r\n  return ({ type: SET_CURRENT_QUESTION_NUM, payload: num })\r\n}\r\n\r\nexport const createPlayers = () => (dispatch, getState) => {\r\n  const numOfPlayers = getState().settings.numberOfPlayers\r\n  const players = []\r\n  for (let i = 0; i < numOfPlayers; i++) {\r\n    players.push({\r\n      name: `Игрок ${i}`,\r\n      team: '',\r\n      answers: []\r\n    })\r\n  }\r\n  dispatch({ type: CREATE_PLAYER, payload: [...players] })\r\n}\r\n\r\nexport const setPlayerName = ({ name, id}) => (dispatch, getState) => {\r\n  const { players } = getState().game\r\n  players[id].name = name\r\n  dispatch({ type: SET_PLAYER_NAME, payload: {...players}})\r\n}\r\n\r\nexport const setPlayerAnswer = \r\n  ({ playerID, questionID, score}) => (dispatch, getState) => {\r\n  const { players } = getState().game\r\n  const currentScore = players[playerID].answers[questionID]\r\n  if (score === currentScore) {\r\n    players[playerID].answers[questionID] = null\r\n  } else {\r\n    players[playerID].answers[questionID] = score\r\n  }\r\n  dispatch({\r\n    type: SET_PLAYER_ANSWER,\r\n    payload: {...players}\r\n  })\r\n}\r\n\r\nexport const addSubject = () => (dispatch, getState) => {\r\n  const { subjects } = getState().game\r\n  const newSubjectNumber = subjects.length + 1\r\n  const newSubjectName = getState().game.subjectNames[newSubjectNumber] ||\r\n    `Тема #${newSubjectNumber}`\r\n  subjects.push(newSubjectName)\r\n  \r\n  dispatch({ type: ADD_SUBJECT, payload: [...subjects] })\r\n}","import React from 'react'\r\n\r\nclass Price extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <td className=\"price\">\r\n        {this.props.price}\r\n      </td>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Price","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentQuestionNum } from '../actions'\r\nimport Price from './Price'\r\n\r\nclass Question extends React.Component {\r\n\r\n  renderPlayerScoreCell = () => {\r\n    const { id, numberOfPlayers } = this.props\r\n    return [...Array(numberOfPlayers)].map(\r\n      (el, index) => {\r\n        return (\r\n          <td \r\n            className=\"player-score\"\r\n            key={`${id}.${index}`}\r\n          >\r\n            {this.getPlayerScore({player: index, questionID: id})}\r\n          </td>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  getPlayerScore = ({player, questionID}) => {\r\n    const { players } = this.props\r\n    if (!players[player]) {\r\n      return\r\n    }\r\n    const answer = players[player].answers[questionID]\r\n    return answer\r\n  }\r\n\r\n  isActive = () => {\r\n    return (\r\n      this.props.currentQuestionNum === this.props.id ? 'active' : ''\r\n    )\r\n  }\r\n\r\n  onClick = () => {\r\n    this.props.setCurrentQuestionNum(this.props.id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr \r\n        onClick={() => this.onClick()}\r\n        className={`question ${this.isActive()} q${this.props.id}`}\r\n      >\r\n        <Price price={this.props.price} />\r\n        {this.renderPlayerScoreCell()}\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    players: state.game.players,\r\n    currentQuestionNum: state.game.currentQuestionNum\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {setCurrentQuestionNum})(Question)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Subject from './Subject'\r\nimport Question from './Question'\r\n\r\nclass SubjectBlock extends React.Component {\r\n\r\n  renderQuestions = () => {\r\n    const {subjectID, numberOfQuestions, priceMultiplier} = this.props\r\n    return [...Array(this.props.numberOfQuestions)].map(\r\n      (el, index) => {\r\n        const questionID = subjectID * numberOfQuestions + index\r\n        const price = (index + 1) * priceMultiplier\r\n        return (\r\n          <Question key={questionID} id={questionID} price={price}/>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  renderSubject = () => {\r\n    return (\r\n      <Subject \r\n        subjectName={this.props.subjectName}\r\n        subjectID={this.props.subjectID}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.renderSubject()}\r\n        {this.renderQuestions()}\r\n      </React.Fragment>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfQuestions: state.settings.numberOfQuestions,\r\n    priceMultiplier: state.settings.priceMultiplier\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(SubjectBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass SummaryBlock extends React.Component {\r\n\r\n  calcPlayerSum = (index) => {\r\n    if (!this.props.players[index]) {\r\n      return 0\r\n    }\r\n    const scores = this.props.players[index].answers\r\n    if (scores.length === 0) {\r\n      return 0\r\n    }\r\n    const sum = scores.reduce((acc, current) => acc + current)\r\n    return sum || 0\r\n  }\r\n  \r\n  renderPlayerSum = () => {\r\n    return [...Array(this.props.numberOfPlayers)].map(\r\n      (el, index) => {\r\n        return (\r\n          <td key={`p${index}`} className=\"player-sum\">\r\n            {this.calcPlayerSum(index)}\r\n          </td>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     <React.Fragment>\r\n        <tr>\r\n          <td colSpan={this.props.numberOfPlayers + 1} className=\"divider\"></td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"sigma\">Σ</td>\r\n          {this.renderPlayerSum()}\r\n        </tr> \r\n     </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    players: state.game.players\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(SummaryBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setPlayerName, setPlayerAnswer } from '../actions'\r\n\r\nclass PlayerControl extends React.Component {\r\n  state = {name: `Игрок ${this.props.playerID + 1}`}\r\n\r\n  renderNameInput = () => {\r\n    return (\r\n      <input \r\n          className=\"player-name\" \r\n          size=\"10\"\r\n          type=\"text\"\r\n          value={this.state.name}\r\n          onChange={(e) => {\r\n            e.preventDefault()\r\n            this.setState({name: e.target.value})\r\n            this.props.setPlayerName(\r\n              {name: e.target.value, id: this.props.playerID}\r\n            )\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === 'Enter') {\r\n              e.target.blur()\r\n            }\r\n          }}\r\n        />\r\n    )\r\n  }\r\n\r\n  renderPlayerScoreButton = (sign) => {\r\n    return (\r\n      <div \r\n        className={`player-button ${sign}`}\r\n        onClick={() => {\r\n          const currentPrice = (this.props.currentQuestionNum % \r\n            this.props.numberOfQuestions + 1) * this.props.priceMultiplier\r\n          this.props.setPlayerAnswer({\r\n            playerID: this.props.playerID,\r\n            questionID: this.props.currentQuestionNum,\r\n            score: sign === 'plus' ? currentPrice : -currentPrice\r\n          })\r\n        }}\r\n      >\r\n        <i className={`fas fa-${sign}-square`}></i>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"player-control\">\r\n        {this.renderPlayerScoreButton('plus')}\r\n        {this.renderNameInput()}\r\n        {this.renderPlayerScoreButton('minus')}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    players: state.game.players,\r\n    currentQuestionNum: state.game.currentQuestionNum,\r\n    numberOfQuestions: state.settings.numberOfQuestions,\r\n    priceMultiplier: state.settings.priceMultiplier\r\n  })\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, { setPlayerName, setPlayerAnswer }\r\n  )(PlayerControl)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PlayerControl from './PlayerControl'\r\n\r\nclass ControlsBlock extends React.Component {\r\n\r\n  renderPlayerControls = () => {\r\n    return [...Array(this.props.numberOfPlayers)].map(\r\n      (el, index) => {\r\n        return (\r\n          <td key={`pc-${index}`}><PlayerControl playerID={index} /></td>\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr className=\"controls-block\">\r\n        <td></td>\r\n        {this.renderPlayerControls()}\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(ControlsBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentQuestionNum, addSubject } from '../actions'\r\n\r\nclass NavigationBlock extends React.Component {\r\n\r\n  scrollToCurrentQuestion = () => {\r\n    const activeQuestion = \r\n      document.querySelector(`.q${this.props.currentQuestionNum}`)\r\n    activeQuestion.scrollIntoView({block: 'center', behavior: 'smooth'})\r\n  }\r\n\r\n  onNextClicked = () => {\r\n    const { \r\n      setCurrentQuestionNum, \r\n      currentQuestionNum, \r\n      numberOfSubjects, \r\n      numberOfQuestions,\r\n      addSubject\r\n    } = this.props\r\n    if (currentQuestionNum + 2 === numberOfSubjects * numberOfQuestions) {\r\n      addSubject()\r\n    }\r\n    setCurrentQuestionNum(currentQuestionNum + 1)\r\n    this.scrollToCurrentQuestion()\r\n  }\r\n\r\n  onPrevClicked = () => {\r\n    if (this.props.currentQuestionNum === 0) {\r\n      return\r\n    }\r\n    this.props.setCurrentQuestionNum(this.props.currentQuestionNum - 1)\r\n    this.scrollToCurrentQuestion()\r\n  }\r\n\r\n  getCurrentNav = () => {\r\n    const {currentQuestionNum, numberOfQuestions} = this.props\r\n    const subjectNum = Math.floor(currentQuestionNum / numberOfQuestions) + 1\r\n    const questionNum = (currentQuestionNum % numberOfQuestions) + 1\r\n    return `${subjectNum}.${questionNum}`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td colSpan={this.props.numberOfPlayers + 1}>\r\n          <div className=\"navigation-block\">\r\n            <button \r\n              onClick={() => this.onPrevClicked()} \r\n              className=\"nav-btn nav-prev\"\r\n            ><i className=\"fas fa-chevron-left\"></i></button>\r\n            <button className=\"nav-btn nav-current\">\r\n              {this.getCurrentNav()}\r\n            </button>\r\n            <button \r\n              onClick={() => this.onNextClicked()} \r\n              className=\"nav-btn nav-next\"\r\n            ><i className=\"fas fa-chevron-right\"></i></button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    currentQuestionNum: state.game.currentQuestionNum,\r\n    numberOfPlayers: state.settings.numberOfPlayers,\r\n    numberOfQuestions: state.settings.numberOfQuestions,\r\n    numberOfSubjects: state.game.subjects.length\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {setCurrentQuestionNum, addSubject})(NavigationBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass PackageBlock extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td colSpan={this.props.numberOfPlayers + 1}>\r\n          <textarea cols=\"50\" rows=\"10\" className=\"package\">\r\n\r\n          </textarea>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    numberOfPlayers: state.settings.numberOfPlayers\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(PackageBlock)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport SubjectBlock from './SubjectBlock'\r\nimport SummaryBlock from './SummaryBlock'\r\nimport ControlsBlock from './ControlsBlock'\r\nimport NavigationBlock from './NavigationBlock'\r\nimport PackageBlock from './PackageBlock'\r\n\r\nimport { createPlayers } from '../actions'\r\n\r\nclass Game extends React.Component { \r\n  componentDidMount() {\r\n    this.props.createPlayers() \r\n  }\r\n\r\n  renderSubjectBlocks = () => {\r\n    return this.props.subjects.map((subject, index) => {\r\n      return (\r\n        <SubjectBlock \r\n          subjectName={subject}\r\n          key={index}\r\n          subjectID={index}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  renderMenuSwitcher = () => {\r\n    if (!this.props.menuEnabled) {\r\n      return (\r\n        <div \r\n         className=\"menu-switcher\"\r\n         onClick={() => {\r\n           this.props.switchMenuState()\r\n         }}\r\n        >\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main-container\">\r\n          {this.renderMenuSwitcher()}\r\n          <div className=\"scrollable\">\r\n            <table className=\"scores-block\">\r\n              <tbody>\r\n                {this.renderSubjectBlocks()}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <table className=\"scores-block\">\r\n            <tbody>\r\n              <SummaryBlock />\r\n              <ControlsBlock />\r\n              <NavigationBlock />\r\n              <PackageBlock />\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentQuestionNum: state.game.currentQuestionNum,\r\n    subjects: state.game.subjects,\r\n    subjectNames: state.game.subjectNames,\r\n    numberOfPlayers: state.settings.numberOfPlayers\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {createPlayers})(Game)","import React from 'react'\r\nimport Menu from './Menu'\r\nimport Game from './Game'\r\n\r\nclass App extends React.Component {\r\n  \r\n  state = {menuEnabled: true}\r\n  componentDidMount() {\r\n    this.setState({menuEnabled: false})\r\n  }\r\n\r\n  switchMenuState = () => {\r\n    this.setState({menuEnabled: !this.state.menuEnabled})\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.menuEnabled === true ? \r\n        <div className=\"menu-container\">\r\n          <Menu switchMenuState={this.switchMenuState} />\r\n        </div> : null}\r\n        <Game \r\n          switchMenuState={this.switchMenuState}\r\n          menuEnabled={this.state.menuEnabled} \r\n        />\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nimport reducers from './reducers'\r\nimport App from './components/App'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n)\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}